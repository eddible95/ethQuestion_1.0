{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Feed, Button, Header } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Post from '../ethereum/post';\nimport Layout from '../components/Layout';\nimport { Link, Router } from '../routes';\nimport PostRow from '../components/PostRow';\nimport web3 from '../ethereum/web3';\n\nvar FeedIndex =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FeedIndex, _Component);\n\n  function FeedIndex() {\n    _classCallCheck(this, FeedIndex);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FeedIndex).apply(this, arguments));\n  }\n\n  _createClass(FeedIndex, [{\n    key: \"handleClick\",\n    value: function () {\n      var _handleClick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(i) {\n        var accounts, deployedPosts, postLiked;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context.sent;\n                deployedPosts = this.props.deployedPosts;\n                postLiked = Post(deployedPosts[i]);\n                _context.prev = 5;\n                _context.next = 8;\n                return postLiked.methods.likePost().send({\n                  from: accounts[0]\n                });\n\n              case 8:\n                Router.pushRoute('/'); // Automatic redirect the user.\n\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](5);\n                //this.setState({ errorMessage: err.message });\n                console.log('error:', _context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[5, 11]]);\n      }));\n\n      function handleClick(_x) {\n        return _handleClick.apply(this, arguments);\n      }\n\n      return handleClick;\n    }()\n  }, {\n    key: \"renderPosts\",\n    value: function renderPosts() {\n      var _this = this;\n\n      var postsDeployed = this.props.summaries;\n      return postsDeployed.map(function (summary, index) {\n        return React.createElement(PostRow, {\n          key: index,\n          summary: summary,\n          onClick: function onClick() {\n            return _this.handleClick(summary[9]);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(\"div\", null, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, \"Questions Posted\"), React.createElement(Link, {\n        route: \"/new\"\n      }, React.createElement(\"a\", null, React.createElement(Button, {\n        floated: \"right\",\n        content: \"New Post\",\n        icon: \"add circle\",\n        primary: true\n      }))), React.createElement(Feed, {\n        size: \"large\"\n      }, this.renderPosts())));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var accounts, deployedPosts, deployedPostsCount, displayCount, posts, summaries, counter, i;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context2.sent;\n                _context2.next = 5;\n                return factory.methods.getDeployedPosts().call();\n\n              case 5:\n                deployedPosts = _context2.sent;\n                deployedPostsCount = deployedPosts.length; // Return 10 posts or less\n\n                displayCount = deployedPostsCount >= 10 ? 10 : deployedPostsCount;\n                posts = [];\n                summaries = [];\n                counter = deployedPostsCount - 1; // Get the last 10 posts:\n\n                i = 0;\n\n              case 12:\n                if (!(i < displayCount)) {\n                  _context2.next = 24;\n                  break;\n                }\n\n                posts[i] = Post(deployedPosts[counter]);\n                _context2.next = 16;\n                return posts[i].methods.getSummary().call();\n\n              case 16:\n                summaries[i] = _context2.sent;\n                _context2.next = 19;\n                return posts[i].methods.likes(accounts[0]).call();\n\n              case 19:\n                summaries[i][6] = _context2.sent;\n                counter--;\n\n              case 21:\n                i++;\n                _context2.next = 12;\n                break;\n\n              case 24:\n                return _context2.abrupt(\"return\", {\n                  summaries: summaries,\n                  posts: posts,\n                  deployedPosts: deployedPosts\n                });\n\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return FeedIndex;\n}(Component);\n\nexport default FeedIndex;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\index.js"],"names":["React","Component","Feed","Button","Header","factory","Post","Layout","Link","Router","PostRow","web3","FeedIndex","i","eth","getAccounts","accounts","deployedPosts","props","postLiked","methods","likePost","send","from","pushRoute","console","log","postsDeployed","summaries","map","summary","index","handleClick","renderPosts","getDeployedPosts","call","deployedPostsCount","length","displayCount","posts","counter","getSummary","likes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,mBAArC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,WAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;IAEMC,S;;;;;;;;;;;;;;;;gDAuBgBC,C;;;;;;;uBACSF,IAAI,CAACG,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACFC,gBAAAA,a,GAAgB,KAAKC,KAAL,CAAWD,a;AACzBE,gBAAAA,S,GAAYb,IAAI,CAACW,aAAa,CAACJ,CAAD,CAAd,C;;;uBAIZM,SAAS,CAACC,OAAV,CAAkBC,QAAlB,GACLC,IADK,CACA;AACFC,kBAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADZ,iBADA,C;;;AAKNP,gBAAAA,MAAM,CAACe,SAAP,CAAiB,GAAjB,E,CAAuB;;;;;;;;AAEvB;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;;;;;;;;;;;;;;;;;kCAIK;AAAA;;AACT,UAAMC,aAAa,GAAG,KAAKT,KAAL,CAAWU,SAAjC;AAEA,aAAOD,aAAa,CAACE,GAAd,CAAkB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACzC,eAAO,oBAAC,OAAD;AACH,UAAA,GAAG,EAAEA,KADF;AAEH,UAAA,OAAO,EAAED,OAFN;AAGH,UAAA,OAAO,EAAE;AAAA,mBAAM,KAAI,CAACE,WAAL,CAAiBF,OAAO,CAAC,CAAD,CAAxB,CAAN;AAAA;AAHN,UAAP;AAKH,OANM,CAAP;AAOH;;;6BAEQ;AACL,aACI,oBAAC,MAAD,QACI,iCACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,SAAS,EAAC;AAA1B,4BADJ,EAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC;AAAZ,SACI,+BACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,OAAhB;AAAwB,QAAA,OAAO,EAAC,UAAhC;AAA2C,QAAA,IAAI,EAAC,YAAhD;AAA6D,QAAA,OAAO;AAApE,QADJ,CADJ,CAJJ,EASI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,SACK,KAAKG,WAAL,EADL,CATJ,CADJ,CADJ;AAiBH;;;;;;;;;;;;;uBAtE0BtB,IAAI,CAACG,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;;uBAEsBX,OAAO,CAACe,OAAR,CAAgBc,gBAAhB,GAAmCC,IAAnC,E;;;AAAtBlB,gBAAAA,a;AACAmB,gBAAAA,kB,GAAqBnB,aAAa,CAACoB,M,EACzC;;AACMC,gBAAAA,Y,GAAgBF,kBAAkB,IAAI,EAAvB,GAA6B,EAA7B,GAAkCA,kB;AACnDG,gBAAAA,K,GAAQ,E;AACRX,gBAAAA,S,GAAY,E;AACZY,gBAAAA,O,GAAUJ,kBAAkB,GAAC,C,EAEjC;;AACUvB,gBAAAA,C,GAAE,C;;;sBAAGA,CAAC,GAACyB,Y;;;;;AACbC,gBAAAA,KAAK,CAAC1B,CAAD,CAAL,GAAWP,IAAI,CAACW,aAAa,CAACuB,OAAD,CAAd,CAAf;;uBACqBD,KAAK,CAAC1B,CAAD,CAAL,CAASO,OAAT,CAAiBqB,UAAjB,GAA8BN,IAA9B,E;;;AAArBP,gBAAAA,SAAS,CAACf,CAAD,C;;uBACe0B,KAAK,CAAC1B,CAAD,CAAL,CAASO,OAAT,CAAiBsB,KAAjB,CAAuB1B,QAAQ,CAAC,CAAD,CAA/B,EAAoCmB,IAApC,E;;;AAAxBP,gBAAAA,SAAS,CAACf,CAAD,CAAT,CAAa,CAAb,C;AACA2B,gBAAAA,OAAO;;;AAJoB3B,gBAAAA,CAAC,E;;;;;kDAOzB;AAAEe,kBAAAA,SAAS,EAATA,SAAF;AAAaW,kBAAAA,KAAK,EAALA,KAAb;AAAoBtB,kBAAAA,aAAa,EAAbA;AAApB,iB;;;;;;;;;;;;;;;;;;;EApBShB,S;;AA2ExB,eAAeW,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Feed, Button, Header } from 'semantic-ui-react';\r\nimport factory from '../ethereum/factory';\r\nimport Post from '../ethereum/post';\r\nimport Layout from '../components/Layout';\r\nimport {Link, Router} from '../routes'\r\nimport PostRow from '../components/PostRow';\r\nimport web3 from '../ethereum/web3'\r\n\r\nclass FeedIndex extends Component {\r\n    static async getInitialProps () {\r\n        const accounts = await web3.eth.getAccounts();\r\n        // Retrieve an array of all our deployed posts addresses.\r\n        const deployedPosts = await factory.methods.getDeployedPosts().call();\r\n        const deployedPostsCount = deployedPosts.length;\r\n        // Return 10 posts or less\r\n        const displayCount = (deployedPostsCount >= 10) ? 10 : deployedPostsCount;\r\n        let posts = [];\r\n        let summaries = [];\r\n        let counter = deployedPostsCount-1;\r\n\r\n        // Get the last 10 posts:\r\n        for ( let i=0; i<displayCount; i++ ){\r\n            posts[i] = Post(deployedPosts[counter]);\r\n            summaries[i] = await posts[i].methods.getSummary().call();\r\n            summaries[i][6] = await posts[i].methods.likes(accounts[0]).call();\r\n            counter--;\r\n        }\r\n\r\n        return { summaries, posts, deployedPosts };\r\n    }\r\n\r\n    async handleClick(i) {\r\n        const accounts = await web3.eth.getAccounts();\r\n        let deployedPosts = this.props.deployedPosts;\r\n        const postLiked = Post(deployedPosts[i]);\r\n\r\n        try {\r\n            // Like a post\r\n            await postLiked.methods.likePost()\r\n            .send({\r\n                from: accounts[0]\r\n            });\r\n\r\n            Router.pushRoute('/'); // Automatic redirect the user.\r\n        } catch (err) {\r\n            //this.setState({ errorMessage: err.message });\r\n            console.log('error:', err);\r\n        }\r\n    }\r\n\r\n    renderPosts(){\r\n        const postsDeployed = this.props.summaries;\r\n\r\n        return postsDeployed.map((summary, index) => {\r\n            return <PostRow\r\n                key={index}\r\n                summary={summary}\r\n                onClick={() => this.handleClick(summary[9])}\r\n            />;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <Header as='h2' textAlign='center'>\r\n                        Questions Posted\r\n                    </Header>\r\n                    <Link route=\"/new\">\r\n                        <a>\r\n                            <Button floated=\"right\" content=\"New Post\" icon=\"add circle\" primary />\r\n                        </a>\r\n                    </Link>\r\n                    <Feed size=\"large\">\r\n                        {this.renderPosts()}\r\n                    </Feed>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedIndex;\r\n"]},"metadata":{},"sourceType":"module"}