{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Dropdown, Header, Icon, Segment, Container, TextArea, Divider, Label, Modal, Loader } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport factory from '../ethereum/factory';\nimport Question from '../ethereum/question';\nimport Profile from '../ethereum/profile';\nimport web3 from '../ethereum/web3';\nimport credentials from '../ethereum/credentials';\nimport { Router } from '../routes';\nimport { getIpfsHash } from './ipfs';\n\nvar NewPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewPost, _Component);\n\n  function NewPost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewPost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewPost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      questionTitle: '',\n      content: '',\n      tag: [],\n      reward: '',\n      maxDuration: '',\n      errorMessage: '',\n      loading: false,\n      fileLoading: false,\n      buffer: null,\n      files_array: [],\n      fileHashes_array: [],\n      fileNames_array: [],\n      etherOptions: getEtherOptions(),\n      tagOptions: getTagOptions()\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              }); // Ensures all fields are filled\n\n\n              if (!(_this.checkFieldEmpty(_this.state.questionTitle) && _this.checkFieldEmpty(_this.state.content) && _this.checkFieldEmpty(_this.state.reward) && _this.checkFieldEmpty(_this.state.maxDuration))) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return web3.eth.getAccounts();\n\n            case 5:\n              accounts = _context.sent;\n              _context.next = 8;\n              return factory.methods.createQuestion(_this.state.questionTitle, _this.state.content, _this.state.tag, Number(_this.state.reward), _parseFloat(_this.state.maxDuration) * 60 * 60, _this.state.fileHashes_array, _this.state.fileNames_array).send({\n                from: accounts[0]\n              });\n\n            case 8:\n              Router.pushRoute('/home'); // Automatic redirect the user.\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n            case 14:\n              _this.setState({\n                loading: false\n              });\n\n              _context.next = 19;\n              break;\n\n            case 17:\n              _this.setState({\n                errorMessage: \"Required Field(s) Empty\"\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 11]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onFileSelected\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var reader, file, _this$state, files_array, fileNames_array, fileHashes_array;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // Access JavaScript FileReader() method for conversion to buffer\n              reader = new FileReader();\n              file = _this.fileInput.files[0];\n\n              _this.setState({\n                fileLoading: true\n              });\n\n              if (file instanceof Blob) {\n                _this$state = _this.state, files_array = _this$state.files_array, fileNames_array = _this$state.fileNames_array, fileHashes_array = _this$state.fileHashes_array;\n                files_array.push(file);\n                fileNames_array.push(file.name);\n\n                _this.setState({\n                  files_array: files_array,\n                  fileNames_array: fileNames_array\n                });\n\n                console.log(\"fileNames_array: \", fileNames_array);\n                reader.onloadend =\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee2() {\n                  var fileHash;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.next = 2;\n                          return _this.setState({\n                            fileUrl: reader.result,\n                            loadingFile: true,\n                            buffer: Buffer.from(reader.result) // File is converted to a buffer for upload to IPFS\n\n                          });\n\n                        case 2:\n                          if (!_this.state.buffer) {\n                            _context2.next = 8;\n                            break;\n                          }\n\n                          _context2.next = 5;\n                          return getIpfsHash(file);\n\n                        case 5:\n                          _context2.t0 = _context2.sent;\n                          _context2.next = 9;\n                          break;\n\n                        case 8:\n                          _context2.t0 = '0';\n\n                        case 9:\n                          fileHash = _context2.t0;\n                          fileHashes_array.push(fileHash);\n\n                          _this.setState({\n                            fileHashes_array: fileHashes_array\n                          });\n\n                          console.log(\"fileHashes_array: \", fileHashes_array);\n\n                          _this.setState({\n                            fileLoading: false\n                          });\n\n                        case 14:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n                reader.readAsDataURL(file);\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onFileRemoved\", function (file) {\n      var i = 0;\n      var _this$state2 = _this.state,\n          files_array = _this$state2.files_array,\n          fileHashes_array = _this$state2.fileHashes_array,\n          fileNames_array = _this$state2.fileNames_array;\n      console.log('file: ', file);\n\n      for (i = 0; i < files_array.length; i++) {\n        if (file === files_array[i]) {\n          files_array.splice(i, 1);\n          fileNames_array.splice(i, 1);\n          fileHashes_array.splice(i, 1);\n          break;\n        }\n      }\n\n      _this.setState({\n        files_array: files_array,\n        fileNames_array: fileNames_array,\n        fileHashes_array: fileHashes_array\n      });\n\n      console.log('fileNames_array', fileNames_array);\n      console.log(\"fileHashes_array: \", fileHashes_array);\n    });\n\n    return _this;\n  }\n\n  _createClass(NewPost, [{\n    key: \"componentWillMount\",\n    // Redirect E-Wallet that are not Logged In to the Login Page\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context4.sent;\n                _context4.next = 5;\n                return credentials.methods.getBinding(accounts[0]).call();\n\n              case 5:\n                _context4.t0 = _context4.sent;\n\n                if (!(_context4.t0 === \"\")) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                Router.pushRoute(\"/\"); // Automatic redirect the user to Login or Sign Up\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"checkFieldEmpty\",\n    value: function checkFieldEmpty(field) {\n      return field === \"\" ? false : true;\n    } // Submit the question to be stored on the Ethereum Blockchain\n\n  }, {\n    key: \"renderFilesUpload\",\n    value: function renderFilesUpload(files) {\n      var _this2 = this;\n\n      var files_array = this.state.files_array;\n\n      if (this.state.files_array.length == 0) {\n        return React.createElement(Segment, {\n          placeholder: true\n        }, React.createElement(Header, {\n          icon: true\n        }, React.createElement(Icon, {\n          name: \"images outline\"\n        }), \"No files are uploaded for this question\"), React.createElement(\"input\", {\n          style: {\n            display: 'none'\n          },\n          type: \"file\",\n          onChange: function onChange() {\n            return _this2.onFileSelected();\n          },\n          ref: function ref(fileInput) {\n            return _this2.fileInput = fileInput;\n          }\n        }), React.createElement(Button, {\n          primary: true,\n          onClick: function onClick() {\n            return _this2.fileInput.click();\n          },\n          loading: this.state.fileLoading\n        }, \"Upload Files\"));\n      } else {\n        return React.createElement(Segment, {\n          placeholder: true\n        }, React.createElement(\"center\", null, React.createElement(\"div\", {\n          style: {\n            marginBottom: '20px'\n          }\n        }, files), React.createElement(\"input\", {\n          style: {\n            display: 'none'\n          },\n          type: \"file\",\n          onChange: function onChange() {\n            return _this2.onFileSelected1();\n          },\n          ref: function ref(fileInput) {\n            return _this2.fileInput = fileInput;\n          }\n        }), React.createElement(Button, {\n          primary: true,\n          onClick: function onClick() {\n            return _this2.fileInput.click();\n          },\n          loading: this.state.fileLoading\n        }, \"Upload Files\")));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var files_array = this.state.files_array;\n      var elmFiles = null;\n      var options = [];\n      var tagOptions = [];\n\n      for (var i = 0; i < Number(this.props.token); i++) {\n        options.push({\n          key: i + 1,\n          text: i + 1,\n          value: i + 1\n        });\n      }\n\n      for (var i = 0; i < this.props.tags.length; i++) {\n        tagOptions.push({\n          key: i,\n          text: this.props.tags[i],\n          value: this.props.tags[i]\n        });\n      }\n\n      if (files_array !== null) {\n        elmFiles = files_array.map(function (item, index) {\n          return React.createElement(Label, {\n            as: \"a\",\n            key: index,\n            size: \"big\"\n          }, item.name, React.createElement(Icon, {\n            name: \"delete\",\n            onClick: function onClick() {\n              return _this3.onFileRemoved(item);\n            }\n          }));\n        });\n      }\n\n      return React.createElement(Layout, null, React.createElement(Container, {\n        style: {\n          height: \"100vh\"\n        }\n      }, React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(Segment, {\n        textAlign: \"center\",\n        as: \"h3\"\n      }, \"Creating Of New Question\"), React.createElement(Form, {\n        error: !!this.state.errorMessage,\n        style: {\n          marginTop: '10px'\n        }\n      }, React.createElement(Form.Field, {\n        required: true\n      }, React.createElement(\"label\", null, \"Question Title\"), React.createElement(Input, {\n        placeholder: \"Enter Title\",\n        value: this.state.questionTitle,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            questionTitle: event.target.value\n          });\n        }\n      })), React.createElement(Form.Field, {\n        required: true\n      }, React.createElement(\"label\", null, \"Question Description\"), React.createElement(TextArea, {\n        placeholder: \"Enter Description\",\n        value: this.state.content,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            content: event.target.value\n          });\n        }\n      })), React.createElement(Form.Field, null, React.createElement(\"label\", null, \"Tags (Separate each tag with a comma Example: math,logic)\"), React.createElement(Dropdown, {\n        clearable: true,\n        options: tagOptions,\n        selection: true,\n        multiple: true,\n        placeholder: \"Select from existing tags or create your own tags\",\n        value: this.state.tag,\n        onChange: function onChange(e, _ref4) {\n          var value = _ref4.value;\n          return _this3.setState({\n            tag: value\n          });\n        }\n      })), React.createElement(Form.Field, {\n        required: true\n      }, React.createElement(\"label\", null, \"Ether\"), React.createElement(Dropdown, {\n        clearable: true,\n        options: options,\n        selection: true,\n        placeholder: \"Select your value of reward\",\n        value: this.state.reward,\n        onClick: function onClick(event) {\n          return _this3.setState({\n            reward: event.target.value\n          });\n        }\n      })), React.createElement(Form.Field, {\n        required: true\n      }, React.createElement(\"label\", null, \"Maximum Duration\"), React.createElement(Input, {\n        label: \"hour(s)\",\n        labelPosition: \"right\",\n        value: this.state.maxDuration,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            maxDuration: event.target.value\n          });\n        }\n      })), React.createElement(Form.Field, null, this.renderFilesUpload(elmFiles)), React.createElement(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }), React.createElement(Modal, {\n        open: this.state.loading,\n        trigger: React.createElement(Button, {\n          primary: true,\n          onClick: this.onSubmit\n        }, \"Submit Question\"),\n        basic: true,\n        size: \"small\"\n      }, React.createElement(Header, {\n        content: \"Posting New Question\"\n      }), React.createElement(Modal.Content, null, React.createElement(\"p\", null, \"Please Confirm the MetaMask Transaction Request to submit your Question to the Block-Chain Network. Upon successful submission, you will be redirected to the Home Page. This process might take awhile.\"), React.createElement(Loader, {\n        active: true,\n        inline: \"centered\"\n      }, \"Loading\"))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var accounts, profile, token, deployedQuestions, deployedQuestionsCount, tags, i, question, summary;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context5.sent;\n                _context5.t0 = Profile;\n                _context5.next = 6;\n                return factory.methods.getProfile(accounts[0]).call();\n\n              case 6:\n                _context5.t1 = _context5.sent;\n                profile = (0, _context5.t0)(_context5.t1);\n                _context5.next = 10;\n                return profile.methods.getToken().call();\n\n              case 10:\n                token = _context5.sent;\n                _context5.next = 13;\n                return factory.methods.getDeployedQuestions().call();\n\n              case 13:\n                deployedQuestions = _context5.sent;\n                deployedQuestionsCount = deployedQuestions.length;\n                tags = [];\n                i = 0;\n\n              case 17:\n                if (!(i < deployedQuestionsCount)) {\n                  _context5.next = 26;\n                  break;\n                }\n\n                question = Question(deployedQuestions[i]);\n                _context5.next = 21;\n                return question.methods.getSummary().call();\n\n              case 21:\n                summary = _context5.sent;\n                tags = [].concat(_toConsumableArray(tags), _toConsumableArray(summary[8].split(\", \")));\n\n              case 23:\n                i++;\n                _context5.next = 17;\n                break;\n\n              case 26:\n                _context5.next = 28;\n                return credentials.methods.getBinding(accounts[0]).call();\n\n              case 28:\n                _context5.t2 = _context5.sent;\n\n                if (!(_context5.t2 === \"\")) {\n                  _context5.next = 31;\n                  break;\n                }\n\n                Router.pushRoute(\"/\"); // Automatic redirect the user to Login or Sign Up\n\n              case 31:\n                return _context5.abrupt(\"return\", {\n                  accounts: accounts,\n                  token: token,\n                  tags: tags\n                });\n\n              case 32:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return NewPost;\n}(Component);\n\nexport default NewPost;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\newQuestion.js"],"names":["React","Component","Form","Button","Input","Message","Dropdown","Header","Icon","Segment","Container","TextArea","Divider","Label","Modal","Loader","Layout","factory","Question","Profile","web3","credentials","Router","getIpfsHash","NewPost","questionTitle","content","tag","reward","maxDuration","errorMessage","loading","fileLoading","buffer","files_array","fileHashes_array","fileNames_array","etherOptions","getEtherOptions","tagOptions","getTagOptions","setState","checkFieldEmpty","state","eth","getAccounts","accounts","methods","createQuestion","Number","send","from","pushRoute","message","reader","FileReader","file","fileInput","files","Blob","push","name","console","log","onloadend","fileUrl","result","loadingFile","Buffer","fileHash","readAsDataURL","i","length","splice","getBinding","call","field","display","onFileSelected","click","marginBottom","onFileSelected1","elmFiles","options","props","token","key","text","value","tags","map","item","index","onFileRemoved","height","marginTop","event","target","e","renderFilesUpload","onSubmit","getProfile","profile","getToken","getDeployedQuestions","deployedQuestions","deployedQuestionsCount","question","getSummary","summary","split"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Button, Input, Message, Dropdown, Header,\r\n  Icon, Segment, Container, TextArea, Divider, Label, Modal, Loader } from 'semantic-ui-react';\r\nimport Layout from '../components/Layout';\r\nimport factory from '../ethereum/factory';\r\nimport Question from '../ethereum/question';\r\nimport Profile from '../ethereum/profile';\r\nimport web3 from '../ethereum/web3';\r\nimport credentials from '../ethereum/credentials';\r\nimport { Router } from '../routes';\r\nimport { getIpfsHash } from './ipfs';\r\n\r\nclass NewPost extends Component {\r\n    state = {\r\n        questionTitle: '',\r\n        content:'',\r\n        tag: [],\r\n        reward:'',\r\n        maxDuration:'',\r\n        errorMessage: '',\r\n        loading: false,\r\n        fileLoading: false,\r\n        buffer: null,\r\n        files_array: [],\r\n        fileHashes_array: [],\r\n        fileNames_array: [],\r\n        etherOptions: getEtherOptions(),\r\n        tagOptions: getTagOptions()\r\n    };\r\n\r\n    static async getInitialProps () {\r\n        const accounts = await web3.eth.getAccounts();\r\n        const profile = Profile(await factory.methods.getProfile(accounts[0]).call());\r\n        const token = await profile.methods.getToken().call();\r\n\r\n        // Retrieve previously used tags\r\n        let deployedQuestions = await factory.methods.getDeployedQuestions().call();\r\n        let deployedQuestionsCount = deployedQuestions.length;\r\n        let tags = [];\r\n        for(let i=0; i<deployedQuestionsCount; i++) {\r\n          let question = Question(deployedQuestions[i])\r\n          let summary = await question.methods.getSummary().call();\r\n          tags = [...tags, ...summary[8].split(\", \")];\r\n        }\r\n\r\n        if (await credentials.methods.getBinding(accounts[0]).call() === \"\"){\r\n            Router.pushRoute(`/`); // Automatic redirect the user to Login or Sign Up\r\n        }\r\n        return { accounts, token, tags }\r\n    }\r\n\r\n    // Redirect E-Wallet that are not Logged In to the Login Page\r\n    async componentWillMount() {\r\n      // Retrieve the Ethereum Account from MetaMask\r\n      const accounts = await web3.eth.getAccounts();\r\n      if (await credentials.methods.getBinding(accounts[0]).call() === \"\"){\r\n          Router.pushRoute(`/`); // Automatic redirect the user to Login or Sign Up\r\n      }\r\n    }\r\n\r\n    checkFieldEmpty(field){\r\n      return field === \"\" ? false : true;\r\n    }\r\n\r\n    // Submit the question to be stored on the Ethereum Blockchain\r\n    onSubmit = async () => {\r\n        this.setState({ loading: true, errorMessage: '' });\r\n        // Ensures all fields are filled\r\n        if (this.checkFieldEmpty(this.state.questionTitle) && this.checkFieldEmpty(this.state.content) && this.checkFieldEmpty(this.state.reward) && this.checkFieldEmpty(this.state.maxDuration)){\r\n          try {\r\n              const accounts = await web3.eth.getAccounts();\r\n              // Create a new post\r\n              await factory.methods\r\n              .createQuestion(this.state.questionTitle, this.state.content, this.state.tag, Number(this.state.reward), parseFloat(this.state.maxDuration) * 60 * 60,\r\n                this.state.fileHashes_array, this.state.fileNames_array)\r\n              .send({\r\n                  from: accounts[0]\r\n              });\r\n              Router.pushRoute('/home'); // Automatic redirect the user.\r\n          } catch (err) {\r\n              this.setState({ errorMessage: err.message });\r\n          }\r\n          this.setState({ loading: false });\r\n        } else {\r\n          this.setState({ errorMessage: \"Required Field(s) Empty\" });\r\n          this.setState({ loading: false });\r\n        }\r\n    };\r\n\r\n    // Select a file to upload\r\n    onFileSelected = async () => {\r\n        // Access JavaScript FileReader() method for conversion to buffer\r\n        const reader = new FileReader();\r\n        const file = this.fileInput.files[0];\r\n        this.setState({fileLoading: true});\r\n        if (file instanceof Blob ) {\r\n            let {files_array, fileNames_array, fileHashes_array} = this.state;\r\n            files_array.push(file);\r\n            fileNames_array.push(file.name);\r\n            this.setState({\r\n                files_array: files_array,\r\n                fileNames_array: fileNames_array\r\n            });\r\n            console.log(\"fileNames_array: \", fileNames_array);\r\n            reader.onloadend = async () => {\r\n                await this.setState({\r\n                    fileUrl: reader.result,\r\n                    loadingFile: true,\r\n                    buffer: Buffer.from(reader.result) // File is converted to a buffer for upload to IPFS\r\n                });\r\n                const fileHash = this.state.buffer ? (await getIpfsHash(file)) : '0';\r\n                fileHashes_array.push(fileHash);\r\n                this.setState({ fileHashes_array: fileHashes_array });\r\n                console.log(\"fileHashes_array: \", fileHashes_array);\r\n                this.setState({fileLoading: false});\r\n            }\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    // Remove a previously selected file to upload\r\n    onFileRemoved = (file) => {\r\n        var i = 0;\r\n        let {files_array, fileHashes_array, fileNames_array} = this.state;\r\n        console.log('file: ', file);\r\n        for (i = 0 ; i < files_array.length ; i++) {\r\n            if (file === files_array[i]) {\r\n                files_array.splice(i, 1);\r\n                fileNames_array.splice(i, 1);\r\n                fileHashes_array.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.setState({\r\n            files_array: files_array,\r\n            fileNames_array: fileNames_array,\r\n            fileHashes_array: fileHashes_array\r\n        });\r\n        console.log('fileNames_array', fileNames_array);\r\n        console.log(\"fileHashes_array: \", fileHashes_array);\r\n    }\r\n\r\n    renderFilesUpload(files) {\r\n      let {files_array} = this.state;\r\n      if(this.state.files_array.length == 0){\r\n        return (\r\n          <Segment placeholder>\r\n            <Header icon>\r\n              <Icon name='images outline' />\r\n              No files are uploaded for this question\r\n            </Header>\r\n            <input\r\n                style={{ display: 'none' }}\r\n                type='file'\r\n                onChange={() => this.onFileSelected()}\r\n                ref={fileInput => this.fileInput = fileInput}/>\r\n            <Button primary onClick={() => this.fileInput.click()} loading={this.state.fileLoading}>Upload Files</Button>\r\n          </Segment>\r\n        )\r\n      } else {\r\n        return (\r\n          <Segment placeholder>\r\n            <center>\r\n                <div style={{marginBottom: '20px'}}>\r\n                    {files}\r\n                </div>\r\n                <input\r\n                    style={{ display: 'none' }}\r\n                    type='file'\r\n                    onChange={() => this.onFileSelected1()}\r\n                    ref={fileInput => this.fileInput = fileInput}/>\r\n                <Button primary onClick={() => this.fileInput.click()} loading={this.state.fileLoading}>Upload Files</Button>\r\n            </center>\r\n          </Segment>\r\n        )\r\n      }\r\n    };\r\n\r\n    render() {\r\n        let {files_array} = this.state;\r\n        let elmFiles = null;\r\n        let options = [];\r\n        let tagOptions = [];\r\n\r\n        for (var i = 0; i < Number(this.props.token); i++) {\r\n            options.push({\r\n                key: i+1,\r\n                text: i+1,\r\n                value: i+1\r\n            });\r\n        }\r\n\r\n        for (var i = 0; i <this.props.tags.length; i++) {\r\n            tagOptions.push({\r\n                key: i,\r\n                text: this.props.tags[i],\r\n                value: this.props.tags[i]\r\n            });\r\n        }\r\n\r\n        if (files_array !== null) {\r\n            elmFiles = files_array.map((item, index) =>\r\n                <Label as='a' key={index} size='big'>\r\n                    {item.name}\r\n                    <Icon name='delete'\r\n                          onClick={() => this.onFileRemoved(item)} />\r\n                </Label>\r\n            );\r\n        }\r\n        return (\r\n            <Layout>\r\n                <Container style={{height:\"100vh\"}}>\r\n                  <Divider hidden/>\r\n                  <Segment textAlign='center' as='h3'>Creating Of New Question</Segment>\r\n                  <Form error={!!this.state.errorMessage} style={{ marginTop: '10px' }}>\r\n                      <Form.Field required={true}>\r\n                          <label>Question Title</label>\r\n                          <Input\r\n                              placeholder=\"Enter Title\"\r\n                              value={this.state.questionTitle}\r\n                              onChange={event => this.setState({ questionTitle: event.target.value })}\r\n                          />\r\n                      </Form.Field>\r\n                      <Form.Field required={true}>\r\n                          <label>Question Description</label>\r\n                          <TextArea\r\n                              placeholder=\"Enter Description\"\r\n                              value={this.state.content}\r\n                              onChange={event => this.setState({ content: event.target.value })}\r\n                          />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                          <label>Tags (Separate each tag with a comma Example: math,logic)</label>\r\n                          <Dropdown clearable options={tagOptions}\r\n                                    selection\r\n                                    multiple\r\n                                    placeholder='Select from existing tags or create your own tags'\r\n                                    value={this.state.tag}\r\n                                    onChange={ (e, { value}) => this.setState({ tag: value })} />\r\n\r\n                      </Form.Field>\r\n                      <Form.Field required={true}>\r\n                          <label>Ether</label>\r\n                          <Dropdown clearable options={options}\r\n                                    selection\r\n                                    placeholder='Select your value of reward'\r\n                                    value={this.state.reward}\r\n                                    onClick={event => this.setState({ reward: event.target.value })} />\r\n                      </Form.Field>\r\n                      <Form.Field required={true}>\r\n                          <label>Maximum Duration</label>\r\n                          <Input\r\n                              label=\"hour(s)\"\r\n                              labelPosition=\"right\"\r\n                              value={this.state.maxDuration}\r\n                              onChange={event => this.setState({ maxDuration: event.target.value })}\r\n                          />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        {this.renderFilesUpload(elmFiles)}\r\n                      </Form.Field>\r\n                      <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n                      <Modal open={this.state.loading} trigger={<Button primary onClick={this.onSubmit}>Submit Question</Button>} basic size='small'>\r\n                        <Header content='Posting New Question' />\r\n                        <Modal.Content>\r\n                          <p>\r\n                            Please Confirm the MetaMask Transaction Request to submit your Question to the Block-Chain Network.\r\n                            Upon successful submission, you will be redirected to the Home Page. This process might take awhile.\r\n                          </p>\r\n                          <Loader active inline=\"centered\">\r\n                            Loading\r\n                          </Loader>\r\n                        </Modal.Content>\r\n                      </Modal>\r\n                  </Form>\r\n                </Container>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewPost;\r\n"]},"metadata":{},"sourceType":"module"}