{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Button, Form, Container, Divider, Input, Segment, Message, Icon, Modal, Header, Loader } from 'semantic-ui-react';\nimport LoginLayout from '../components/LoginLayout';\nimport web3 from '../ethereum/web3';\nimport Profile from '../ethereum/profile';\nimport factory from '../ethereum/factory';\nimport EthQuestionToken from '../ethereum/token';\nimport EthQuestionTokenSale from '../ethereum/tokenSale';\nimport credentials from '../ethereum/credentials';\nimport { Router } from '../routes';\nimport { validate, logging } from '../utils/functions';\n\nvar passwordHash = require('password-hash');\n\nvar RegisterPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegisterPage, _Component);\n\n  function RegisterPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      emailAddress: '',\n      password: '',\n      loading: false,\n      showKeys: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var validEmail, emailNotExist, accounts, hashedPassword, wallet, _hashedPassword, logTransaction;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              }); // Check for valid NTU Student Email Address, Existence of Email Address and EthWallet\n\n\n              _context.prev = 1;\n              validEmail = validate(_this.state.emailAddress);\n              _context.next = 5;\n              return credentials.methods.emailNotExist(_this.state.emailAddress).call();\n\n            case 5:\n              emailNotExist = _context.sent;\n\n              if (!(validEmail && !emailNotExist)) {\n                _context.next = 36;\n                break;\n              }\n\n              if (!(_this.state.emailAddress === \"admin\")) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 10;\n              return web3.eth.getAccounts();\n\n            case 10:\n              accounts = _context.sent;\n              hashedPassword = passwordHash.generate(_this.state.password);\n              _context.next = 14;\n              return factory.methods // Create Admin\n              .createAdmin(credentials._address, _this.state.emailAddress, hashedPassword).send({\n                from: accounts[0],\n                gasPrice: \"0\"\n              });\n\n            case 14:\n              document.cookie = \"wallet=\".concat(accounts[0], \"; path=/\");\n              _context.next = 32;\n              break;\n\n            case 17:\n              _context.next = 19;\n              return web3.eth.accounts.create();\n\n            case 19:\n              wallet = _context.sent;\n              _hashedPassword = passwordHash.generate(_this.state.password);\n              _context.next = 23;\n              return web3.eth.personal.importRawKey(wallet['privateKey'].slice(2), _this.state.password);\n\n            case 23:\n              _context.next = 25;\n              return web3.eth.personal.unlockAccount(wallet['address'], _this.state.password, 3600);\n\n            case 25:\n              logTransaction = logging(\"Credited 10 EQT(s) for first time User\");\n              _context.next = 28;\n              return EthQuestionTokenSale.methods;\n\n            case 28:\n              _context.next = 30;\n              return factory.methods.createProfile(credentials._address, _this.state.emailAddress, _hashedPassword, EthQuestionToken._address, EthQuestionTokenSale._address, logTransaction).send({\n                from: wallet['address'],\n                gasPrice: \"0\"\n              });\n\n            case 30:\n              document.cookie = \"wallet=\".concat(wallet['address'], \"; path=/\");\n\n              _this.setState({\n                publicKey: wallet['address'],\n                privateKey: wallet['privateKey']\n              });\n\n            case 32:\n              document.cookie = \"login=\".concat(true, \"; path=/\");\n\n              _this.setState({\n                loading: false,\n                showKeys: true\n              });\n\n              _context.next = 38;\n              break;\n\n            case 36:\n              _this.setState({\n                errorMessage: \"Invalid Email Address or Email Address Already In Used\"\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 38:\n              _context.next = 44;\n              break;\n\n            case 40:\n              _context.prev = 40;\n              _context.t0 = _context[\"catch\"](1);\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 44:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 40]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(RegisterPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Delete any existing Cookies\n                document.cookie = \"login=\".concat(false, \"; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT\");\n                document.cookie = \"wallet=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT\";\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"renderForm\",\n    value: function renderForm() {\n      var _this2 = this;\n\n      return React.createElement(Form, {\n        error: !!this.state.errorMessage\n      }, React.createElement(Segment, {\n        raised: true,\n        textAlign: \"center\"\n      }, \"This will create a password-protected account using your NTU email address and have it linked to cryptocurrency wallet created by the system.\"), React.createElement(Form.Field, null, React.createElement(\"label\", null, \"NTU Student Email Address\"), React.createElement(Input, {\n        placeholder: \"example@e.ntu.edu.sg\",\n        value: this.state.emailAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            emailAddress: event.target.value\n          });\n        }\n      })), React.createElement(Form.Field, null, React.createElement(\"label\", null, \"Password\"), React.createElement(Input, {\n        placeholder: \"Password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            password: event.target.value\n          });\n        }\n      })), React.createElement(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }), React.createElement(Modal, {\n        open: this.state.loading,\n        trigger: React.createElement(Button, {\n          primary: true,\n          onClick: this.onSubmit\n        }, \"Register\"),\n        basic: true,\n        size: \"small\"\n      }, React.createElement(Header, {\n        content: \"Registering Your Email Address\"\n      }), React.createElement(Modal.Content, null, React.createElement(\"p\", null, \"Creating of password-protected account. Please wait...\"), React.createElement(Loader, {\n        active: true,\n        inline: \"centered\"\n      }, \"Registering Your Email\"))), React.createElement(Modal, {\n        open: this.state.showKeys,\n        basic: true,\n        size: \"small\"\n      }, React.createElement(Header, {\n        content: \"Wallet Information\"\n      }), React.createElement(Modal.Content, null, \"WARNING: Never reveal your private key to anyone. These keys will be required for future access to your wallet, please have it recorded down.\", React.createElement(\"p\", null, \"Public Key: \", this.state.publicKey), React.createElement(\"p\", null, \"Private Key: \", this.state.privateKey)), React.createElement(Modal.Actions, null, React.createElement(Button, {\n        color: \"green\",\n        onClick: function onClick() {\n          return Router.pushRoute(\"/home\");\n        }\n      }, React.createElement(Icon, {\n        name: \"checkmark\"\n      }), \" Okay\"))), React.createElement(Button, {\n        primary: true,\n        onClick: function onClick() {\n          return Router.pushRoute(\"/\");\n        }\n      }, \"Go Back\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LoginLayout, null, React.createElement(Container, {\n        style: {\n          height: \"100vh\"\n        }\n      }, this.renderForm()));\n    }\n  }]);\n\n  return RegisterPage;\n}(Component);\n\nexport default RegisterPage;","map":null,"metadata":{},"sourceType":"module"}