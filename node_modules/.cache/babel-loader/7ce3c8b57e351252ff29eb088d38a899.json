{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport cookies from 'next-cookies';\n\nvar LeaderboardPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LeaderboardPage, _Component);\n\n  function LeaderboardPage(props) {\n    var _this;\n\n    _classCallCheck(this, LeaderboardPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LeaderboardPage).call(this, props));\n    _this.state = {\n      login: false,\n      loading: true,\n      accountType: null\n    };\n    return _this;\n  }\n\n  _createClass(LeaderboardPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var login, profileAddress, profile, accountType;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(typeof web3 === 'undefined')) {\n                  _context.next = 3;\n                  break;\n                }\n\n                this.setState({\n                  loading: false\n                });\n                return _context.abrupt(\"return\");\n\n              case 3:\n                login = false;\n\n                if (!this.props.isLogin) {\n                  _context.next = 16;\n                  break;\n                }\n\n                login = true; // Get Account Type\n\n                _context.next = 8;\n                return factory.methods.getProfile(this.props.account).call();\n\n              case 8:\n                profileAddress = _context.sent;\n                profile = Profile(profileAddress);\n                _context.next = 12;\n                return profile.methods.getAccountType().call();\n\n              case 12:\n                accountType = _context.sent;\n                accountType == 0 ? accountType = \"Admin\" : accountType = \"User\";\n                this.setState({\n                  login: login\n                });\n                this.setState({\n                  accountType: accountType\n                });\n\n              case 16:\n                this.setState({\n                  loading: false\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(props) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", {\n                  isLogin: cookies(props).login || '',\n                  account: cookies(props).wallet || ''\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return LeaderboardPage;\n}(Component);","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion_1.0\\pages\\leaderboard.js"],"names":["React","Component","Layout","web3","cookies","LeaderboardPage","props","state","login","loading","accountType","setState","isLogin","factory","methods","getProfile","account","call","profileAddress","profile","Profile","getAccountType","wallet"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,OAAP,MAAoB,cAApB;;IAEMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,yFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KADI;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAFiB;AAOlB;;;;;;;;;;;;;sBAOK,OAAOP,IAAP,KAAgB,W;;;;;AAClB,qBAAKQ,QAAL,CAAc;AAAEF,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;;;AAGED,gBAAAA,K,GAAQ,K;;qBACR,KAAKF,KAAL,CAAWM,O;;;;;AACbJ,gBAAAA,KAAK,GAAG,IAAR,C,CACA;;;uBAC2BK,OAAO,CAACC,OAAR,CAAgBC,UAAhB,CAA2B,KAAKT,KAAL,CAAWU,OAAtC,EAA+CC,IAA/C,E;;;AAAvBC,gBAAAA,c;AACAC,gBAAAA,O,GAAUC,OAAO,CAACF,cAAD,C;;uBACGC,OAAO,CAACL,OAAR,CAAgBO,cAAhB,GAAiCJ,IAAjC,E;;;AAApBP,gBAAAA,W;AACJA,gBAAAA,WAAW,IAAI,CAAf,GAAmBA,WAAW,GAAG,OAAjC,GAA2CA,WAAW,GAAG,MAAzD;AACA,qBAAKC,QAAL,CAAe;AAAEH,kBAAAA,KAAK,EAAEA;AAAT,iBAAf;AACA,qBAAKG,QAAL,CAAe;AAAED,kBAAAA,WAAW,EAAEA;AAAf,iBAAf;;;AAEF,qBAAKC,QAAL,CAAe;AAAEF,kBAAAA,OAAO,EAAE;AAAX,iBAAf;;;;;;;;;;;;;;;;;;;;;iDApB2BH,K;;;;;kDACpB;AAAEM,kBAAAA,OAAO,EAAER,OAAO,CAACE,KAAD,CAAP,CAAeE,KAAf,IAAwB,EAAnC;AAAwCQ,kBAAAA,OAAO,EAAEZ,OAAO,CAACE,KAAD,CAAP,CAAegB,MAAf,IAAyB;AAA1E,iB;;;;;;;;;;;;;;;;;;;EAXmBrB,S","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport web3 from '../ethereum/web3';\r\nimport cookies from 'next-cookies';\r\n\r\nclass LeaderboardPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n      loading: true,\r\n      accountType: null\r\n    };\r\n  }\r\n\r\n  static async getInitialProps(props) {\r\n    return { isLogin: cookies(props).login || '' , account: cookies(props).wallet || '' };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (typeof web3 === 'undefined') {\r\n      this.setState({ loading: false })\r\n      return\r\n    }\r\n    let login = false;\r\n    if (this.props.isLogin) {\r\n      login = true;\r\n      // Get Account Type\r\n      let profileAddress = await factory.methods.getProfile(this.props.account).call();\r\n      let profile = Profile(profileAddress);\r\n      let accountType = await profile.methods.getAccountType().call();\r\n      accountType == 0 ? accountType = \"Admin\" : accountType = \"User\"\r\n      this.setState( { login: login });\r\n      this.setState( { accountType: accountType });\r\n    }\r\n    this.setState( { loading: false });\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}