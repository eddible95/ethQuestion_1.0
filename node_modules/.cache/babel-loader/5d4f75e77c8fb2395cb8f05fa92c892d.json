{"ast":null,"code":"// The idea: If we need to get access to our deployed factory instance from somewhere else in our app,\n//     we won't have to go through the entire process of importing web3, and the interface and get the address and etc.\n//     Instead, we can import this factory.js file.\nimport getConfig from 'next/config';\nvar publicRuntimeConfig = getConfig.publicRuntimeConfig; // Import the copy of web3 that we created (The instance that is created there).\n\nimport web3 from './web3'; // Import the compiled contract that is placed in the build directory.\n// Any time that we want to tell web3 about an already deployed contract, we have to give web3 that contract's interface (ABI).\n// The ABI is defined inside the PostFactory.JSON file.\n\nimport Token from './build/EthQuestionTokenSale.json'; // Create the contract instance that refers to the specific address that we deployed the contract to\n// and we we'll export it from this file.\n// So, if we need excess to our deployed factory - We can import factory.js.\n// arguments: Our contract ABI, The address that we deployed our factory to\n\nvar instance = new web3.eth.Contract(JSON.parse(Token.interface), \"0x498885040eAdBeA9990b6bF4E6AE2dbb5E8d9c99\");\nexport default instance;","map":null,"metadata":{},"sourceType":"module"}