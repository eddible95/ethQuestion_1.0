{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Button, Form, Container, Divider, Input, Embed, Segment, Message, Icon, Modal, Header, Loader, Grid } from 'semantic-ui-react';\nimport LoginLayout from '../components/LoginLayout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport credentials from '../ethereum/credentials';\nimport { Router } from '../routes';\nimport { validate } from '../utils/functions';\nimport cookies from 'next-cookies';\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      emailAddress: '',\n      password: '',\n      loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var accounts, _emailAddress;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              }); // Check for valid NTU Student Email Address\n\n\n              if (!validate(_this.state.emailAddress)) {\n                _context.next = 29;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return web3.eth.getAccounts();\n\n            case 5:\n              accounts = _context.sent;\n              _context.next = 8;\n              return credentials.methods.getBinding(accounts[0]).call();\n\n            case 8:\n              _emailAddress = _context.sent;\n              _context.t0 = _this.state.emailAddress.localeCompare(_emailAddress) == 0;\n\n              if (!_context.t0) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 13;\n              return credentials.methods.emailNotBlackList(_emailAddress).call();\n\n            case 13:\n              _context.t0 = !_context.sent;\n\n            case 14:\n              if (!_context.t0) {\n                _context.next = 19;\n                break;\n              }\n\n              document.cookie = \"login=\".concat(true, \"; path=/\");\n              Router.pushRoute(\"/home\"); // Automatic redirect the user.\n\n              _context.next = 21;\n              break;\n\n            case 19:\n              _this.setState({\n                errorMessage: \"Wrong Email Address or Email Address Blacklisted\"\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 21:\n              _context.next = 27;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t1 = _context[\"catch\"](2);\n\n              _this.setState({\n                errorMessage: _context.t1.message\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 27:\n              _context.next = 31;\n              break;\n\n            case 29:\n              _this.setState({\n                errorMessage: \"Invalid Email Address\"\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 23]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Delete any existing Cookies\n                document.cookie = \"login=\".concat(false, \"; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT\");\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"renderForm\",\n    value: function renderForm() {\n      var _this2 = this;\n\n      return React.createElement(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '40%'\n        },\n        verticalAlign: \"middle\"\n      }, React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        }\n      }, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, React.createElement(Icon, {\n        name: \"ethereum\"\n      }), \" Login to your account\"), React.createElement(Form, {\n        size: \"large\",\n        error: !!this.state.errorMessage\n      }, React.createElement(Segment, {\n        stacked: true\n      }, React.createElement(Form.Field, null, React.createElement(\"label\", null, \"NTU Student Email Address\"), React.createElement(Input, {\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"example@e.ntu.edu.sg\",\n        value: this.state.emailAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            emailAddress: event.target.value\n          });\n        }\n      })), React.createElement(Form.Field, null, React.createElement(Input, {\n        icon: \"key\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            password: event.target.value\n          });\n        }\n      })), React.createElement(Modal, {\n        open: this.state.loading,\n        trigger: React.createElement(Button, {\n          color: \"blue\",\n          fluid: true,\n          size: \"large\",\n          onClick: this.onSubmit\n        }, \"Login\"),\n        basic: true,\n        size: \"small\"\n      }, React.createElement(Header, {\n        icon: \"ethereum\",\n        content: \"Verifying Your Email Address\"\n      }), React.createElement(Modal.Content, null, React.createElement(Loader, {\n        active: true,\n        inline: \"centered\"\n      }, \"Authenticating Credentials\"))), React.createElement(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }))), React.createElement(Message, null, \"Not yet registered your NTU Student Email to your Ethereum Account?\", React.createElement(Modal, {\n        trigger: React.createElement(\"a\", {\n          href: \"/register\"\n        }, \" Register Now\"),\n        basic: true,\n        size: \"small\"\n      }, React.createElement(Header, {\n        icon: \"ethereum\",\n        content: \"Please Hang On While We Redirect You\"\n      }), React.createElement(Modal.Content, null, React.createElement(Loader, {\n        active: true,\n        inline: \"centered\"\n      }, \"Redirecting to Registration\"))))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LoginLayout, null, React.createElement(React.Fragment, null, this.renderForm(), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(Container, null, React.createElement(\"center\", null, React.createElement(\"a\", {\n        style: {\n          display: 'table-cell',\n          textAlign: 'justified',\n          fontSize: '20px'\n        },\n        href: \"https://drive.google.com/file/d/16DMY4RwRKw53hRLA2YVkDF71HbttGD1F/view?usp=sharing\",\n        target: \"_blank\"\n      }, \"Click here for MetaMask Installation Guide\")), React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, React.createElement(Icon, {\n        name: \"video\"\n      }), \" Watch Video Guide\"), React.createElement(Embed, {\n        id: \"pdRTt2QabOg\",\n        source: \"youtube\"\n      }))));\n    }\n  }]);\n\n  return LoginPage;\n}(Component);\n\nexport default LoginPage;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion_1.0\\pages\\login.js"],"names":["React","Component","Button","Form","Container","Divider","Input","Embed","Segment","Message","Icon","Modal","Header","Loader","Grid","LoginLayout","web3","factory","credentials","Router","validate","cookies","LoginPage","emailAddress","password","loading","errorMessage","setState","state","eth","getAccounts","accounts","methods","getBinding","call","_emailAddress","localeCompare","emailNotBlackList","document","cookie","pushRoute","message","height","maxWidth","event","target","value","onSubmit","renderForm","display","textAlign","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form, Container, Divider, Input, Embed,\r\n   Segment, Message, Icon, Modal, Header, Loader, Grid } from 'semantic-ui-react'\r\nimport LoginLayout from '../components/LoginLayout';\r\nimport web3 from '../ethereum/web3';\r\nimport factory from '../ethereum/factory';\r\nimport credentials from '../ethereum/credentials';\r\nimport { Router } from '../routes';\r\nimport { validate } from '../utils/functions';\r\nimport cookies from 'next-cookies';\r\n\r\nclass LoginPage extends Component {\r\n\r\n  state = {\r\n    emailAddress:'',\r\n    password:'',\r\n    loading: false,\r\n    errorMessage:''\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // Delete any existing Cookies\r\n    document.cookie = `login=${false}; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT`;\r\n  };\r\n\r\n  onSubmit = async () => {\r\n    this.setState({ loading: true, errorMessage: '' });\r\n    // Check for valid NTU Student Email Address\r\n    if (validate(this.state.emailAddress)){\r\n      try {\r\n        const accounts = await web3.eth.getAccounts();\r\n        const _emailAddress = await credentials.methods.getBinding(accounts[0]).call();\r\n        // Authenticate the Email Address and ensure Email Address is not blacklisted\r\n        if (this.state.emailAddress.localeCompare(_emailAddress) == 0 && !await credentials.methods.emailNotBlackList(_emailAddress).call()){\r\n          document.cookie = `login=${true}; path=/`;\r\n          Router.pushRoute(`/home`); // Automatic redirect the user.\r\n        }\r\n        else {\r\n          this.setState({ errorMessage: \"Wrong Email Address or Email Address Blacklisted\" });\r\n          this.setState({ loading: false });\r\n        }\r\n      } catch (err) {\r\n        this.setState({ errorMessage: err.message });\r\n        this.setState({ loading: false });\r\n      }\r\n    } else {\r\n      this.setState({ errorMessage: \"Invalid Email Address\" });\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  renderForm() {\r\n    return(\r\n      <Grid textAlign='center' style={{ height: '40%' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as='h2' textAlign='center'>\r\n            <Icon name='ethereum' /> Login to your account\r\n          </Header>\r\n          <Form size='large' error={!!this.state.errorMessage}>\r\n            <Segment stacked>\r\n              <Form.Field>\r\n                <label>NTU Student Email Address</label>\r\n                <Input\r\n                    icon='user'\r\n                    iconPosition='left'\r\n                    placeholder='example@e.ntu.edu.sg'\r\n                    value={this.state.emailAddress}\r\n                    onChange={event => this.setState({ emailAddress: event.target.value})}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Input\r\n                    icon='key'\r\n                    iconPosition='left'\r\n                    placeholder='Password'\r\n                    type='password'\r\n                    value={this.state.password}\r\n                    onChange={event => this.setState({ password: event.target.value})}\r\n                />\r\n              </Form.Field>\r\n              <Modal open={this.state.loading} trigger={<Button color='blue' fluid size='large' onClick={this.onSubmit}>Login</Button>} basic size='small'>\r\n                <Header icon='ethereum' content='Verifying Your Email Address' />\r\n                <Modal.Content>\r\n                  <Loader active inline=\"centered\">\r\n                    Authenticating Credentials\r\n                  </Loader>\r\n                </Modal.Content>\r\n              </Modal>\r\n              <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            Not yet registered your NTU Student Email to your Ethereum Account?\r\n            <Modal trigger={<a href=\"/register\"> Register Now</a>} basic size='small'>\r\n              <Header icon='ethereum' content='Please Hang On While We Redirect You' />\r\n              <Modal.Content>\r\n                <Loader active inline=\"centered\">\r\n                  Redirecting to Registration\r\n                </Loader>\r\n              </Modal.Content>\r\n            </Modal>\r\n          </Message>\r\n        </Grid.Column>\r\n    </Grid>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <LoginLayout>\r\n          <React.Fragment>\r\n            {this.renderForm()}\r\n            <Divider hidden/>\r\n            <Container>\r\n              <center>\r\n                <a style={{display: 'table-cell', textAlign:'justified', fontSize:'20px'}}\r\n                   href=\"https://drive.google.com/file/d/16DMY4RwRKw53hRLA2YVkDF71HbttGD1F/view?usp=sharing\"\r\n                   target=\"_blank\">Click here for MetaMask Installation Guide</a>\r\n              </center>\r\n              <Header as='h2' textAlign='center'>\r\n                <Icon name='video' /> Watch Video Guide\r\n              </Header>\r\n              <Embed\r\n                id='pdRTt2QabOg'\r\n                source='youtube'\r\n              />\r\n            </Container>\r\n          </React.Fragment>\r\n      </LoginLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}