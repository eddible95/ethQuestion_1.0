{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport web3 from '../ethereum/web3';\nimport Layout from '../components/Layout';\nimport factory from '../ethereum/factory';\nimport credentials from '../ethereum/credentials';\nimport Profile from '../ethereum/profile';\nimport { Router } from '../routes';\nimport { Button, Card, Segment, Container, List, Transition, Popup } from \"semantic-ui-react\";\n\nvar userProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(userProfile, _Component);\n\n  function userProfile(props) {\n    var _this;\n\n    _classCallCheck(this, userProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(userProfile).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleVisibility\", function () {\n      return _this.setState(function (prevState) {\n        return {\n          visible: !prevState.visible\n        };\n      });\n    });\n\n    _this.state = {\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(userProfile, [{\n    key: \"componentWillMount\",\n    // Redirect E-Wallet that are not Logged In to the Login Page\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context.sent;\n                _context.next = 5;\n                return credentials.methods.getBinding(accounts[0]).call();\n\n              case 5:\n                _context.t0 = _context.sent;\n\n                if (!(_context.t0 === \"\")) {\n                  _context.next = 8;\n                  break;\n                }\n\n                Router.pushRoute(\"/\"); // Automatic redirect the user to Login or Sign Up\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"renderTransactions\",\n    value: function renderTransactions() {\n      var transactions = this.props.transactions;\n      return transactions.map(function (transaction, index) {\n        return React.createElement(List.Item, {\n          key: index\n        }, React.createElement(List.Icon, {\n          name: \"calendar outline\",\n          size: \"large\",\n          verticalAlign: \"middle\"\n        }), React.createElement(List.Content, null, transaction));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, {\n        accountType: this.props.accountType\n      }, React.createElement(Card, {\n        color: \"red\",\n        centered: true,\n        style: {\n          width: \"20%\"\n        }\n      }, React.createElement(Card.Content, null, React.createElement(Card.Header, null, \"Account Details:\", React.createElement(\"div\", {\n        style: {\n          color: \"red\",\n          fontSize: \"small\",\n          wordWrap: \"break-word\"\n        }\n      }, this.props.account)), React.createElement(Card.Meta, null, React.createElement(\"b\", null, this.props.accountType == 0 ? \"Admin\" : \"User\")), React.createElement(Card.Description, null, React.createElement(\"b\", null, \"Token Available:\"), \" \", this.props.token), React.createElement(Card.Description, null, React.createElement(\"b\", null, \"Points Accumulated:\"), \" \", this.props.points), React.createElement(Card.Description, null, React.createElement(\"b\", null, \"Valid Email Address:\"), \" \", this.props.emailAddress))), React.createElement(Container, {\n        style: {\n          width: \"80%\",\n          height: \"100vh\"\n        }\n      }, React.createElement(Segment, {\n        textAlign: \"center\"\n      }, React.createElement(\"b\", {\n        style: {\n          fontSize: \"20px\"\n        }\n      }, \"Transaction History\"), React.createElement(Popup, {\n        trigger: React.createElement(Button, {\n          icon: this.state.visible ? \"minus\" : \"plus\",\n          onClick: this.toggleVisibility,\n          floated: \"right\",\n          size: \"mini\"\n        }),\n        content: \"Click to expand/close\",\n        inverted: true\n      })), React.createElement(Transition, {\n        visible: this.state.visible,\n        animation: \"scale\",\n        duration: 500\n      }, React.createElement(List, {\n        divided: true,\n        size: \"huge\"\n      }, this.renderTransactions()))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var accounts, account, profileAddress, profile, emailAddress, token, points, transactions, accountType;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context2.sent;\n                account = accounts[0];\n                _context2.next = 6;\n                return credentials.methods.getBinding(account).call();\n\n              case 6:\n                _context2.t0 = _context2.sent;\n\n                if (!(_context2.t0 === \"\")) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                Router.pushRoute(\"/\"); // Automatic redirect the user to Login or Sign Up\n\n              case 9:\n                _context2.next = 11;\n                return factory.methods.getProfile(account).call();\n\n              case 11:\n                profileAddress = _context2.sent;\n                profile = Profile(profileAddress);\n                _context2.next = 15;\n                return credentials.methods.getBinding(account).call();\n\n              case 15:\n                emailAddress = _context2.sent;\n                _context2.next = 18;\n                return profile.methods.getToken().call();\n\n              case 18:\n                token = _context2.sent;\n                _context2.next = 21;\n                return profile.methods.getPoints().call();\n\n              case 21:\n                points = _context2.sent;\n                _context2.next = 24;\n                return profile.methods.getTransactions().call();\n\n              case 24:\n                transactions = _context2.sent;\n                _context2.next = 27;\n                return profile.methods.getAccountType().call();\n\n              case 27:\n                accountType = _context2.sent;\n\n                if (accountType == 0) {\n                  accountType = \"admin\";\n                } else {\n                  accountType = \"user\";\n                }\n\n                return _context2.abrupt(\"return\", {\n                  account: account,\n                  token: token,\n                  emailAddress: emailAddress,\n                  points: points,\n                  transactions: transactions,\n                  accountType: accountType\n                });\n\n              case 30:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return userProfile;\n}(Component);\n\nexport default userProfile;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\userProfile.js"],"names":["React","Component","web3","Layout","factory","credentials","Profile","Router","Button","Card","Segment","Container","List","Transition","Popup","userProfile","props","setState","prevState","visible","state","eth","getAccounts","accounts","methods","getBinding","call","pushRoute","transactions","map","transaction","index","accountType","width","color","fontSize","wordWrap","account","token","points","emailAddress","height","toggleVisibility","renderTransactions","getProfile","profileAddress","profile","getToken","getPoints","getTransactions","getAccountType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport web3 from '../ethereum/web3'\r\nimport Layout from '../components/Layout';\r\nimport factory from '../ethereum/factory';\r\nimport credentials from '../ethereum/credentials';\r\nimport Profile from '../ethereum/profile';\r\nimport { Router } from '../routes';\r\nimport {Button, Card, Segment, Container, List, Transition, Popup} from \"semantic-ui-react\";\r\n\r\nclass userProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false\r\n    };\r\n  }\r\n\r\n  toggleVisibility = () =>\r\n    this.setState((prevState) => ({ visible: !prevState.visible }))\r\n\r\n  static async getInitialProps () {\r\n      const accounts = await web3.eth.getAccounts();\r\n      const account = accounts[0];\r\n      if (await credentials.methods.getBinding(account).call() === \"\"){\r\n          Router.pushRoute(`/`); // Automatic redirect the user to Login or Sign Up\r\n      }\r\n      const profileAddress = await factory.methods.getProfile(account).call();\r\n      const profile = Profile(profileAddress);\r\n      const emailAddress = await credentials.methods.getBinding(account).call();\r\n      const token = await profile.methods.getToken().call();\r\n      const points = await profile.methods.getPoints().call();\r\n      const transactions = await profile.methods.getTransactions().call();\r\n      let accountType = await profile.methods.getAccountType().call();\r\n      if (accountType == 0) {\r\n        accountType = \"admin\"\r\n      } else {\r\n        accountType = \"user\"\r\n      }\r\n      return { account, token, emailAddress, points, transactions, accountType };\r\n  }\r\n\r\n  // Redirect E-Wallet that are not Logged In to the Login Page\r\n  async componentWillMount() {\r\n    // Retrieve the Ethereum Account from MetaMask\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (await credentials.methods.getBinding(accounts[0]).call() === \"\"){\r\n        Router.pushRoute(`/`); // Automatic redirect the user to Login or Sign Up\r\n    }\r\n  }\r\n\r\n  renderTransactions() {\r\n    const transactions = this.props.transactions;\r\n    return transactions.map((transaction, index) => {\r\n      return(\r\n        <List.Item key={index}>\r\n          <List.Icon name=\"calendar outline\" size='large' verticalAlign='middle'/>\r\n          <List.Content>\r\n            {transaction}\r\n          </List.Content>\r\n        </List.Item>\r\n      );\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Layout accountType={this.props.accountType}>\r\n        <Card color = \"red\" centered style={{width:\"20%\"}}>\r\n          <Card.Content>\r\n            <Card.Header>\r\n              Account Details:\r\n              <div style={{color: \"red\", fontSize: \"small\", wordWrap: \"break-word\" }}>{this.props.account}</div>\r\n            </Card.Header>\r\n            <Card.Meta>\r\n              <b>{this.props.accountType == 0 ? \"Admin\" : \"User\"}</b>\r\n            </Card.Meta>\r\n            <Card.Description>\r\n              <b>Token Available:</b> {this.props.token}\r\n            </Card.Description>\r\n            <Card.Description>\r\n              <b>Points Accumulated:</b> {this.props.points}\r\n            </Card.Description>\r\n            <Card.Description>\r\n              <b>Valid Email Address:</b> {this.props.emailAddress}\r\n            </Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n        <Container style={{width:\"80%\", height:\"100vh\"}}>\r\n          <Segment textAlign=\"center\">\r\n            <b style={{fontSize:\"20px\"}}>Transaction History</b>\r\n            <Popup\r\n              trigger={\r\n                <Button\r\n                  icon={this.state.visible ? \"minus\" : \"plus\"}\r\n                  onClick={this.toggleVisibility}\r\n                  floated=\"right\"\r\n                  size=\"mini\"\r\n                />\r\n              }\r\n              content={\"Click to expand/close\"}\r\n              inverted/>\r\n          </Segment>\r\n          <Transition visible={this.state.visible} animation='scale' duration={500}>\r\n            <List divided size=\"huge\">\r\n              {this.renderTransactions()}\r\n            </List>\r\n          </Transition>\r\n        </Container>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default userProfile;\r\n"]},"metadata":{},"sourceType":"module"}