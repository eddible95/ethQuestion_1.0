{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Button, Header, Table, Statistic, Rating, Grid, Message, Divider, Container, Icon } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Question from '../ethereum/question';\nimport Layout from '../components/Layout';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomePage, _Component);\n\n  function HomePage() {\n    _classCallCheck(this, HomePage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HomePage).apply(this, arguments));\n  }\n\n  _createClass(HomePage, [{\n    key: \"renderQuestionList\",\n    value: function renderQuestionList() {\n      var _this = this;\n\n      var questionsDeployed = this.props.summaries;\n      var answers = this.props.answerList;\n      return questionsDeployed.map(function (summary, index) {\n        var state = summary[4];\n        return React.createElement(Table.Row, {\n          key: index\n        }, React.createElement(Table.Cell, {\n          textAlign: \"center\",\n          width: 2\n        }, state == 0 ? React.createElement(Statistic, {\n          size: \"mini\",\n          color: \"red\"\n        }, React.createElement(Statistic.Value, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, \" Answering\")), React.createElement(Statistic.Label, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, \"Phase\"))) : React.createElement(Statistic, {\n          size: \"mini\",\n          color: \"red\"\n        }, React.createElement(Statistic.Value, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, \" Rating\")), React.createElement(Statistic.Label, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, \"Phase\")))), React.createElement(Table.Cell, {\n          textAlign: \"center\",\n          width: 2\n        }, React.createElement(Statistic, {\n          size: \"mini\",\n          color: \"red\"\n        }, React.createElement(Statistic.Value, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, React.createElement(Icon, {\n          name: \"thumbs up\"\n        }), \" 1\")), React.createElement(Statistic.Label, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, \"Up Votes\")))), React.createElement(Table.Cell, {\n          textAlign: \"center\",\n          width: 2\n        }, React.createElement(Statistic, {\n          size: \"mini\",\n          color: \"red\"\n        }, React.createElement(Statistic.Value, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, React.createElement(Icon, {\n          name: \"thumbs down\"\n        }), \" 1\")), React.createElement(Statistic.Label, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, \"Down Votes\")))), React.createElement(Table.Cell, {\n          textAlign: \"center\",\n          width: 2\n        }, React.createElement(Statistic, {\n          size: \"mini\",\n          color: \"red\"\n        }, React.createElement(Statistic.Value, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        })), React.createElement(Statistic.Label, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, \"answers\")))), React.createElement(Table.Cell, {\n          textAlign: \"center\",\n          width: 2\n        }, React.createElement(Statistic, {\n          size: \"mini\",\n          color: \"red\"\n        }, React.createElement(Statistic.Value, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, summary[2])), React.createElement(Statistic.Label, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, \"ethers\")))), React.createElement(Table.Cell, {\n          textAlign: \"left\"\n        }, React.createElement(Grid.Row, {\n          textAlign: \"left\"\n        }, React.createElement(\"span\", {\n          style: {\n            fontSize: 18,\n            color: '#6A737C',\n            cursor: 'pointer'\n          },\n          onClick: function onClick() {\n            return Router.pushRoute(\"/questions/\".concat(_this.props.deployedQuestions[index]));\n          }\n        }, React.createElement(\"a\", null, summary[0])))));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(\"div\", null, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, \"Questions Posted\")), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(Container, null, React.createElement(Table, null, React.createElement(Table.Body, null, this.renderQuestionList()))), React.createElement(Divider, {\n        hidden: true\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var accounts, deployedQuestions, deployedQuestionsCount, questions, summaries, answersList, i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context.sent;\n                _context.next = 5;\n                return factory.methods.getDeployedQuestions().call();\n\n              case 5:\n                deployedQuestions = _context.sent;\n                deployedQuestionsCount = deployedQuestions.length; // Stores all Question contracts\n\n                questions = [];\n                summaries = [];\n                answersList = [];\n                i = 0;\n\n              case 11:\n                if (!(i < deployedQuestionsCount)) {\n                  _context.next = 25;\n                  break;\n                }\n\n                questions[i] = Question(deployedQuestions[i]);\n                _context.next = 15;\n                return questions[i].methods.getSummary().call();\n\n              case 15:\n                summaries[i] = _context.sent;\n                _context.next = 18;\n                return questions[i].methods.start().call();\n\n              case 18:\n                summaries[i][6] = _context.sent;\n                _context.next = 21;\n                return questions[i].methods.getAnswerList().call();\n\n              case 21:\n                answersList[i] = _context.sent;\n\n              case 22:\n                i++;\n                _context.next = 11;\n                break;\n\n              case 25:\n                return _context.abrupt(\"return\", {\n                  summaries: summaries,\n                  deployedQuestions: deployedQuestions,\n                  accounts: accounts,\n                  answersList: answersList\n                });\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return HomePage;\n}(Component);\n\nexport default HomePage;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\index.js"],"names":["React","Component","Button","Header","Table","Statistic","Rating","Grid","Message","Divider","Container","Icon","factory","Question","Layout","Link","Router","web3","HomePage","questionsDeployed","props","summaries","answers","answerList","map","summary","index","state","fontSize","color","cursor","pushRoute","deployedQuestions","renderQuestionList","eth","getAccounts","accounts","methods","getDeployedQuestions","call","deployedQuestionsCount","length","questions","answersList","i","getSummary","start","getAnswerList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Header, Table, Statistic, Rating, Grid, Message, Divider, Container, Icon } from 'semantic-ui-react';\r\nimport factory from '../ethereum/factory';\r\nimport Question from '../ethereum/question';\r\nimport Layout from '../components/Layout';\r\nimport {Link, Router} from '../routes';\r\nimport web3 from '../ethereum/web3';\r\n\r\nclass HomePage extends Component {\r\n\r\n    static async getInitialProps () {\r\n        const accounts = await web3.eth.getAccounts();\r\n        // Retrieve an array of all our deployed questions addresses.\r\n        const deployedQuestions = await factory.methods.getDeployedQuestions().call();\r\n        const deployedQuestionsCount = deployedQuestions.length;\r\n\r\n        // Stores all Question contracts\r\n        let questions = [];\r\n        let summaries = [];\r\n        let answersList = [];\r\n        for(let i=0; i<deployedQuestionsCount; i++) {\r\n          questions[i] = Question(deployedQuestions[i]);\r\n          summaries[i] = await questions[i].methods.getSummary().call();\r\n          summaries[i][6] = await questions[i].methods.start().call();\r\n          answersList[i] = await questions[i].methods.getAnswerList().call();\r\n        }\r\n\r\n        return { summaries, deployedQuestions, accounts, answersList };\r\n    }\r\n\r\n    renderQuestionList() {\r\n        const questionsDeployed = this.props.summaries;\r\n        const answers = this.props.answerList;\r\n\r\n        return questionsDeployed.map((summary, index) => {\r\n            const state = summary[4];\r\n            return <Table.Row key={index}>\r\n              <Table.Cell textAlign='center' width={2}>\r\n                  {\r\n                    state == 0 ? <Statistic size='mini' color='red'>\r\n                                    <Statistic.Value><span\r\n                                        style={{fontSize: 15, color: '#6A737C'}}> Answering\r\n                                                    </span></Statistic.Value>\r\n                                    <Statistic.Label><span style={{fontSize: 15, color: '#6A737C'}}>Phase</span></Statistic.Label>\r\n                                </Statistic>\r\n                              : <Statistic size='mini' color='red'>\r\n                                    <Statistic.Value><span\r\n                                        style={{fontSize: 15, color: '#6A737C'}}> Rating\r\n                                                    </span></Statistic.Value>\r\n                                    <Statistic.Label><span style={{fontSize: 15, color: '#6A737C'}}>Phase</span></Statistic.Label>\r\n                                </Statistic>\r\n                  }\r\n                </Table.Cell>\r\n                <Table.Cell textAlign='center' width={2}>\r\n                    <Statistic size='mini' color='red'>\r\n                        <Statistic.Value><span\r\n                            style={{fontSize: 15, color: '#6A737C'}}><Icon name='thumbs up' /> 1\r\n                                        </span></Statistic.Value>\r\n                        <Statistic.Label><span style={{fontSize: 15, color: '#6A737C'}}>Up Votes</span></Statistic.Label>\r\n                    </Statistic>\r\n                </Table.Cell>\r\n                <Table.Cell textAlign='center' width={2}>\r\n                    <Statistic size='mini' color='red'>\r\n                        <Statistic.Value><span\r\n                            style={{fontSize: 15, color: '#6A737C'}}><Icon name='thumbs down' /> 1\r\n                                        </span></Statistic.Value>\r\n                        <Statistic.Label><span style={{fontSize: 15, color: '#6A737C'}}>Down Votes</span></Statistic.Label>\r\n                    </Statistic>\r\n                </Table.Cell>\r\n                <Table.Cell textAlign='center' width={2}>\r\n                    <Statistic size='mini' color='red'>\r\n                        <Statistic.Value><span style={{fontSize: 15, color: '#6A737C'}}></span></Statistic.Value>\r\n                        <Statistic.Label><span style={{fontSize: 15, color: '#6A737C'}}>answers</span></Statistic.Label>\r\n                    </Statistic>\r\n                </Table.Cell>\r\n                <Table.Cell textAlign='center' width={2}>\r\n                    <Statistic size='mini' color='red'>\r\n                        <Statistic.Value><span style={{fontSize: 15, color: '#6A737C'}}>{summary[2]}</span></Statistic.Value>\r\n                        <Statistic.Label><span style={{fontSize: 15, color: '#6A737C'}}>ethers</span></Statistic.Label>\r\n                    </Statistic>\r\n                </Table.Cell>\r\n                <Table.Cell textAlign='left'>\r\n                    <Grid.Row textAlign='left'>\r\n                        <span style={{fontSize: 18, color: '#6A737C', cursor: 'pointer'}} onClick={() => Router.pushRoute(`/questions/${this.props.deployedQuestions[index]}`)}><a>{summary[0]}</a></span></Grid.Row>\r\n                </Table.Cell>\r\n            </Table.Row>\r\n      });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <Header as='h2' textAlign='center'>\r\n                        Questions Posted\r\n                    </Header>\r\n                </div>\r\n                <Divider hidden/>\r\n                <Container>\r\n                  <Table>\r\n                    <Table.Body>\r\n                      {this.renderQuestionList()}\r\n                    </Table.Body>\r\n                  </Table>\r\n                </Container>\r\n                <Divider hidden/>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}