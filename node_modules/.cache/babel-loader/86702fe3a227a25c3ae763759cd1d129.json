{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Button, Checkbox, Form, Container, Divider, Input, Segment, Message } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport credentials from '../ethereum/credential';\nimport { Router } from '../routes';\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      emailAddress: '',\n      loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var accounts, _emailAddress;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              }); // Check for valid NTU Student Email Address\n\n\n              if (!_this.validate(_this.state.emailAddress)) {\n                _context.next = 20;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return web3.eth.getAccounts();\n\n            case 5:\n              accounts = _context.sent;\n              _context.next = 8;\n              return credentials.methods.getBinding(accounts[0]).call();\n\n            case 8:\n              _emailAddress = _context.sent;\n              console.log(_emailAddress);\n              console.log(_this.state.emailAddress); // Authenticate the Email Address\n\n              if (_this.state.emailAddress.localeCompare(_emailAddress) == 0) {\n                Router.pushRoute(\"/home/\".concat(accounts[0])); // Automatic redirect the user.\n              } else {\n                _this.setState({\n                  errorMessage: \"Wrong Email Address\"\n                });\n\n                _this.setState({\n                  loading: false\n                });\n              }\n\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n            case 17:\n              _this.setState({\n                loading: false\n              });\n\n              _context.next = 22;\n              break;\n\n            case 20:\n              _this.setState({\n                errorMessage: \"Invalid Email Address\"\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 14]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"validate\",\n    value: function validate(emailAddress) {\n      var re = /\\S+@e.ntu.edu.sg$/;\n      return re.test(emailAddress);\n    }\n  }, {\n    key: \"renderForm\",\n    value: function renderForm() {\n      var _this2 = this;\n\n      return React.createElement(Form, {\n        error: !!this.state.errorMessage\n      }, React.createElement(Segment, {\n        raised: true,\n        textAlign: \"center\"\n      }, \"Please \", React.createElement(\"b\", null, \"Login\"), \" Using Your Registered NTU Email Address or \", React.createElement(\"b\", null, \"Register\"), \" for an Account\"), React.createElement(Form.Field, null, React.createElement(\"label\", null, \"NTU Student Email Address\"), React.createElement(Input, {\n        placeholder: \"example@e.ntu.edu.sg\",\n        value: this.state.emailAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            emailAddress: event.target.value\n          });\n        }\n      })), React.createElement(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }), React.createElement(Button, {\n        loading: this.state.loading,\n        primary: true,\n        onClick: this.onSubmit\n      }, \"Log In\"), React.createElement(Button, {\n        loading: this.state.loading,\n        primary: true,\n        onClick: function onClick() {\n          return Router.pushRoute(\"/register\");\n        }\n      }, \"Register\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(Container, null, this.renderForm()));\n    }\n  }]);\n\n  return LoginPage;\n}(Component);\n\nexport default LoginPage;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\index.js"],"names":["React","Component","Button","Checkbox","Form","Container","Divider","Input","Segment","Message","Layout","web3","credentials","Router","LoginPage","emailAddress","loading","errorMessage","setState","validate","state","eth","getAccounts","accounts","methods","getBinding","call","_emailAddress","console","log","localeCompare","pushRoute","message","re","test","event","target","value","onSubmit","renderForm"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,OAA5C,EAAqDC,KAArD,EAA4DC,OAA5D,EAAqEC,OAArE,QAAoF,mBAApF;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,MAAT,QAAuB,WAAvB;;IAEMC,S;;;;;;;;;;;;;;;;;;4DAEI;AACNC,MAAAA,YAAY,EAAC,EADP;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,YAAY,EAAC;AAHP,K;;;;;;6BAWG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACP,oBAAKC,QAAL,CAAc;AAAEF,gBAAAA,OAAO,EAAE,IAAX;AAAiBC,gBAAAA,YAAY,EAAE;AAA/B,eAAd,EADO,CAEP;;;AAFO,mBAGH,MAAKE,QAAL,CAAc,MAAKC,KAAL,CAAWL,YAAzB,CAHG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAKsBJ,IAAI,CAACU,GAAL,CAASC,WAAT,EALtB;;AAAA;AAKKC,cAAAA,QALL;AAAA;AAAA,qBAM2BX,WAAW,CAACY,OAAZ,CAAoBC,UAApB,CAA+BF,QAAQ,CAAC,CAAD,CAAvC,EAA4CG,IAA5C,EAN3B;;AAAA;AAMKC,cAAAA,aANL;AAODC,cAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAKT,KAAL,CAAWL,YAAvB,EARC,CASD;;AACA,kBAAI,MAAKK,KAAL,CAAWL,YAAX,CAAwBe,aAAxB,CAAsCH,aAAtC,KAAwD,CAA5D,EAA8D;AAC5Dd,gBAAAA,MAAM,CAACkB,SAAP,iBAA0BR,QAAQ,CAAC,CAAD,CAAlC,GAD4D,CAClB;AAC3C,eAFD,MAGK;AACH,sBAAKL,QAAL,CAAc;AAAED,kBAAAA,YAAY,EAAE;AAAhB,iBAAd;;AACA,sBAAKC,QAAL,CAAc;AAAEF,kBAAAA,OAAO,EAAE;AAAX,iBAAd;AACD;;AAhBA;AAAA;;AAAA;AAAA;AAAA;;AAkBD,oBAAKE,QAAL,CAAc;AAAED,gBAAAA,YAAY,EAAE,YAAIe;AAApB,eAAd;;AAlBC;AAoBL,oBAAKd,QAAL,CAAc;AAAEF,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AApBK;AAAA;;AAAA;AAsBL,oBAAKE,QAAL,CAAc;AAAED,gBAAAA,YAAY,EAAE;AAAhB,eAAd;;AACA,oBAAKC,QAAL,CAAc;AAAEF,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AAvBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BALFD,Y,EAAa;AACpB,UAAMkB,EAAE,GAAG,mBAAX;AACA,aAAOA,EAAE,CAACC,IAAH,CAAQnB,YAAR,CAAP;AACD;;;iCA6BY;AAAA;;AACX,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC,CAAC,KAAKK,KAAL,CAAWH;AAA1B,SACE,oBAAC,OAAD;AAAS,QAAA,MAAM,MAAf;AAAgB,QAAA,SAAS,EAAE;AAA3B,oBACS,uCADT,kDACiE,0CADjE,oBADF,EAIE,oBAAC,IAAD,CAAM,KAAN,QACE,+DADF,EAEE,oBAAC,KAAD;AACI,QAAA,WAAW,EAAC,sBADhB;AAEI,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWL,YAFtB;AAGI,QAAA,QAAQ,EAAE,kBAAAoB,KAAK;AAAA,iBAAI,MAAI,CAACjB,QAAL,CAAc;AAAEH,YAAAA,YAAY,EAAEoB,KAAK,CAACC,MAAN,CAAaC;AAA7B,WAAd,CAAJ;AAAA;AAHnB,QAFF,CAJF,EAYE,oBAAC,OAAD;AAAS,QAAA,KAAK,MAAd;AAAe,QAAA,MAAM,EAAC,OAAtB;AAA8B,QAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWH;AAAlD,QAZF,EAaE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKG,KAAL,CAAWJ,OAA5B;AAAqC,QAAA,OAAO,MAA5C;AAA6C,QAAA,OAAO,EAAE,KAAKsB;AAA3D,kBAbF,EAcE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWJ,OAA5B;AAAqC,QAAA,OAAO,MAA5C;AAA6C,QAAA,OAAO,EAAE;AAAA,iBAAMH,MAAM,CAACkB,SAAP,aAAN;AAAA;AAAtD,oBAdF,CADF;AAkBD;;;6BAEQ;AACP,aACE,iCACA,oBAAC,OAAD;AAAS,QAAA,MAAM;AAAf,QADA,EAEA,oBAAC,SAAD,QACK,KAAKQ,UAAL,EADL,CAFA,CADF;AAQD;;;;EAtEqBtC,S;;AAyExB,eAAea,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Checkbox, Form, Container, Divider, Input, Segment, Message } from 'semantic-ui-react'\r\nimport Layout from '../components/Layout';\r\nimport web3 from '../ethereum/web3';\r\nimport credentials from '../ethereum/credential';\r\nimport { Router } from '../routes';\r\n\r\nclass LoginPage extends Component {\r\n\r\n  state = {\r\n    emailAddress:'',\r\n    loading: false,\r\n    errorMessage:''\r\n  };\r\n\r\n  validate(emailAddress){\r\n    const re = /\\S+@e.ntu.edu.sg$/;\r\n    return re.test(emailAddress);\r\n  };\r\n\r\n  onSubmit = async () => {\r\n      this.setState({ loading: true, errorMessage: '' });\r\n      // Check for valid NTU Student Email Address\r\n      if (this.validate(this.state.emailAddress)){\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            const _emailAddress = await credentials.methods.getBinding(accounts[0]).call();\r\n            console.log(_emailAddress)\r\n            console.log(this.state.emailAddress)\r\n            // Authenticate the Email Address\r\n            if (this.state.emailAddress.localeCompare(_emailAddress) == 0){\r\n              Router.pushRoute(`/home/${accounts[0]}`); // Automatic redirect the user.\r\n            }\r\n            else {\r\n              this.setState({ errorMessage: \"Wrong Email Address\" });\r\n              this.setState({ loading: false });\r\n            }\r\n        } catch (err) {\r\n            this.setState({ errorMessage: err.message });\r\n        }\r\n        this.setState({ loading: false });\r\n      } else {\r\n        this.setState({ errorMessage: \"Invalid Email Address\" });\r\n        this.setState({ loading: false });\r\n      }\r\n  };\r\n\r\n  renderForm() {\r\n    return(\r\n      <Form error={!!this.state.errorMessage}>\r\n        <Segment raised textAlign={\"center\"}>\r\n          Please <b>Login</b> Using Your Registered NTU Email Address or <b>Register</b> for an Account\r\n        </Segment>\r\n        <Form.Field>\r\n          <label>NTU Student Email Address</label>\r\n          <Input\r\n              placeholder='example@e.ntu.edu.sg'\r\n              value={this.state.emailAddress}\r\n              onChange={event => this.setState({ emailAddress: event.target.value})}\r\n          />\r\n        </Form.Field>\r\n        <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n        <Button loading={this.state.loading} primary onClick={this.onSubmit}>Log In</Button>\r\n        <Button loading={this.state.loading} primary onClick={() => Router.pushRoute(`/register`)}>Register</Button>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n      <Divider hidden/>\r\n      <Container>\r\n          {this.renderForm()}\r\n      </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}