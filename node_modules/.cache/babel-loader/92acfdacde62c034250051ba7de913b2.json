{"ast":null,"code":"// Imports Web3 API\nimport Web3 from 'web3'; // New instance of Web3 with the provider that is automatically provided to us by MetaMask inside the browser.\n// This makes the assumption that the user has MetaMask.\n\nvar web3; // Modern DApp broswer\n\nif (typeof window !== 'undefined' && window.ethereum) {\n  var instance = new Web3(window.ethereum);\n\n  try {\n    // Request account access if needed\n    window.ethereum.enable(); // Acccounts now exposed\n\n    web3 = instance;\n  } catch (error) {\n    // User denied account access\n    alert('Please allow access for the app to work');\n  }\n} else if (typeof window !== 'undefined' && window.web3) {\n  //Legacy DApp browser\n  web3 = new Web3(web3.currentProvider); // Acccounts always exposed\n\n  resolve(web3);\n} else {\n  // Metamask not available\n  provider = new Web3.providers.HttpProvider('http://192.168.86.21:8543');\n  web3 = new Web3(provider);\n  console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n}\n\nexport default web3;","map":null,"metadata":{},"sourceType":"module"}