{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n// Ensure jsPDF does not import on Server Side\nvar jsPDF = null;\n\nif (typeof window !== \"undefined\") {\n  import(\"jspdf\").then(function (module) {\n    jsPDF = module.default;\n  });\n}\n\nvar exportQuestion =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(summary, answerList) {\n    var lMargin, rMargin, pdfInMM, doc, yPos, maxYPos, questionTitle, questionDescription, reward, lineHeight, splittedText, lines, blockHeight, pageCount;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Initialise the PDF document to write\n            lMargin = 15; //left margin in mm\n\n            rMargin = 15; //right margin in mm\n\n            pdfInMM = 210; // width of A4 in mm\n\n            doc = new jsPDF(\"p\", \"mm\", \"a4\");\n            yPos = 55;\n            maxYPos = 230; // Question Information\n\n            questionTitle = \"Question Title: \" + summary[0];\n            questionDescription = \"Question Description: \" + summary[1];\n            reward = \"Reward: \" + summary[2] * 1e-4;\n            doc.setFontSize(18);\n            doc.text(lMargin, 45, \"Question Information\");\n            doc.setLineWidth(0.2);\n            doc.line(lMargin, 47, 190, 47);\n            lineHeight = doc.getLineHeight(questionDescription) / doc.internal.scaleFactor; // Question Title\n\n            splittedText = doc.splitTextToSize(questionTitle, pdfInMM - lMargin - rMargin);\n            doc.setFontSize(13);\n            doc.text(lMargin, yPos, splittedText); // Question Description\n\n            lines = splittedText.length;\n            blockHeight = lines * lineHeight;\n            yPos += lineHeight;\n            splittedText = doc.splitTextToSize(questionDescription, pdfInMM - lMargin - rMargin);\n            doc.text(lMargin, yPos, splittedText); // Question Reward\n\n            lines = splittedText.length;\n            blockHeight = lines * lineHeight;\n            yPos += lineHeight;\n            splittedText = doc.splitTextToSize(reward, pdfInMM - lMargin - rMargin);\n            doc.text(lMargin, yPos, splittedText); // Question's Images\n\n            lines = splittedText.length;\n            blockHeight = lines * lineHeight;\n            yPos += lineHeight;\n            splittedText = doc.splitTextToSize(\"Link(s) of Image(s) Uploaded For Question:\", pdfInMM - lMargin - rMargin);\n            doc.setFontType('bold');\n            doc.text(lMargin, yPos, splittedText);\n\n            if (summary[5].length != 0) {\n              summary[5].map(function (imageHash, index) {\n                var link = \"https://ipfs.io/ipfs/\" + imageHash;\n                lines = splittedText.length;\n                blockHeight = lines * lineHeight;\n                yPos += lineHeight;\n                lines = doc.splitTextToSize(link, pdfInMM - lMargin - rMargin);\n                doc.setFontSize(13);\n                doc.setFontType('normal');\n                doc.text(lMargin, yPos, lines);\n              });\n            } // Answer Header\n\n\n            lines = splittedText.length;\n            blockHeight = lines * lineHeight;\n            yPos += lineHeight * 2;\n            splittedText = doc.splitTextToSize(\"Answer(s) Provided\", pdfInMM - lMargin - rMargin);\n            doc.setFontSize(18);\n            doc.setFontType('normal');\n            doc.text(lMargin, yPos, splittedText);\n            lines = splittedText.length;\n            blockHeight = lines * lineHeight;\n            yPos += lineHeight * 0.3;\n            doc.setLineWidth(0.2);\n            doc.line(lMargin, yPos, 190, yPos); // Answer Body\n\n            if (answerList.length != 0) {\n              answerList.map(function (answer, index) {\n                var answerAddress = answer[2];\n                var content = answer[0];\n                var numOfApprovals = answer[4];\n                var rewarded = answer[1];\n                var answerLine = answerAddress + \": \" + content;\n                var approvalLine = \"Number of Approvals: \" + numOfApprovals;\n                var rewardedLine = \"Rewarded: \" + rewarded; // Answers\n\n                lines = splittedText.length;\n                blockHeight = lines * lineHeight;\n\n                if (yPos > maxYPos) {\n                  doc.addPage();\n                  yPos = 40;\n                } else {\n                  yPos += blockHeight;\n                }\n\n                splittedText = doc.splitTextToSize(answerLine, pdfInMM - lMargin - rMargin);\n                doc.setFontSize(12);\n                doc.setFontType('normal');\n                doc.text(lMargin, yPos, splittedText);\n\n                if (answer[8].length != 0) {\n                  answer[8].map(function (imageHash, index) {\n                    var link = \"https://ipfs.io/ipfs/\" + imageHash;\n                    lines = splittedText.length;\n                    blockHeight = lines * lineHeight;\n                    yPos += lineHeight;\n                    splittedText = doc.splitTextToSize(link, pdfInMM - lMargin - rMargin);\n                    doc.setFontSize(13);\n                    doc.setFontType('normal');\n                    doc.text(lMargin, yPos, splittedText);\n                  });\n                } // Number Of Approvals\n\n\n                lines = splittedText.length;\n                blockHeight = lines * lineHeight;\n\n                if (yPos > maxYPos) {\n                  doc.addPage();\n                  yPos = 40;\n                } else {\n                  yPos += lineHeight * 6;\n                }\n\n                splittedText = doc.splitTextToSize(approvalLine, pdfInMM - lMargin - rMargin);\n                doc.text(lMargin, yPos, splittedText); // Rewarded Or Not\n\n                lines = splittedText.length;\n                blockHeight = lines * lineHeight;\n\n                if (yPos > maxYPos) {\n                  doc.addPage();\n                  yPos = 40;\n                } else {\n                  yPos += lineHeight;\n                }\n\n                splittedText = doc.splitTextToSize(rewardedLine, pdfInMM - lMargin - rMargin);\n                doc.text(lMargin, yPos, splittedText);\n              });\n            }\n\n            pageCount = doc.internal.getNumberOfPages();\n            doc = createFooter(doc, pageCount);\n            doc = createHeader(doc, pageCount);\n            doc.save(\"EthQuestion_\" + summary[0] + \".pdf\");\n\n          case 51:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function exportQuestion(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar exportComments =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(comments) {\n    var lMargin, rMargin, pdfInMM, doc, yPos, maxYPos, commentHeader, splittedText, lineHeight, pageCount;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            // Initialise the PDF document to write\n            lMargin = 15; //left margin in mm\n\n            rMargin = 15; //right margin in mm\n\n            pdfInMM = 210; // width of A4 in mm\n\n            doc = new jsPDF(\"p\", \"mm\", \"a4\");\n            yPos = 55;\n            maxYPos = 230; // Comments Header\n\n            doc.setFontSize(18);\n            commentHeader = \"Comment(s) Provided By Users\";\n            splittedText = doc.splitTextToSize(commentHeader, pdfInMM - lMargin - rMargin);\n            doc.text(lMargin, 45, splittedText);\n            doc.setLineWidth(0.2);\n            doc.line(lMargin, 47, 190, 47);\n            lineHeight = doc.getLineHeight(commentHeader) / doc.internal.scaleFactor; // Comments Body\n\n            if (comments.length != 0) {\n              comments.map(function (comment, index) {\n                var lines = splittedText.length;\n                var blockHeight = lines * lineHeight;\n\n                if (yPos > maxYPos) {\n                  doc.addPage();\n                  yPos = 40;\n                }\n\n                yPos += blockHeight;\n                splittedText = doc.splitTextToSize(comment, pdfInMM - lMargin - rMargin);\n                doc.setFontSize(12);\n                doc.setFontType('normal');\n                doc.text(lMargin, yPos, splittedText);\n              });\n            }\n\n            pageCount = doc.internal.getNumberOfPages();\n            doc = createFooter(doc, pageCount);\n            doc = createHeader(doc, pageCount);\n            doc.save(\"EthQuestion_Comments.pdf\");\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function exportComments(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar createHeader = function createHeader(document, pageCount) {\n  for (var i = 1; i <= pageCount; i++) {\n    if (i == 1) {\n      document.setPage(i);\n      document.setTextColor(0);\n      document.setFontSize(24);\n      document.text(15, 30, \"Ethereum Question & Answering System\");\n      document.setLineWidth(0.5);\n      document.line(15, 33, 190, 33);\n    } else {\n      document.setPage(i);\n      document.setTextColor(150);\n      document.setFontSize(13);\n      document.text(105, 30, \"Ethereum Question & Answering System\");\n      document.setLineWidth(0.3);\n      document.line(15, 33, 190, 33);\n    }\n  }\n\n  return document;\n};\n\nvar createFooter = function createFooter(document, pageCount) {\n  for (var i = 1; i <= pageCount; i++) {\n    document.setPage(i);\n    document.setFontSize(13);\n    document.setTextColor(150);\n    document.text(170, 285, \"Page \" + document.internal.getCurrentPageInfo().pageNumber + \" of \" + pageCount);\n  }\n\n  return document;\n};\n\nexport { exportQuestion, exportComments };","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\utils\\pdf.js"],"names":["jsPDF","window","then","module","default","exportQuestion","summary","answerList","lMargin","rMargin","pdfInMM","doc","yPos","maxYPos","questionTitle","questionDescription","reward","setFontSize","text","setLineWidth","line","lineHeight","getLineHeight","internal","scaleFactor","splittedText","splitTextToSize","lines","length","blockHeight","setFontType","map","imageHash","index","link","answer","answerAddress","content","numOfApprovals","rewarded","answerLine","approvalLine","rewardedLine","addPage","pageCount","getNumberOfPages","createFooter","createHeader","save","exportComments","comments","commentHeader","comment","document","i","setPage","setTextColor","getCurrentPageInfo","pageNumber"],"mappings":"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","sourcesContent":["// Ensure jsPDF does not import on Server Side\r\nlet jsPDF = null;\r\nif (typeof window !== \"undefined\") {\r\n  import(\"jspdf\").then(module => {\r\n    jsPDF = module.default;\r\n  });\r\n}\r\n\r\nconst exportQuestion = async(summary, answerList) => {\r\n  // Initialise the PDF document to write\r\n  let lMargin=15; //left margin in mm\r\n  let rMargin=15; //right margin in mm\r\n  let pdfInMM=210;  // width of A4 in mm\r\n  let doc = new jsPDF(\"p\",\"mm\",\"a4\");\r\n  let yPos = 55;\r\n  let maxYPos = 230;\r\n\r\n  // Question Information\r\n  let questionTitle = \"Question Title: \" + summary[0];\r\n  let questionDescription = \"Question Description: \" + summary[1];\r\n  let reward = \"Reward: \" + summary[2]*1e-4;\r\n  doc.setFontSize(18)\r\n  doc.text(lMargin, 45, \"Question Information\");\r\n  doc.setLineWidth(0.2)\r\n  doc.line(lMargin, 47, 190, 47)\r\n  let lineHeight = doc.getLineHeight(questionDescription) / doc.internal.scaleFactor\r\n\r\n  // Question Title\r\n  let splittedText = doc.splitTextToSize(questionTitle, (pdfInMM-lMargin-rMargin));\r\n  doc.setFontSize(13)\r\n  doc.text(lMargin, yPos, splittedText);\r\n\r\n  // Question Description\r\n  let lines = splittedText.length\r\n  let blockHeight = lines * lineHeight\r\n  yPos += lineHeight\r\n  splittedText = doc.splitTextToSize(questionDescription, (pdfInMM-lMargin-rMargin));\r\n  doc.text(lMargin, yPos, splittedText);\r\n\r\n  // Question Reward\r\n  lines = splittedText.length\r\n  blockHeight = lines * lineHeight\r\n  yPos += lineHeight\r\n  splittedText = doc.splitTextToSize(reward, (pdfInMM-lMargin-rMargin));\r\n  doc.text(lMargin, yPos, splittedText);\r\n\r\n  // Question's Images\r\n  lines = splittedText.length\r\n  blockHeight = lines * lineHeight\r\n  yPos += lineHeight\r\n  splittedText = doc.splitTextToSize(\"Link(s) of Image(s) Uploaded For Question:\", (pdfInMM-lMargin-rMargin));\r\n  doc.setFontType('bold')\r\n  doc.text(lMargin, yPos, splittedText);\r\n\r\n  if (summary[5].length != 0) {\r\n      summary[5].map((imageHash, index) => {\r\n        let link = \"https://ipfs.io/ipfs/\"+imageHash\r\n        lines = splittedText.length\r\n        blockHeight = lines * lineHeight\r\n        yPos += lineHeight\r\n        lines = doc.splitTextToSize(link, (pdfInMM-lMargin-rMargin));\r\n        doc.setFontSize(13)\r\n        doc.setFontType('normal')\r\n        doc.text(lMargin,yPos,lines);\r\n      })\r\n  }\r\n\r\n  // Answer Header\r\n  lines = splittedText.length\r\n  blockHeight = lines * lineHeight\r\n  yPos += lineHeight * 2\r\n  splittedText = doc.splitTextToSize(\"Answer(s) Provided\", (pdfInMM-lMargin-rMargin));\r\n  doc.setFontSize(18)\r\n  doc.setFontType('normal')\r\n  doc.text(lMargin, yPos, splittedText);\r\n  lines = splittedText.length\r\n  blockHeight = lines * lineHeight\r\n  yPos += lineHeight * 0.3\r\n  doc.setLineWidth(0.2)\r\n  doc.line(lMargin, yPos, 190, yPos)\r\n\r\n  // Answer Body\r\n  if (answerList.length != 0) {\r\n      answerList.map((answer, index) => {\r\n        let answerAddress = answer[2];\r\n        let content = answer[0];\r\n        let numOfApprovals = answer[4];\r\n        let rewarded = answer[1]\r\n        let answerLine = answerAddress + \": \" + content;\r\n        let approvalLine = \"Number of Approvals: \" + numOfApprovals;\r\n        let rewardedLine = \"Rewarded: \" + rewarded;\r\n\r\n        // Answers\r\n        lines = splittedText.length\r\n        blockHeight = lines * lineHeight\r\n        if (yPos > maxYPos) {\r\n          doc.addPage()\r\n          yPos = 40;\r\n        } else {\r\n          yPos += blockHeight\r\n        }\r\n        splittedText = doc.splitTextToSize(answerLine, (pdfInMM-lMargin-rMargin));\r\n        doc.setFontSize(12)\r\n        doc.setFontType('normal')\r\n        doc.text(lMargin, yPos, splittedText);\r\n\r\n        if (answer[8].length != 0) {\r\n          answer[8].map((imageHash, index) => {\r\n            let link = \"https://ipfs.io/ipfs/\"+imageHash\r\n            lines = splittedText.length\r\n            blockHeight = lines * lineHeight\r\n            yPos += lineHeight\r\n            splittedText = doc.splitTextToSize(link, (pdfInMM-lMargin-rMargin));\r\n            doc.setFontSize(13)\r\n            doc.setFontType('normal')\r\n            doc.text(lMargin,yPos,splittedText);\r\n          })\r\n        }\r\n\r\n        // Number Of Approvals\r\n        lines = splittedText.length\r\n        blockHeight = lines * lineHeight\r\n        if (yPos > maxYPos) {\r\n          doc.addPage()\r\n          yPos = 40;\r\n        } else {\r\n          yPos += lineHeight * 6\r\n        }\r\n        splittedText = doc.splitTextToSize(approvalLine, (pdfInMM-lMargin-rMargin));\r\n        doc.text(lMargin, yPos, splittedText);\r\n\r\n        // Rewarded Or Not\r\n        lines = splittedText.length\r\n        blockHeight = lines * lineHeight\r\n        if (yPos > maxYPos) {\r\n          doc.addPage()\r\n          yPos = 40;\r\n        } else {\r\n          yPos += lineHeight\r\n        }\r\n        splittedText = doc.splitTextToSize(rewardedLine, (pdfInMM-lMargin-rMargin));\r\n        doc.text(lMargin, yPos, splittedText);\r\n      })\r\n  }\r\n  let pageCount = doc.internal.getNumberOfPages();\r\n  doc = createFooter(doc, pageCount);\r\n  doc = createHeader(doc, pageCount);\r\n  doc.save(\"EthQuestion_\" + summary[0] + \".pdf\");\r\n}\r\n\r\nconst exportComments = async (comments) => {\r\n  // Initialise the PDF document to write\r\n  let lMargin=15; //left margin in mm\r\n  let rMargin=15; //right margin in mm\r\n  let pdfInMM=210;  // width of A4 in mm\r\n  let doc = new jsPDF(\"p\",\"mm\",\"a4\");\r\n  let yPos = 55;\r\n  let maxYPos = 230;\r\n\r\n  // Comments Header\r\n  doc.setFontSize(18)\r\n  let commentHeader = \"Comment(s) Provided By Users\"\r\n  let splittedText = doc.splitTextToSize(commentHeader, (pdfInMM-lMargin-rMargin));\r\n  doc.text(lMargin, 45, splittedText);\r\n  doc.setLineWidth(0.2)\r\n  doc.line(lMargin, 47, 190, 47)\r\n  let lineHeight = doc.getLineHeight(commentHeader) / doc.internal.scaleFactor\r\n\r\n  // Comments Body\r\n  if (comments.length != 0) {\r\n      comments.map((comment, index) => {\r\n        let lines = splittedText.length\r\n        let blockHeight = lines * lineHeight\r\n        if (yPos > maxYPos) {\r\n          doc.addPage()\r\n          yPos = 40;\r\n        }\r\n        yPos += blockHeight\r\n        splittedText = doc.splitTextToSize(comment, (pdfInMM-lMargin-rMargin));\r\n        doc.setFontSize(12)\r\n        doc.setFontType('normal')\r\n        doc.text(lMargin, yPos, splittedText);\r\n      })\r\n  }\r\n  let pageCount = doc.internal.getNumberOfPages();\r\n  doc = createFooter(doc, pageCount);\r\n  doc = createHeader(doc, pageCount);\r\n  doc.save(\"EthQuestion_Comments.pdf\");\r\n\r\n}\r\n\r\nconst createHeader = (document, pageCount) => {\r\n  for(let i = 1; i <= pageCount; i++) {\r\n    if (i == 1) {\r\n      document.setPage(i)\r\n      document.setTextColor(0)\r\n      document.setFontSize(24)\r\n      document.text(15, 30, \"Ethereum Question & Answering System\");\r\n      document.setLineWidth(0.5)\r\n      document.line(15, 33, 190, 33)\r\n    } else {\r\n      document.setPage(i)\r\n      document.setTextColor(150)\r\n      document.setFontSize(13)\r\n      document.text(105, 30, \"Ethereum Question & Answering System\");\r\n      document.setLineWidth(0.3)\r\n      document.line(15, 33, 190, 33)\r\n    }\r\n  }\r\n  return document\r\n}\r\n\r\nconst createFooter = (document, pageCount) => {\r\n  for(let i = 1; i <= pageCount; i++) {\r\n    document.setPage(i)\r\n    document.setFontSize(13)\r\n    document.setTextColor(150)\r\n    document.text(170, 285, \"Page \" + document.internal.getCurrentPageInfo().pageNumber + \" of \" + pageCount)\r\n  }\r\n  return document\r\n}\r\n\r\nexport { exportQuestion, exportComments }\r\n"]},"metadata":{},"sourceType":"module"}