{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Table } from 'semantic-ui-react';\nimport { Link } from '../routes';\n\nvar QuestionRow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionRow, _Component);\n\n  function QuestionRow() {\n    _classCallCheck(this, QuestionRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(QuestionRow).apply(this, arguments));\n  }\n\n  _createClass(QuestionRow, [{\n    key: \"render\",\n    value: function render() {\n      var summary = this.props.summary;\n      return (// <Item>\n        //   <Item.Content>\n        //     <Item.Header as='a'>{summary[0]}</Item.Header>\n        //     <Item.Meta>Reward:{summary[2]}</Item.Meta>\n        //     <Item.Description>\n        //       {summary[1]}\n        //     </Item.Description>\n        //     <Item.Extra>Duration:{summary[3]}</Item.Extra>\n        //   </Item.Content>\n        // </Item>\n        React.createElement(React.Fragment, null, React.createElement(Table, {\n          definition: true\n        }, React.createElement(Table.Body, null, React.createElement(Table.Row, null, React.createElement(Table.Cell, {\n          width: 2\n        }, \"Question Title\"), React.createElement(Table.Cell, {\n          style: {\n            fontSize: '20px',\n            lineHeight: '1.5'\n          }\n        }, summary[0])), React.createElement(Table.Row, null, React.createElement(Table.Cell, {\n          width: 2\n        }, \"Description\"), React.createElement(Table.Cell, {\n          style: {\n            fontSize: '20px',\n            lineHeight: '1.5'\n          }\n        }, summary[1])), React.createElement(Table.Row, null, React.createElement(Table.Cell, null, \"Reward (ETH)\"), React.createElement(Table.Cell, {\n          style: {\n            fontSize: '20px'\n          }\n        }, summary[2])), React.createElement(Table.Row, null, React.createElement(Table.Cell, null, \"Publish Time\"), React.createElement(Table.Cell, {\n          style: {\n            fontSize: '20px'\n          }\n        }, \"Publish Time\")), React.createElement(Table.Row, null, React.createElement(Table.Cell, null, \"Duration (hours)\"), React.createElement(Table.Cell, {\n          style: {\n            fontSize: '20px'\n          }\n        }, React.createElement(\"span\", {\n          style: {\n            verticalAlign: 'middle',\n            lineHeight: '33px'\n          }\n        }, summary[3]), remainingTime > 0 ? React.createElement(Popup, {\n          trigger: React.createElement(Button, {\n            style: {\n              float: 'right',\n              verticalAlign: 'middle'\n            },\n            icon: \"clock\",\n            color: \"violet\"\n          }),\n          content: React.createElement(\"span\", null, React.createElement(\"span\", null, \"Remaining time - \"), React.createElement(Countdown, {\n            date: _Date$now() + remainingTime\n          })),\n          position: \"bottom right\",\n          inverted: true\n        }) : React.createElement(Popup, {\n          trigger: React.createElement(Button, {\n            style: {\n              float: 'right',\n              verticalAlign: 'middle'\n            },\n            icon: \"clock\",\n            color: \"red\"\n          }),\n          content: \"EXPIRED\",\n          position: \"bottom right\",\n          inverted: true\n        }))))))\n      );\n    }\n  }]);\n\n  return QuestionRow;\n}(Component);\n\nexport default QuestionRow;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\components\\QuestionRow.js"],"names":["React","Component","Table","Link","QuestionRow","summary","props","fontSize","lineHeight","verticalAlign","remainingTime","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport { Link } from '../routes';\r\n\r\nclass QuestionRow extends Component {\r\n    render() {\r\n        const { summary } = this.props;\r\n\r\n        return (\r\n          // <Item>\r\n          //   <Item.Content>\r\n          //     <Item.Header as='a'>{summary[0]}</Item.Header>\r\n          //     <Item.Meta>Reward:{summary[2]}</Item.Meta>\r\n          //     <Item.Description>\r\n          //       {summary[1]}\r\n          //     </Item.Description>\r\n          //     <Item.Extra>Duration:{summary[3]}</Item.Extra>\r\n          //   </Item.Content>\r\n          // </Item>\r\n\r\n          <React.Fragment>\r\n              <Table definition>\r\n                  <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell width={2}>Question Title</Table.Cell>\r\n                        <Table.Cell style={{fontSize: '20px', lineHeight: '1.5'}}>\r\n                            {summary[0]}\r\n                        </Table.Cell>\r\n                    </Table.Row>\r\n                      <Table.Row>\r\n                          <Table.Cell width={2}>Description</Table.Cell>\r\n                          <Table.Cell style={{fontSize: '20px', lineHeight: '1.5'}}>\r\n                              {summary[1]}\r\n                          </Table.Cell>\r\n                      </Table.Row>\r\n                      <Table.Row>\r\n                          <Table.Cell>Reward (ETH)</Table.Cell>\r\n                          <Table.Cell style={{fontSize: '20px'}}>{summary[2]}</Table.Cell>\r\n                      </Table.Row>\r\n                      <Table.Row>\r\n                          <Table.Cell>Publish Time</Table.Cell>\r\n                          <Table.Cell style={{fontSize: '20px'}}>Publish Time</Table.Cell>\r\n                      </Table.Row>\r\n                      <Table.Row>\r\n                          <Table.Cell>Duration (hours)</Table.Cell>\r\n                          <Table.Cell style={{fontSize: '20px'}}>\r\n                              <span style={{verticalAlign: 'middle', lineHeight: '33px'}}>\r\n                                  {summary[3]}\r\n                              </span>\r\n                              {remainingTime > 0\r\n                                  ? <Popup\r\n                                      trigger={\r\n                                          <Button style={{float: 'right', verticalAlign: 'middle'}}\r\n                                                  icon='clock'\r\n                                                  color=\"violet\"\r\n                                          />}\r\n                                      content={\r\n                                          <span>\r\n                                          <span>Remaining time - </span>\r\n                                          <Countdown date={Date.now() + remainingTime}>\r\n                                          </Countdown>\r\n                                      </span>}\r\n                                      position='bottom right'\r\n                                      inverted />\r\n                                  : <Popup\r\n                                      trigger={\r\n                                          <Button style={{float: 'right', verticalAlign: 'middle'}}\r\n                                                  icon='clock'\r\n                                                  color=\"red\"\r\n                                          />\r\n                                      }\r\n                                      content={\"EXPIRED\"}\r\n                                      position='bottom right'\r\n                                      inverted />\r\n                              }\r\n                          </Table.Cell>\r\n                      </Table.Row>\r\n                  </Table.Body>\r\n              </Table>\r\n          </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionRow;\r\n"]},"metadata":{},"sourceType":"module"}