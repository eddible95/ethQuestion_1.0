{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport MobileDetect from 'mobile-detect';\nimport { Container, Segment, Header, Divider, Responsive, Button, Icon, TextArea, Modal, Loader, Message, Form, Grid, Label, Progress } from \"semantic-ui-react\";\nimport AccountIssueModal from '../components/AccountIssueModal';\nimport TimeOutModal from '../components/TimeOutModal';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport Profile from '../ethereum/profile';\nimport credentials from '../ethereum/credentials';\nimport feedback from '../ethereum/feedback';\nimport { getWidthFactory } from '../utils/device';\nimport { checkFieldEmpty } from '../utils/functions';\nimport { Router } from '../routes';\nimport cookies from 'next-cookies';\n\nvar FeedbackPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FeedbackPage, _Component);\n\n  function FeedbackPage(props) {\n    var _this;\n\n    _classCallCheck(this, FeedbackPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FeedbackPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var account, emailAddress, comments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              }); // Ensures all fields are filled\n\n\n              if (!(checkFieldEmpty(_this.state.like) && checkFieldEmpty(_this.state.usefulness) && checkFieldEmpty(_this.state.easy))) {\n                _context.next = 20;\n                break;\n              }\n\n              _context.prev = 2;\n              account = _this.state.account;\n              _context.next = 6;\n              return credentials.methods.getBinding(account).call();\n\n            case 6:\n              emailAddress = _context.sent;\n              comments = \"Comments provided by \" + emailAddress + \": \" + _this.state.comments;\n              _context.next = 10;\n              return feedback.methods.updateFeedback(_this.state.like, _this.state.usefulness, _this.state.easy, comments).send({\n                from: account,\n                gasPrice: '0'\n              });\n\n            case 10:\n              Router.pushRoute('/home'); // Automatic redirect the user.\n\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n\n              if (_context.t0.message == \"Returned error: authentication needed: password or unlock\") {\n                _this.setState({\n                  timeout: true\n                });\n              }\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n            case 17:\n              _this.setState({\n                loading: false\n              });\n\n              _context.next = 22;\n              break;\n\n            case 20:\n              _this.setState({\n                errorMessage: \"Required Field(s) Empty\"\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 13]]);\n    })));\n\n    _this.state = {\n      like: \"\",\n      usefulness: \"\",\n      easy: \"\",\n      comments: \"\",\n      loading: false,\n      errorMessage: \"\",\n      login: false,\n      resourceLoading: true,\n      timeout: false,\n      accountType: null,\n      statistics: []\n    };\n    return _this;\n  }\n\n  _createClass(FeedbackPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var login, profileAddress, profile, accountType, statistics;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(typeof web3 === 'undefined')) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                this.setState({\n                  loading: false\n                });\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                login = false;\n\n                if (!this.props.isLogin) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                login = true; // Get Account Type\n\n                _context2.next = 8;\n                return factory.methods.getProfile(this.props.account).call();\n\n              case 8:\n                profileAddress = _context2.sent;\n                profile = Profile(profileAddress);\n                _context2.next = 12;\n                return profile.methods.getAccountType().call();\n\n              case 12:\n                accountType = _context2.sent;\n                accountType == 0 ? accountType = \"Admin\" : accountType = \"User\";\n                _context2.next = 16;\n                return feedback.methods.getSummaryStatistics().call();\n\n              case 16:\n                statistics = _context2.sent;\n                this.setState({\n                  login: login\n                });\n                this.setState({\n                  accountType: accountType\n                });\n                this.setState({\n                  statistics: statistics\n                });\n\n              case 20:\n                this.setState({\n                  resourceLoading: false\n                });\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() // Submit the question to be stored on the Ethereum Blockchain\n\n  }, {\n    key: \"renderStatistic\",\n    value: function renderStatistic() {\n      var numOfLikes = this.state.statistics[0];\n      var numOfDislikes = this.state.statistics[1];\n      var numOfUseful = this.state.statistics[2];\n      var numOfNotUseful = this.state.statistics[3];\n      var numOfEasy = this.state.statistics[4];\n      var numOfNotEasy = this.state.statistics[5];\n      var totalRatings = Number(numOfLikes) + Number(numOfDislikes);\n      return React.createElement(Segment, null, React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"center\"\n      }, React.createElement(Icon, {\n        name: \"chart bar outline\"\n      }), \"Summary Statistics of System\"), React.createElement(\"p\", {\n        style: {\n          textAlign: 'center'\n        }\n      }, React.createElement(\"b\", null, \"Total Rating(s):\"), \" \", totalRatings), React.createElement(Grid, {\n        centered: true,\n        columns: 2\n      }, React.createElement(Grid.Column, {\n        style: {\n          paddingLeft: \"10px\",\n          paddingRight: \"0\",\n          width: \"30%\"\n        }\n      }, React.createElement(Label, {\n        horizontal: true\n      }, \"Likes\")), React.createElement(Grid.Column, {\n        style: {\n          paddingLeft: \"0\",\n          paddingRight: \"10px\",\n          width: \"70%\"\n        }\n      }, React.createElement(Progress, {\n        color: \"green\",\n        value: numOfLikes,\n        total: totalRatings,\n        progress: \"percent\",\n        precision: 2,\n        style: {\n          margin: \"0\"\n        }\n      })), React.createElement(Grid.Column, {\n        style: {\n          paddingLeft: \"10px\",\n          paddingRight: \"0\",\n          width: \"30%\"\n        }\n      }, React.createElement(Label, {\n        horizontal: true\n      }, \"Useful\")), React.createElement(Grid.Column, {\n        style: {\n          paddingLeft: \"0\",\n          paddingRight: \"10px\",\n          width: \"70%\"\n        }\n      }, React.createElement(Progress, {\n        color: \"green\",\n        value: numOfUseful,\n        total: totalRatings,\n        progress: \"percent\",\n        precision: 2,\n        style: {\n          margin: \"0\"\n        }\n      })), React.createElement(Grid.Column, {\n        style: {\n          paddingLeft: \"10px\",\n          paddingRight: \"0\",\n          width: \"30%\"\n        }\n      }, React.createElement(Label, {\n        horizontal: true\n      }, \"Easy To Use\")), React.createElement(Grid.Column, {\n        style: {\n          paddingLeft: \"0\",\n          paddingRight: \"10px\",\n          width: \"70%\"\n        }\n      }, React.createElement(Progress, {\n        color: \"green\",\n        value: numOfEasy,\n        total: totalRatings,\n        progress: \"percent\",\n        precision: 2,\n        style: {\n          margin: \"0\"\n        }\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.login) {\n        return React.createElement(Layout, {\n          accountType: this.state.accountType,\n          page: \"Feedback\"\n        }, React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(Container, {\n          style: {\n            width: \"70vw\"\n          }\n        }, React.createElement(Segment, {\n          raised: true\n        }, React.createElement(Header, {\n          as: \"h2\",\n          textAlign: \"center\"\n        }, \"Collection of Feedback For System\"))), React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(Grid, {\n          centered: true\n        }, React.createElement(Grid.Column, {\n          width: 8\n        }, React.createElement(Header, {\n          as: \"h3\",\n          textAlign: \"left\"\n        }, \"Please provided feedback via the Google Form below:\"), React.createElement(\"a\", {\n          style: {\n            display: \"table-cell\"\n          },\n          href: \"https://forms.gle/g4MstrdxWFLtcC6V6\",\n          target: \"_blank\"\n        }, \"Link to Google Form\"), React.createElement(Header, {\n          as: \"h3\",\n          textAlign: \"left\"\n        }, \"Do you like the system?\"), React.createElement(\"p\", null, \"Selected Choice: \", React.createElement(\"b\", null, this.state.like.toString())), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"green\",\n          compact: true,\n          onClick: function onClick() {\n            _this2.setState({\n              like: true\n            });\n          }\n        }, React.createElement(Icon, {\n          name: \"thumbs up outline\"\n        }), \"Yes\"), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"red\",\n          compact: true,\n          onClick: function onClick() {\n            _this2.setState({\n              like: false\n            });\n          }\n        }, React.createElement(Icon, {\n          name: \"thumbs down outline\"\n        }), \"No\"), React.createElement(Header, {\n          as: \"h3\",\n          textAlign: \"left\"\n        }, \"Do you find the system useful?\"), React.createElement(\"p\", null, \"Selected Choice: \", React.createElement(\"b\", null, this.state.usefulness.toString())), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"green\",\n          compact: true,\n          onClick: function onClick() {\n            _this2.setState({\n              usefulness: true\n            });\n          }\n        }, React.createElement(Icon, {\n          name: \"thumbs up outline\"\n        }), \"Yes\"), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"red\",\n          compact: true,\n          onClick: function onClick() {\n            _this2.setState({\n              usefulness: false\n            });\n          }\n        }, React.createElement(Icon, {\n          name: \"thumbs down outline\"\n        }), \"No\"), React.createElement(Header, {\n          as: \"h3\",\n          textAlign: \"left\"\n        }, \"Do you find the system easy to use?\"), React.createElement(\"p\", null, \"Selected Choice: \", React.createElement(\"b\", null, this.state.easy.toString())), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"green\",\n          compact: true,\n          onClick: function onClick() {\n            _this2.setState({\n              easy: true\n            });\n          }\n        }, React.createElement(Icon, {\n          name: \"thumbs up outline\"\n        }), \"Yes\"), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"red\",\n          compact: true,\n          onClick: function onClick() {\n            _this2.setState({\n              easy: false\n            });\n          }\n        }, React.createElement(Icon, {\n          name: \"thumbs down outline\"\n        }), \"No\"), React.createElement(Header, {\n          as: \"h3\",\n          textAlign: \"left\"\n        }, \"Any suggestions for improvments or other comments?\"), React.createElement(Form, {\n          error: !!this.state.errorMessage,\n          style: {\n            marginTop: '10px'\n          }\n        }, React.createElement(Form.Field, null, React.createElement(TextArea, {\n          placeholder: \"Tell us more\",\n          style: {\n            width: \"100%\",\n            height: \"20%\"\n          },\n          value: this.state.comments,\n          onChange: function onChange(event) {\n            return _this2.setState({\n              comments: event.target.value\n            });\n          }\n        })), React.createElement(Message, {\n          error: true,\n          header: \"Oops!\",\n          content: this.state.errorMessage\n        })), React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(Modal, {\n          open: this.state.loading,\n          trigger: React.createElement(Button, {\n            primary: true,\n            onClick: this.onSubmit\n          }, \"Submit Feedback\"),\n          basic: true,\n          size: \"small\"\n        }, React.createElement(Header, {\n          content: \"Submitting Feedback\"\n        }), React.createElement(Modal.Content, null, React.createElement(\"p\", null, \"Please Confirm the MetaMask Transaction Request to submit your Feedback to the Block-Chain Network. Upon successful submission, you will be redirected to the Home Page. This process might take awhile.\"), React.createElement(Loader, {\n          active: true,\n          inline: \"centered\"\n        }, \"Loading\")))), React.createElement(Grid.Column, {\n          width: 4\n        }, React.createElement(Responsive, {\n          fireOnMount: true,\n          getWidth: getWidthFactory(this.props.isMobileFromSSR),\n          minWidth: Responsive.onlyTablet.minWidth\n        }, this.renderStatistic()))), React.createElement(TimeOutModal, {\n          timeout: this.state.timeout\n        }));\n      } else {\n        return React.createElement(Layout, {\n          accountType: this.state.accountType\n        }, React.createElement(AccountIssueModal, {\n          loading: this.state.resourceLoading,\n          login: this.state.login\n        }));\n      }\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(props) {\n        var isMobileFromSSR, device, md;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                isMobileFromSSR = false;\n\n                if (props.req) {\n                  device = props.req.headers[\"user-agent\"];\n                  md = new MobileDetect(device);\n                  isMobileFromSSR = !!md.mobile();\n                }\n\n                return _context3.abrupt(\"return\", {\n                  isMobileFromSSR: isMobileFromSSR,\n                  isLogin: cookies(props).login || '',\n                  account: cookies(props).wallet || ''\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return FeedbackPage;\n}(Component);\n\nexport default FeedbackPage;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion_1.0\\pages\\feedback.js"],"names":["React","Component","MobileDetect","Container","Segment","Header","Divider","Responsive","Button","Icon","TextArea","Modal","Loader","Message","Form","Grid","Label","Progress","AccountIssueModal","TimeOutModal","Layout","web3","factory","Profile","credentials","feedback","getWidthFactory","checkFieldEmpty","Router","cookies","FeedbackPage","props","setState","loading","errorMessage","state","like","usefulness","easy","account","methods","getBinding","call","emailAddress","comments","updateFeedback","send","from","gasPrice","pushRoute","message","timeout","login","resourceLoading","accountType","statistics","isLogin","getProfile","profileAddress","profile","getAccountType","getSummaryStatistics","numOfLikes","numOfDislikes","numOfUseful","numOfNotUseful","numOfEasy","numOfNotEasy","totalRatings","Number","textAlign","paddingLeft","paddingRight","width","margin","display","toString","marginTop","height","event","target","value","onSubmit","isMobileFromSSR","onlyTablet","minWidth","renderStatistic","req","device","headers","md","mobile","wallet"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MobileDetect from 'mobile-detect';\r\nimport { Container, Segment, Header, Divider, Responsive,\r\n   Button, Icon, TextArea, Modal, Loader, Message, Form, Grid, Label, Progress } from \"semantic-ui-react\";\r\nimport AccountIssueModal from '../components/AccountIssueModal';\r\nimport TimeOutModal from '../components/TimeOutModal';\r\nimport Layout from '../components/Layout';\r\nimport web3 from '../ethereum/web3';\r\nimport factory from '../ethereum/factory';\r\nimport Profile from '../ethereum/profile';\r\nimport credentials from '../ethereum/credentials';\r\nimport feedback from '../ethereum/feedback';\r\nimport { getWidthFactory } from '../utils/device';\r\nimport { checkFieldEmpty } from '../utils/functions';\r\nimport {Router} from '../routes';\r\nimport cookies from 'next-cookies';\r\n\r\nclass FeedbackPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      like: \"\",\r\n      usefulness: \"\",\r\n      easy: \"\",\r\n      comments:\"\",\r\n      loading: false,\r\n      errorMessage: \"\",\r\n      login: false,\r\n      resourceLoading: true,\r\n      timeout: false,\r\n      accountType: null,\r\n      statistics: []\r\n    };\r\n  }\r\n\r\n  static async getInitialProps(props) {\r\n    let isMobileFromSSR = false;\r\n    if(props.req) {\r\n      const device = props.req.headers[\"user-agent\"];\r\n      const md = new MobileDetect(device);\r\n      isMobileFromSSR = !!md.mobile();\r\n    }\r\n    return { isMobileFromSSR, isLogin: cookies(props).login || '' , account: cookies(props).wallet || ''};\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (typeof web3 === 'undefined') {\r\n      this.setState({ loading: false })\r\n      return\r\n    }\r\n    let login = false;\r\n    if (this.props.isLogin) {\r\n      login = true;\r\n      // Get Account Type\r\n      let profileAddress = await factory.methods.getProfile(this.props.account).call();\r\n      let profile = Profile(profileAddress);\r\n      let accountType = await profile.methods.getAccountType().call();\r\n      accountType == 0 ? accountType = \"Admin\" : accountType = \"User\"\r\n      let statistics = await feedback.methods.getSummaryStatistics().call();\r\n      this.setState( { login: login });\r\n      this.setState( { accountType: accountType });\r\n      this.setState( { statistics: statistics });\r\n    }\r\n    this.setState( { resourceLoading: false });\r\n  }\r\n\r\n  // Submit the question to be stored on the Ethereum Blockchain\r\n  onSubmit = async () => {\r\n      this.setState({ loading: true, errorMessage: '' });\r\n      // Ensures all fields are filled\r\n      if (checkFieldEmpty(this.state.like) && checkFieldEmpty(this.state.usefulness) && checkFieldEmpty(this.state.easy)){\r\n        try {\r\n            const account = this.state.account;\r\n            let emailAddress = await credentials.methods.getBinding(account).call();\r\n            let comments = \"Comments provided by \" + emailAddress + \": \" + this.state.comments;\r\n            await feedback.methods\r\n            .updateFeedback(this.state.like, this.state.usefulness, this.state.easy, comments)\r\n            .send({\r\n                from: account,\r\n                gasPrice: '0'\r\n            });\r\n            Router.pushRoute('/home'); // Automatic redirect the user.\r\n        } catch (err) {\r\n            if (err.message == \"Returned error: authentication needed: password or unlock\") {\r\n              this.setState({ timeout: true });\r\n            }\r\n            this.setState({ errorMessage: err.message });\r\n        }\r\n        this.setState({ loading: false });\r\n      } else {\r\n        this.setState({ errorMessage: \"Required Field(s) Empty\" });\r\n        this.setState({ loading: false });\r\n      }\r\n  };\r\n\r\n  renderStatistic() {\r\n    const numOfLikes = this.state.statistics[0];\r\n    const numOfDislikes = this.state.statistics[1];\r\n    const numOfUseful = this.state.statistics[2];\r\n    const numOfNotUseful = this.state.statistics[3];\r\n    const numOfEasy = this.state.statistics[4];\r\n    const numOfNotEasy = this.state.statistics[5];\r\n    const totalRatings = Number(numOfLikes) + Number(numOfDislikes);\r\n    return (\r\n      <Segment>\r\n        <Header as='h3' textAlign=\"center\">\r\n          <Icon name=\"chart bar outline\"/>Summary Statistics of System\r\n        </Header>\r\n        <p style={{ textAlign:'center'}}>\r\n          <b>Total Rating(s):</b> {totalRatings}\r\n        </p>\r\n        <Grid centered columns={2}>\r\n          <Grid.Column style={{paddingLeft:\"10px\", paddingRight:\"0\", width:\"30%\"}}>\r\n            <Label horizontal>\r\n              Likes\r\n            </Label>\r\n          </Grid.Column>\r\n          <Grid.Column style={{paddingLeft:\"0\", paddingRight:\"10px\", width:\"70%\"}}>\r\n            <Progress color='green' value={numOfLikes} total={totalRatings} progress='percent' precision={2} style={{ margin:\"0\"}}/>\r\n          </Grid.Column>\r\n          <Grid.Column style={{paddingLeft:\"10px\", paddingRight:\"0\", width:\"30%\"}}>\r\n            <Label horizontal>\r\n              Useful\r\n            </Label>\r\n          </Grid.Column>\r\n          <Grid.Column style={{paddingLeft:\"0\", paddingRight:\"10px\", width:\"70%\"}}>\r\n            <Progress color='green' value={numOfUseful} total={totalRatings} progress='percent' precision={2} style={{ margin:\"0\"}}/>\r\n          </Grid.Column>\r\n          <Grid.Column style={{paddingLeft:\"10px\", paddingRight:\"0\", width:\"30%\"}}>\r\n            <Label horizontal>\r\n              Easy To Use\r\n            </Label>\r\n          </Grid.Column>\r\n          <Grid.Column style={{paddingLeft:\"0\", paddingRight:\"10px\", width:\"70%\"}}>\r\n            <Progress color='green' value={numOfEasy} total={totalRatings} progress='percent' precision={2} style={{ margin:\"0\"}}/>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.login) {\r\n      return(\r\n        <Layout accountType={this.state.accountType} page={\"Feedback\"}>\r\n          <Divider hidden/>\r\n          <Container style={{width:\"70vw\"}}>\r\n            <Segment raised>\r\n              <Header as='h2' textAlign='center'>\r\n                Collection of Feedback For System\r\n              </Header>\r\n            </Segment>\r\n          </Container>\r\n          <Divider hidden/>\r\n          <Grid centered>\r\n            <Grid.Column width={8}>\r\n              <Header as='h3' textAlign='left'>\r\n                Please provided feedback via the Google Form below:\r\n              </Header>\r\n              <a style={{display: \"table-cell\"}} href=\"https://forms.gle/g4MstrdxWFLtcC6V6\" target=\"_blank\">Link to Google Form</a>\r\n              <Header as='h3' textAlign='left'>\r\n                Do you like the system?\r\n              </Header>\r\n              <p>Selected Choice: <b>{this.state.like.toString()}</b>\r\n              </p>\r\n              <Button icon labelPosition='left' color=\"green\" compact={true}\r\n                onClick={() => {this.setState({ like: true })}}>\r\n                <Icon name='thumbs up outline' />\r\n                Yes\r\n              </Button>\r\n              <Button icon labelPosition='left' color=\"red\" compact={true}\r\n                onClick={() => {this.setState({ like: false })}}>\r\n                <Icon name='thumbs down outline' />\r\n                No\r\n              </Button>\r\n              <Header as='h3' textAlign='left'>\r\n                Do you find the system useful?\r\n              </Header>\r\n              <p>\r\n              Selected Choice: <b>{this.state.usefulness.toString()}</b>\r\n              </p>\r\n              <Button icon labelPosition='left' color=\"green\" compact={true}\r\n                onClick={() => {this.setState({ usefulness: true })}}>\r\n                <Icon name='thumbs up outline' />\r\n                Yes\r\n              </Button>\r\n              <Button icon labelPosition='left' color=\"red\" compact={true}\r\n                onClick={() => {this.setState({ usefulness: false })}}>\r\n                <Icon name='thumbs down outline' />\r\n                No\r\n              </Button>\r\n              <Header as='h3' textAlign='left'>\r\n                Do you find the system easy to use?\r\n              </Header>\r\n              <p>\r\n              Selected Choice: <b>{this.state.easy.toString()}</b>\r\n              </p>\r\n              <Button icon labelPosition='left' color=\"green\" compact={true}\r\n                onClick={() => {this.setState({ easy: true })}}>\r\n                <Icon name='thumbs up outline' />\r\n                Yes\r\n              </Button>\r\n              <Button icon labelPosition='left' color=\"red\" compact={true}\r\n                onClick={() => {this.setState({ easy: false })}}>\r\n                <Icon name='thumbs down outline' />\r\n                No\r\n              </Button>\r\n              <Header as='h3' textAlign='left'>\r\n                Any suggestions for improvments or other comments?\r\n              </Header>\r\n              <Form error={!!this.state.errorMessage} style={{ marginTop: '10px' }}>\r\n                <Form.Field>\r\n                  <TextArea placeholder='Tell us more' style={{width:\"100%\", height:\"20%\"}}\r\n                    value={this.state.comments}\r\n                    onChange={event => this.setState({ comments: event.target.value })}/>\r\n                </Form.Field>\r\n                <Message error header=\"Oops!\" content={this.state.errorMessage}/>\r\n              </Form>\r\n              <Divider hidden/>\r\n              <Modal open={this.state.loading} trigger={<Button primary onClick={this.onSubmit}>Submit Feedback</Button>} basic size='small'>\r\n                <Header content='Submitting Feedback' />\r\n                <Modal.Content>\r\n                  <p>\r\n                    Please Confirm the MetaMask Transaction Request to submit your Feedback to the Block-Chain Network.\r\n                    Upon successful submission, you will be redirected to the Home Page. This process might take awhile.\r\n                  </p>\r\n                  <Loader active inline=\"centered\">\r\n                    Loading\r\n                  </Loader>\r\n                </Modal.Content>\r\n              </Modal>\r\n              </Grid.Column>\r\n              <Grid.Column width={4}>\r\n                <Responsive fireOnMount getWidth={getWidthFactory(this.props.isMobileFromSSR)} minWidth={Responsive.onlyTablet.minWidth}>\r\n                  {this.renderStatistic()}\r\n                </Responsive>\r\n            </Grid.Column>\r\n          </Grid>\r\n          <TimeOutModal timeout={this.state.timeout} />\r\n        </Layout>\r\n      );\r\n    } else {\r\n      return (\r\n        <Layout accountType={this.state.accountType}>\r\n          <AccountIssueModal loading={this.state.resourceLoading} login={this.state.login} />\r\n        </Layout>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default FeedbackPage;\r\n"]},"metadata":{},"sourceType":"module"}