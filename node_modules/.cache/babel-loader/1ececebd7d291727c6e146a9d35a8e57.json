{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Segment, Container, Divider, Header, Grid, List } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\n\nvar AboutPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AboutPage, _Component);\n\n  function AboutPage() {\n    _classCallCheck(this, AboutPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AboutPage).apply(this, arguments));\n  }\n\n  _createClass(AboutPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(Container, null, React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(Segment, {\n        raised: true,\n        textAlign: \"left\"\n      }, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, \"SCSE19-0299: Block-Chain Based Question Answering System\"), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"left\"\n      }, \"Project Details\"), React.createElement(Divider, null), React.createElement(\"p\", {\n        style: {\n          fontSize: '16px'\n        }\n      }, \"This is an experimental system for School Of Computer Science & Engineereing (SCSE) Final Year Project titled SCSE19-0299.\"), React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"left\"\n      }, \"System Rules & Guidelines\"), React.createElement(Divider, null), React.createElement(\"p\", {\n        style: {\n          fontSize: '16px'\n        }\n      }, \"All users are to \", React.createElement(\"b\", null, \"only post questions from past year examinations\"), \". No posting of \", React.createElement(\"b\", null, \"Assignments \"), \"or \", React.createElement(\"b\", null, \"Tutorial Questions\"), \" is allowed. Fraudulent accounts will be \", React.createElement(\"b\", null, \"removed from the system and banned from future use\"), \".\"), React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"left\"\n      }, \"Earning Tokens\"), React.createElement(Divider, null), React.createElement(\"p\", {\n        style: {\n          fontSize: '16px'\n        }\n      }, \"Each user is given \", React.createElement(\"b\", null, \"10 tokens\"), \" each. User can be rewarded additional tokens by providing answers with the highest up votes for each questions. User can also be rewarded \", React.createElement(\"b\", null, \"2 tokens\"), \" for up voting the answer that is awarded the reward for the question.\"), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, \"System Functionality\"), React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"left\"\n      }, \"Post New Question\"), React.createElement(Divider, null), React.createElement(\"p\", {\n        style: {\n          fontSize: '16px'\n        }\n      }, \"Access using \\\"\", React.createElement(\"b\", null, \"Create New Question\"), \"\\\" tab above. Each creation of new question requires at least\", React.createElement(\"b\", null, \" 1 token\"), \" as the reward.\"), React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"left\"\n      }, \"Provide Answer To Question\"), React.createElement(Divider, null), React.createElement(\"p\", {\n        style: {\n          fontSize: '16px'\n        }\n      }, \"All questions posted can be view from the Home Page access via \", React.createElement(\"b\", null, \"\\\"Home\\\"\"), \" tab above. Clicking on the question title will provide additional details on the question as well as providing the form to submit an answer for the question. No tokens are required for answering of question.\"), React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"left\"\n      }, \"Voting Of Answers\"), React.createElement(Divider, null), React.createElement(\"p\", {\n        style: {\n          fontSize: '16px'\n        }\n      }, \"When the question is in the \", React.createElement(\"b\", null, \"\\\"Voting Phase\\\"\"), \", all users can view all answers that are submitted and up vote or down vote each answer depending on it's relevance and helpfulness. Each up vote or down vote requires \", React.createElement(\"b\", null, \"1 token\"), \". Each user can only\", React.createElement(\"b\", null, \" up vote or down each answer once\"), \".\"))), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(Segment, {\n        inverted: true,\n        vertical: true,\n        style: {\n          padding: '5em 0em'\n        }\n      }, React.createElement(Container, null, React.createElement(Grid, {\n        divided: true,\n        inverted: true,\n        stackable: true\n      }, React.createElement(Grid.Row, null, React.createElement(Grid.Column, {\n        width: 3\n      }, React.createElement(Header, {\n        inverted: true,\n        as: \"h4\",\n        content: \"About\"\n      }), React.createElement(List, {\n        link: true,\n        inverted: true\n      }, React.createElement(List.Item, {\n        as: \"a\"\n      }, \"Sitemap\"), React.createElement(List.Item, {\n        as: \"a\"\n      }, \"Contact Us\"), React.createElement(List.Item, {\n        as: \"a\"\n      }, \"Religious Ceremonies\"), React.createElement(List.Item, {\n        as: \"a\"\n      }, \"Gazebo Plans\"))), React.createElement(Grid.Column, {\n        width: 3\n      }, React.createElement(Header, {\n        inverted: true,\n        as: \"h4\",\n        content: \"Services\"\n      }), React.createElement(List, {\n        link: true,\n        inverted: true\n      }, React.createElement(List.Item, {\n        as: \"a\"\n      }, \"Banana Pre-Order\"), React.createElement(List.Item, {\n        as: \"a\"\n      }, \"DNA FAQ\"), React.createElement(List.Item, {\n        as: \"a\"\n      }, \"How To Access\"), React.createElement(List.Item, {\n        as: \"a\"\n      }, \"Favorite X-Men\"))), React.createElement(Grid.Column, {\n        width: 7\n      }, React.createElement(Header, {\n        as: \"h4\",\n        inverted: true\n      }, \"Footer Header\"), React.createElement(\"p\", null, \"Extra space for a call to action inside the footer that could help re-engage users.\")))))));\n    }\n  }]);\n\n  return AboutPage;\n}(Component);\n\nexport default AboutPage;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\about.js"],"names":["React","Component","Segment","Container","Divider","Header","Grid","List","Layout","AboutPage","fontSize","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Segment, Container, Divider, Header, Grid, List } from 'semantic-ui-react';\r\nimport Layout from '../components/Layout';\r\n\r\nclass AboutPage extends Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Container>\r\n          <Divider hidden/>\r\n          <Segment raised textAlign='left'>\r\n            <Header as='h2' textAlign='center'>\r\n              SCSE19-0299: Block-Chain Based Question Answering System\r\n            </Header>\r\n            <Divider hidden/>\r\n            <Header as='h3' textAlign='left'>\r\n              Project Details\r\n            </Header>\r\n            <Divider />\r\n            <p style={{fontSize:'16px'}}>\r\n              This is an experimental system for School Of Computer Science & Engineereing (SCSE) Final Year Project\r\n              titled SCSE19-0299.\r\n            </p>\r\n            <Header as='h3' textAlign='left'>\r\n              System Rules & Guidelines\r\n            </Header>\r\n            <Divider />\r\n            <p style={{fontSize:'16px'}}>\r\n              All users are to <b>only post questions from past year examinations</b>. No posting of <b>Assignments </b>\r\n              or <b>Tutorial Questions</b> is allowed. Fraudulent accounts will be <b>removed from the system and banned from\r\n              future use</b>.\r\n            </p>\r\n            <Header as='h3' textAlign='left'>\r\n              Earning Tokens\r\n            </Header>\r\n            <Divider />\r\n            <p style={{fontSize:'16px'}}>\r\n              Each user is given <b>10 tokens</b> each. User can be rewarded additional tokens by providing answers with the\r\n              highest up votes for each questions. User can also be rewarded <b>2 tokens</b> for up voting the answer that is\r\n              awarded the reward for the question.\r\n            </p>\r\n\r\n            <Divider hidden/>\r\n            <Header as='h2' textAlign='center'>\r\n              System Functionality\r\n            </Header>\r\n            <Header as='h3' textAlign='left'>\r\n              Post New Question\r\n            </Header>\r\n            <Divider />\r\n            <p style={{fontSize:'16px'}}>\r\n              Access using \"<b>Create New Question</b>\" tab above. Each creation of new question requires at least\r\n              <b> 1 token</b> as the reward.\r\n            </p>\r\n            <Header as='h3' textAlign='left'>\r\n              Provide Answer To Question\r\n            </Header>\r\n            <Divider />\r\n            <p style={{fontSize:'16px'}}>\r\n              All questions posted can be view from the Home Page access via <b>\"Home\"</b> tab above. Clicking on the question title\r\n              will provide additional details on the question as well as providing the form to submit an answer for the question. No\r\n              tokens are required for answering of question.\r\n            </p>\r\n            <Header as='h3' textAlign='left'>\r\n              Voting Of Answers\r\n            </Header>\r\n            <Divider />\r\n            <p style={{fontSize:'16px'}}>\r\n              When the question is in the <b>\"Voting Phase\"</b>, all users can view all answers that are submitted and up vote or down vote\r\n              each answer depending on it's relevance and helpfulness. Each up vote or down vote requires <b>1 token</b>. Each user can only\r\n              <b> up vote or down each answer once</b>.\r\n            </p>\r\n          </Segment>\r\n        </Container>\r\n        <Divider hidden/>\r\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\r\n          <Container>\r\n            <Grid divided inverted stackable>\r\n              <Grid.Row>\r\n                <Grid.Column width={3}>\r\n                  <Header inverted as='h4' content='About' />\r\n                  <List link inverted>\r\n                    <List.Item as='a'>Sitemap</List.Item>\r\n                    <List.Item as='a'>Contact Us</List.Item>\r\n                    <List.Item as='a'>Religious Ceremonies</List.Item>\r\n                    <List.Item as='a'>Gazebo Plans</List.Item>\r\n                  </List>\r\n                </Grid.Column>\r\n                <Grid.Column width={3}>\r\n                  <Header inverted as='h4' content='Services' />\r\n                  <List link inverted>\r\n                    <List.Item as='a'>Banana Pre-Order</List.Item>\r\n                    <List.Item as='a'>DNA FAQ</List.Item>\r\n                    <List.Item as='a'>How To Access</List.Item>\r\n                    <List.Item as='a'>Favorite X-Men</List.Item>\r\n                  </List>\r\n                </Grid.Column>\r\n                <Grid.Column width={7}>\r\n                  <Header as='h4' inverted>\r\n                    Footer Header\r\n                  </Header>\r\n                  <p>\r\n                    Extra space for a call to action inside the footer that could help re-engage users.\r\n                  </p>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Container>\r\n        </Segment>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AboutPage;\r\n"]},"metadata":{},"sourceType":"module"}