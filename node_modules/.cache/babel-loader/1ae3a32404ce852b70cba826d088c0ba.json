{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport { Container, Segment, Header, Divider, Button, Icon, Dropdown } from \"semantic-ui-react\";\nimport web3 from '../ethereum/web3';\nimport credentials from '../ethereum/credentials'; // Ensure jsPDF does not import on Server Side\n\nvar jsPDF = null;\n\nif (typeof window !== \"undefined\") {\n  import(\"jspdf\").then(function (module) {\n    jsPDF = module.default;\n  });\n}\n\nvar AdminPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminPage, _Component);\n\n  function AdminPage(props) {\n    var _this;\n\n    _classCallCheck(this, AdminPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"export\", function () {\n      var doc = new jsPDF(); // I know the proper spelling is colour ;)\n\n      doc.setTextColor(100);\n      doc.text(20, 20, 'This is gray.');\n      doc.setTextColor(150);\n      doc.text(20, 30, 'This is light gray.');\n      doc.setTextColor(255, 0, 0);\n      doc.text(20, 40, 'This is red.');\n      doc.setTextColor(0, 255, 0);\n      doc.text(20, 50, 'This is green.');\n      doc.setTextColor(0, 0, 255);\n      doc.text(20, 60, 'This is blue.');\n      doc.save('testing.pdf');\n    });\n\n    _this.state = {\n      questionOptions: []\n    };\n    return _this;\n  }\n\n  _createClass(AdminPage, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var accounts, i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context.sent;\n                _context.next = 5;\n                return credentials.methods.getBinding(accounts[0]).call();\n\n              case 5:\n                _context.t0 = _context.sent;\n\n                if (!(_context.t0 === \"\")) {\n                  _context.next = 8;\n                  break;\n                }\n\n                Router.pushRoute(\"/\"); // Automatic redirect the user to Login or Sign Up\n\n              case 8:\n                for (i = 0; i < this.props.deployedQuestionsCount; i++) {\n                  etherOptions.push({\n                    key: i + 1,\n                    text: i + 1,\n                    value: i + 1\n                  });\n                }\n\n                this.setState({\n                  questionOptions: questionOptions\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Layout, null, React.createElement(Container, {\n        style: {\n          height: \"100vh\"\n        }\n      }, React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(Segment, {\n        raised: true,\n        textAlign: \"left\"\n      }, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, \"Exporting Questions & Answers As PDF\")), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(Dropdown, {\n        clearable: true,\n        options: this.state.etherOptions,\n        selection: true,\n        placeholder: \"Select your value of reward\",\n        value: this.state.reward,\n        onChange: function onChange(e, _ref) {\n          var value = _ref.value;\n          return _this2.setState({\n            reward: value\n          });\n        }\n      }), React.createElement(Button, {\n        icon: true,\n        labelPosition: \"left\",\n        color: \"red\",\n        onClick: this.export\n      }, React.createElement(Icon, {\n        name: \"download\"\n      }), \"Export As PDF\")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var accounts, deployedQuestions, deployedQuestionsCount;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context2.sent;\n                _context2.next = 5;\n                return credentials.methods.getBinding(accounts[0]).call();\n\n              case 5:\n                _context2.t0 = _context2.sent;\n\n                if (!(_context2.t0 === \"\")) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                Router.pushRoute(\"/\");\n\n              case 8:\n                _context2.next = 10;\n                return factory.methods.getDeployedQuestions().call();\n\n              case 10:\n                deployedQuestions = _context2.sent;\n                deployedQuestionsCount = deployedQuestions.length;\n                return _context2.abrupt(\"return\", {\n                  accounts: accounts,\n                  deployedQuestionsCount: deployedQuestionsCount\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return AdminPage;\n}(Component);\n\nexport default AdminPage;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\admin.js"],"names":["React","Component","Layout","Container","Segment","Header","Divider","Button","Icon","Dropdown","web3","credentials","jsPDF","window","then","module","default","AdminPage","props","doc","setTextColor","text","save","state","questionOptions","eth","getAccounts","accounts","methods","getBinding","call","Router","pushRoute","i","deployedQuestionsCount","etherOptions","push","key","value","setState","height","reward","e","export","factory","getDeployedQuestions","deployedQuestions","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { Container, Segment, Header, Divider, Button, Icon, Dropdown } from \"semantic-ui-react\";\r\nimport web3 from '../ethereum/web3';\r\nimport credentials from '../ethereum/credentials';\r\n\r\n// Ensure jsPDF does not import on Server Side\r\nlet jsPDF = null;\r\nif (typeof window !== \"undefined\") {\r\n  import(\"jspdf\").then(module => {\r\n    jsPDF = module.default;\r\n  });\r\n}\r\n\r\nclass AdminPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questionOptions: []\r\n    };\r\n  }\r\n\r\n  static async getInitialProps () {\r\n      const accounts = await web3.eth.getAccounts();\r\n      // Redirect E-Wallet that are not Logged In to the Login Page\r\n      if (await credentials.methods.getBinding(accounts[0]).call() === \"\"){\r\n          Router.pushRoute(`/`);\r\n      }\r\n\r\n      // Retrieve an array of addresses of questions deployed\r\n      let deployedQuestions = await factory.methods.getDeployedQuestions().call();\r\n      let deployedQuestionsCount = deployedQuestions.length;\r\n\r\n      return { accounts, deployedQuestionsCount }\r\n  }\r\n\r\n  async componentWillMount() {\r\n    // Retrieve the Ethereum Account from MetaMask\r\n    const accounts = await web3.eth.getAccounts();\r\n    // Redirect E-Wallet that are not Logged In to the Login Page\r\n    if (await credentials.methods.getBinding(accounts[0]).call() === \"\"){\r\n        Router.pushRoute(`/`); // Automatic redirect the user to Login or Sign Up\r\n    }\r\n    for (let i = 0; i < this.props.deployedQuestionsCount; i++) {\r\n        etherOptions.push({\r\n            key: i+1,\r\n            text: i+1,\r\n            value: i+1\r\n        });\r\n    }\r\n    this.setState( { questionOptions: questionOptions });\r\n  }\r\n\r\n  export = () => {\r\n    var doc = new jsPDF()\r\n\r\n    // I know the proper spelling is colour ;)\r\n    doc.setTextColor(100)\r\n    doc.text(20, 20, 'This is gray.')\r\n\r\n    doc.setTextColor(150)\r\n    doc.text(20, 30, 'This is light gray.')\r\n\r\n    doc.setTextColor(255, 0, 0)\r\n    doc.text(20, 40, 'This is red.')\r\n\r\n    doc.setTextColor(0, 255, 0)\r\n    doc.text(20, 50, 'This is green.')\r\n\r\n    doc.setTextColor(0, 0, 255)\r\n    doc.text(20, 60, 'This is blue.')\r\n\r\n    doc.save('testing.pdf')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Container style={{height:\"100vh\"}}>\r\n          <Divider hidden/>\r\n          <Segment raised textAlign='left'>\r\n            <Header as='h2' textAlign='center'>\r\n              Exporting Questions & Answers As PDF\r\n            </Header>\r\n          </Segment>\r\n          <Divider hidden/>\r\n          <Dropdown clearable\r\n                    options={this.state.etherOptions}\r\n                    selection\r\n                    placeholder='Select your value of reward'\r\n                    value={this.state.reward}\r\n                    onChange={ (e, { value }) => this.setState({ reward: value })}/>\r\n          <Button icon labelPosition='left' color=\"red\" onClick={this.export}>\r\n            <Icon name='download'/>\r\n            Export As PDF\r\n          </Button>\r\n        </Container>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AdminPage;\r\n"]},"metadata":{},"sourceType":"module"}