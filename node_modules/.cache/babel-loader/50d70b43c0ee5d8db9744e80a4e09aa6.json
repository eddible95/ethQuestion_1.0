{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport AccountIssueModal from '../components/AccountIssueModal';\nimport _ from 'lodash';\nimport { Segment, Container, Divider, Header, Modal, Button, Loader, Icon, Table } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport Profile from '../ethereum/profile';\nimport cookies from 'next-cookies';\n\nvar LeaderboardPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LeaderboardPage, _Component);\n\n  function LeaderboardPage(props) {\n    var _this;\n\n    _classCallCheck(this, LeaderboardPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LeaderboardPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSort\", function (clickedColumn) {\n      return function () {\n        var _this$state = _this.state,\n            column = _this$state.column,\n            leaderboardData = _this$state.leaderboardData,\n            direction = _this$state.direction;\n\n        if (column !== clickedColumn) {\n          _this.setState({\n            column: clickedColumn,\n            leaderboardData: _.sortBy(leaderboardData, [clickedColumn]),\n            direction: 'ascending'\n          });\n\n          return;\n        }\n\n        _this.setState({\n          leaderboardData: leaderboardData.reverse(),\n          direction: direction === 'ascending' ? 'descending' : 'ascending'\n        });\n      };\n    });\n\n    _this.state = {\n      login: false,\n      loading: true,\n      accountType: null,\n      column: null,\n      direction: null,\n      leaderboardData: []\n    };\n    return _this;\n  }\n\n  _createClass(LeaderboardPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var login, profileAddress, profile, accountType, ethWallet, accountPointMapping, i, points;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(typeof web3 === 'undefined')) {\n                  _context.next = 3;\n                  break;\n                }\n\n                this.setState({\n                  loading: false\n                });\n                return _context.abrupt(\"return\");\n\n              case 3:\n                login = false;\n\n                if (!this.props.isLogin) {\n                  _context.next = 34;\n                  break;\n                }\n\n                login = true; // Get Account Type\n\n                _context.next = 8;\n                return factory.methods.getProfile(this.props.account).call();\n\n              case 8:\n                profileAddress = _context.sent;\n                profile = Profile(profileAddress);\n                _context.next = 12;\n                return profile.methods.getAccountType().call();\n\n              case 12:\n                accountType = _context.sent;\n                accountType == 0 ? accountType = \"Admin\" : accountType = \"User\"; // Retireve an array of addresses of ethWallets registered\n\n                _context.next = 16;\n                return factory.methods.getEthWallets().call();\n\n              case 16:\n                ethWallet = _context.sent;\n                accountPointMapping = [];\n                i = 0;\n\n              case 19:\n                if (!(i < ethWallet.length)) {\n                  _context.next = 31;\n                  break;\n                }\n\n                _context.next = 22;\n                return factory.methods.getProfile(ethWallet[i]).call();\n\n              case 22:\n                profileAddress = _context.sent;\n                profile = Profile(profileAddress);\n                _context.next = 26;\n                return profile.methods.getPoints().call();\n\n              case 26:\n                points = _context.sent;\n                accountPointMapping.push({\n                  account: ethWallet[i],\n                  points: _parseInt(points)\n                });\n\n              case 28:\n                i++;\n                _context.next = 19;\n                break;\n\n              case 31:\n                // Set the states required for the Leaderboard and ensure it is descending by default\n                this.setState({\n                  leaderboardData: _.sortBy(accountPointMapping, ['points']).reverse()\n                });\n                this.setState({\n                  login: login\n                });\n                this.setState({\n                  accountType: accountType\n                });\n\n              case 34:\n                this.setState({\n                  loading: false\n                });\n\n              case 35:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() // Function to handle the sorting of leaderboard\n\n  }, {\n    key: \"renderLeaderBoard\",\n    value: function renderLeaderBoard() {\n      var _this$state2 = this.state,\n          column = _this$state2.column,\n          data = _this$state2.data,\n          direction = _this$state2.direction;\n      return React.createElement(Container, null, React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"center\"\n      }, React.createElement(Icon, {\n        name: \"chess king\"\n      }), \"Leaderboard\"), React.createElement(Table, {\n        basic: \"very\",\n        celled: true,\n        sortable: true\n      }, React.createElement(Table.Header, null, React.createElement(Table.Row, null, React.createElement(Table.HeaderCell, {\n        textAlign: \"center\"\n      }, \"Account\"), React.createElement(Table.HeaderCell, {\n        textAlign: \"center\",\n        sorted: column === 'points' ? direction : null,\n        onClick: this.handleSort('points')\n      }, \"Point(s)\"))), React.createElement(Table.Body, null, this.renderUserList())));\n    }\n  }, {\n    key: \"renderUserList\",\n    value: function renderUserList() {\n      return this.state.leaderboardData.map(function (item, index) {\n        return React.createElement(Table.Row, null, React.createElement(Table.Cell, {\n          textAlign: \"center\"\n        }, item.account), React.createElement(Table.Cell, {\n          textAlign: \"center\"\n        }, item.points));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.login) {\n        return React.createElement(Layout, {\n          accountType: this.state.accountType,\n          page: 'About'\n        }, React.createElement(Container, null, React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(Segment, {\n          raised: true,\n          textAlign: \"left\"\n        }, React.createElement(Header, {\n          as: \"h2\",\n          textAlign: \"center\"\n        }, \"Current Leaderboard Standings\")), this.renderLeaderBoard(), React.createElement(Divider, null), React.createElement(\"p\", {\n          style: {\n            fontSize: '16px'\n          }\n        }, \"Points can be earned through the following ways:\"), React.createElement(\"p\", {\n          style: {\n            fontSize: '16px'\n          }\n        }, React.createElement(\"b\", null, \"When you ask a question:\"), \" 5 Points\"), React.createElement(\"p\", {\n          style: {\n            fontSize: '16px'\n          }\n        }, React.createElement(\"b\", null, \"When you are rewarded for your answer:\"), \" 4 Points\"), React.createElement(\"p\", {\n          style: {\n            fontSize: '16px'\n          }\n        }, React.createElement(\"b\", null, \"When you submit an answer:\"), \" 2 Points\"), React.createElement(\"p\", {\n          style: {\n            fontSize: '16px'\n          }\n        }, React.createElement(\"b\", null, \"When the answer you approved gets awarded:\"), \" 2 Points\"), React.createElement(\"p\", {\n          style: {\n            fontSize: '16px'\n          }\n        }, React.createElement(\"b\", null, \"When you approve an answer:\"), \" 1 Point\")));\n      } else {\n        return React.createElement(Layout, {\n          accountType: this.state.accountType\n        }, React.createElement(AccountIssueModal, {\n          loading: this.state.loading,\n          login: this.state.login\n        }));\n      }\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(props) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", {\n                  isLogin: cookies(props).login || '',\n                  account: cookies(props).wallet || ''\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return LeaderboardPage;\n}(Component);\n\nexport default LeaderboardPage;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion_1.0\\pages\\leaderboard.js"],"names":["React","Component","AccountIssueModal","_","Segment","Container","Divider","Header","Modal","Button","Loader","Icon","Table","Layout","web3","factory","Profile","cookies","LeaderboardPage","props","clickedColumn","state","column","leaderboardData","direction","setState","sortBy","reverse","login","loading","accountType","isLogin","methods","getProfile","account","call","profileAddress","profile","getAccountType","getEthWallets","ethWallet","accountPointMapping","i","length","getPoints","points","push","data","handleSort","renderUserList","map","item","index","renderLeaderBoard","fontSize","wallet"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AccountIssueModal from '../components/AccountIssueModal';\r\nimport _ from 'lodash';\r\nimport { Segment, Container, Divider, Header, Modal,\r\n  Button, Loader, Icon, Table } from 'semantic-ui-react';\r\nimport Layout from '../components/Layout';\r\nimport web3 from '../ethereum/web3';\r\nimport factory from '../ethereum/factory';\r\nimport Profile from '../ethereum/profile';\r\nimport cookies from 'next-cookies';\r\n\r\nclass LeaderboardPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n      loading: true,\r\n      accountType: null,\r\n      column: null,\r\n      direction: null,\r\n      leaderboardData: []\r\n    };\r\n  }\r\n\r\n  static async getInitialProps(props) {\r\n    return { isLogin: cookies(props).login || '' , account: cookies(props).wallet || '' };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (typeof web3 === 'undefined') {\r\n      this.setState({ loading: false })\r\n      return\r\n    }\r\n    let login = false;\r\n    if (this.props.isLogin) {\r\n      login = true;\r\n      // Get Account Type\r\n      let profileAddress = await factory.methods.getProfile(this.props.account).call();\r\n      let profile = Profile(profileAddress);\r\n      let accountType = await profile.methods.getAccountType().call();\r\n      accountType == 0 ? accountType = \"Admin\" : accountType = \"User\"\r\n\r\n      // Retireve an array of addresses of ethWallets registered\r\n      let ethWallet = await factory.methods.getEthWallets().call();\r\n      let accountPointMapping = [];\r\n\r\n      for (let i=0; i<ethWallet.length; i++) {\r\n        profileAddress = await factory.methods.getProfile(ethWallet[i]).call();\r\n        profile = Profile(profileAddress);\r\n        let points = await profile.methods.getPoints().call();\r\n        accountPointMapping.push({\r\n          account: ethWallet[i],\r\n          points: parseInt(points)\r\n        });\r\n      }\r\n      // Set the states required for the Leaderboard and ensure it is descending by default\r\n      this.setState( { leaderboardData: _.sortBy(accountPointMapping, ['points']).reverse() });\r\n      this.setState( { login: login });\r\n      this.setState( { accountType: accountType });\r\n    }\r\n    this.setState( { loading: false });\r\n  }\r\n\r\n  // Function to handle the sorting of leaderboard\r\n  handleSort = (clickedColumn) => () => {\r\n    const { column, leaderboardData, direction } = this.state\r\n    if (column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        leaderboardData: _.sortBy(leaderboardData, [clickedColumn]),\r\n        direction: 'ascending',\r\n      })\r\n      return\r\n    }\r\n    this.setState({\r\n      leaderboardData: leaderboardData.reverse(),\r\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\r\n    })\r\n  }\r\n\r\n  renderLeaderBoard() {\r\n    const { column, data, direction } = this.state\r\n    return (\r\n      <Container>\r\n        <Header as='h3' textAlign=\"center\">\r\n          <Icon name=\"chess king\"/>Leaderboard\r\n        </Header>\r\n        <Table basic='very' celled sortable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell textAlign='center'>Account</Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                textAlign='center'\r\n                sorted={column === 'points' ? direction : null}\r\n                onClick={this.handleSort('points')}>\r\n              Point(s)\r\n              </Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {this.renderUserList()}\r\n          </Table.Body>\r\n        </Table>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  renderUserList() {\r\n    return this.state.leaderboardData.map((item, index) => {\r\n      return (\r\n        <Table.Row>\r\n          <Table.Cell textAlign='center'>\r\n            {item.account}\r\n          </Table.Cell>\r\n          <Table.Cell textAlign='center'>\r\n            {item.points}\r\n          </Table.Cell>\r\n        </Table.Row>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.login) {\r\n      return (\r\n        <Layout accountType={this.state.accountType} page={'About'}>\r\n          <Container>\r\n            <Divider hidden/>\r\n            <Segment raised textAlign='left'>\r\n              <Header as='h2' textAlign='center'>\r\n                Current Leaderboard Standings\r\n              </Header>\r\n            </Segment>\r\n            {this.renderLeaderBoard()}\r\n              <Divider />\r\n            <p style={{fontSize:'16px'}}>\r\n              Points can be earned through the following ways:\r\n            </p>\r\n            <p style={{fontSize:'16px'}}><b>When you ask a question:</b> 5 Points</p>\r\n            <p style={{fontSize:'16px'}}><b>When you are rewarded for your answer:</b> 4 Points</p>\r\n            <p style={{fontSize:'16px'}}><b>When you submit an answer:</b> 2 Points</p>\r\n            <p style={{fontSize:'16px'}}><b>When the answer you approved gets awarded:</b> 2 Points</p>\r\n            <p style={{fontSize:'16px'}}><b>When you approve an answer:</b> 1 Point</p>\r\n          </Container>\r\n        </Layout>\r\n      )\r\n    } else {\r\n      return (\r\n        <Layout accountType={this.state.accountType}>\r\n          <AccountIssueModal loading={this.state.loading} login={this.state.login} />\r\n        </Layout>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default LeaderboardPage;\r\n"]},"metadata":{},"sourceType":"module"}