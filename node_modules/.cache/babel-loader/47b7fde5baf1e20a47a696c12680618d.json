{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport web3 from '../ethereum/web3';\nimport Layout from '../components/Layout';\nimport factory from '../ethereum/factory';\nimport Profile from '../ethereum/profile';\nimport { Button, Card, Icon, Image } from \"semantic-ui-react\";\n\nvar userProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(userProfile, _Component);\n\n  function userProfile() {\n    _classCallCheck(this, userProfile);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(userProfile).apply(this, arguments));\n  }\n\n  _createClass(userProfile, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(React.Fragment, null, React.createElement(Card, {\n        color: \"red\",\n        centered: true\n      }, React.createElement(Card.Content, null, React.createElement(Card.Header, null, \"Account:\", React.createElement(\"div\", {\n        style: {\n          color: \"red\",\n          fontSize: \"small\",\n          wordWrap: \"break-word\"\n        }\n      }, this.props.account)), React.createElement(Card.Meta, null, \"User\"), React.createElement(Card.Description, null, React.createElement(\"b\", null, \"Token Available:\"), \" \", this.props.token)))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var accounts, account, profileAddress, profile, token;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context.sent;\n                account = accounts[1];\n                profileAddress = undefined;\n                _context.prev = 5;\n                _context.next = 8;\n                return factory.methods.getProfile(account).call();\n\n              case 8:\n                profileAddress = _context.sent;\n                console.log(profileAddress);\n                _context.next = 14;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](5);\n\n              case 14:\n                profile = Profile(profileAddress);\n                _context.next = 17;\n                return profile.methods.getToken().call();\n\n              case 17:\n                token = _context.sent;\n                return _context.abrupt(\"return\", {\n                  account: account,\n                  token: token\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 12]]);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return userProfile;\n}(Component);\n\nexport default userProfile;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\userProfile.js"],"names":["React","Component","web3","Layout","factory","Profile","Button","Card","Icon","Image","userProfile","color","fontSize","wordWrap","props","account","token","eth","getAccounts","accounts","profileAddress","undefined","methods","getProfile","call","console","log","profile","getToken"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,KAA5B,QAAwC,mBAAxC;;IAEMC,W;;;;;;;;;;;;;6BAiBK;AACP,aACE,oBAAC,MAAD,QACI,oBAAC,KAAD,CAAO,QAAP,QACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAG,KAAd;AAAoB,QAAA,QAAQ;AAA5B,SAEE,oBAAC,IAAD,CAAM,OAAN,QACE,oBAAC,IAAD,CAAM,MAAN,oBAEE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,KAAR;AAAeC,UAAAA,QAAQ,EAAE,OAAzB;AAAkCC,UAAAA,QAAQ,EAAE;AAA5C;AAAZ,SAAyE,KAAKC,KAAL,CAAWC,OAApF,CAFF,CADF,EAME,oBAAC,IAAD,CAAM,IAAN,eANF,EAUE,oBAAC,IAAD,CAAM,WAAN,QACE,kDADF,OAC2B,KAAKD,KAAL,CAAWE,KADtC,CAVF,CAFF,CADJ,CADJ,CADF;AAuBD;;;;;;;;;;;;;uBAtC0Bd,IAAI,CAACe,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACAJ,gBAAAA,O,GAAUI,QAAQ,CAAC,CAAD,C;AACpBC,gBAAAA,c,GAAiBC,S;;;uBAEIjB,OAAO,CAACkB,OAAR,CAAgBC,UAAhB,CAA2BR,OAA3B,EAAoCS,IAApC,E;;;AAAvBJ,gBAAAA,c;AACAK,gBAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;;;;;;;;;AAIIO,gBAAAA,O,GAAUtB,OAAO,CAACe,cAAD,C;;uBACHO,OAAO,CAACL,OAAR,CAAgBM,QAAhB,GAA2BJ,IAA3B,E;;;AAAdR,gBAAAA,K;iDACC;AAAED,kBAAAA,OAAO,EAAPA,OAAF;AAAWC,kBAAAA,KAAK,EAALA;AAAX,iB;;;;;;;;;;;;;;;;;;;EAdaf,S;;AA4C1B,eAAeS,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport web3 from '../ethereum/web3'\r\nimport Layout from '../components/Layout';\r\nimport factory from '../ethereum/factory';\r\nimport Profile from '../ethereum/profile';\r\nimport {Button, Card, Icon, Image} from \"semantic-ui-react\";\r\n\r\nclass userProfile extends Component {\r\n\r\n  static async getInitialProps () {\r\n      const accounts = await web3.eth.getAccounts();\r\n      const account = accounts[1];\r\n      let profileAddress = undefined;\r\n      try {\r\n        profileAddress = await factory.methods.getProfile(account).call();\r\n        console.log(profileAddress)\r\n      } catch (err) {\r\n        //console.log(err)\r\n      }\r\n      const profile = Profile(profileAddress);\r\n      const token = await profile.methods.getToken().call();\r\n      return { account, token };\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Layout>\r\n          <React.Fragment>\r\n              <Card color = \"red\" centered>\r\n\r\n                <Card.Content>\r\n                  <Card.Header>\r\n                    Account:\r\n                    <div style={{color: \"red\", fontSize: \"small\", wordWrap: \"break-word\" }}>{this.props.account}</div>\r\n                  </Card.Header>\r\n\r\n                  <Card.Meta>\r\n                    User\r\n                  </Card.Meta>\r\n\r\n                  <Card.Description>\r\n                    <b>Token Available:</b> {this.props.token}\r\n                  </Card.Description>\r\n                </Card.Content>\r\n              </Card>\r\n          </React.Fragment>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default userProfile\r\n"]},"metadata":{},"sourceType":"module"}