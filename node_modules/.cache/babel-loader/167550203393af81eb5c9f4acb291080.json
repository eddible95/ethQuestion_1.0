{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport { Container, Segment, Header, Divider, Button, Icon, TextArea, Modal, Loader, Message, Form } from \"semantic-ui-react\";\nimport web3 from '../ethereum/web3';\nimport feedback from '../ethereum/feedback';\nimport { Router } from '../routes';\n\nvar FeedbackPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FeedbackPage, _Component);\n\n  function FeedbackPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FeedbackPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FeedbackPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      like: \"\",\n      usefulness: \"\",\n      easy: \"\",\n      comments: \"\",\n      loading: false,\n      errorMessage: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLike\", function () {\n      _this.setState({\n        like: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDislike\", function () {\n      _this.setState({\n        like: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUseful\", function () {\n      _this.setState({\n        usefulness: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNotUseful\", function () {\n      _this.setState({\n        usefulness: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEasy\", function () {\n      _this.setState({\n        easy: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNotEasy\", function () {\n      _this.setState({\n        easy: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              }); // Ensures all fields are filled\n\n\n              if (!(_this.checkFieldEmpty(_this.state.like) && _this.checkFieldEmpty(_this.state.usefulness) && _this.checkFieldEmpty(_this.state.easy))) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return web3.eth.getAccounts();\n\n            case 5:\n              accounts = _context.sent;\n              _context.next = 8;\n              return feedback.methods.updateFeedback(_this.state.like, _this.state.usefulness, _this.state.easy, _this.state.comments).send({\n                from: accounts[0]\n              });\n\n            case 8:\n              Router.pushRoute('/home'); // Automatic redirect the user.\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n            case 14:\n              _this.setState({\n                loading: false\n              });\n\n              _context.next = 19;\n              break;\n\n            case 17:\n              _this.setState({\n                errorMessage: \"Required Field(s) Empty\"\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 11]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(FeedbackPage, [{\n    key: \"checkFieldEmpty\",\n    value: function checkFieldEmpty(field) {\n      return field === \"\" ? false : true;\n    } // Submit the question to be stored on the Ethereum Blockchain\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Layout, null, React.createElement(Container, {\n        style: {\n          height: \"100vh\"\n        }\n      }, React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(Segment, {\n        raised: true,\n        textAlign: \"left\"\n      }, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, \"Collection of Feedback For System\")), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"left\"\n      }, \"Do you like the system?\"), React.createElement(\"p\", null, \"Selected Value: \", React.createElement(\"b\", null, this.state.like.toString())), React.createElement(Button, {\n        icon: true,\n        labelPosition: \"left\",\n        color: \"green\",\n        compact: true,\n        onClick: this.onLike\n      }, React.createElement(Icon, {\n        name: \"thumbs up outline\"\n      }), \"Yes\"), React.createElement(Button, {\n        icon: true,\n        labelPosition: \"left\",\n        color: \"red\",\n        compact: true,\n        onClick: this.onDislike\n      }, React.createElement(Icon, {\n        name: \"thumbs down outline\"\n      }), \"No\"), React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"left\"\n      }, \"Do you find the system useful?\"), React.createElement(\"p\", null, \"Selected Value: \", React.createElement(\"b\", null, this.state.usefulness.toString())), React.createElement(Button, {\n        icon: true,\n        labelPosition: \"left\",\n        color: \"green\",\n        compact: true,\n        onClick: this.onUseful\n      }, React.createElement(Icon, {\n        name: \"thumbs up outline\"\n      }), \"Yes\"), React.createElement(Button, {\n        icon: true,\n        labelPosition: \"left\",\n        color: \"red\",\n        compact: true,\n        onClick: this.onNotUseful\n      }, React.createElement(Icon, {\n        name: \"thumbs down outline\"\n      }), \"No\"), React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"left\"\n      }, \"Do you find the system easy to use?\"), React.createElement(\"p\", null, \"Selected Value: \", React.createElement(\"b\", null, this.state.easy.toString())), React.createElement(Button, {\n        icon: true,\n        labelPosition: \"left\",\n        color: \"green\",\n        compact: true,\n        onClick: this.onEasy\n      }, React.createElement(Icon, {\n        name: \"thumbs up outline\"\n      }), \"Yes\"), React.createElement(Button, {\n        icon: true,\n        labelPosition: \"left\",\n        color: \"red\",\n        compact: true,\n        onClick: this.onNotEasy\n      }, React.createElement(Icon, {\n        name: \"thumbs down outline\"\n      }), \"No\"), React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"left\"\n      }, \"Any suggestions for improvments or other comments?\"), React.createElement(Form, {\n        error: !!this.state.errorMessage,\n        style: {\n          marginTop: '10px'\n        }\n      }, React.createElement(Form.Field, null, React.createElement(TextArea, {\n        placeholder: \"Tell us more\",\n        style: {\n          width: \"100%\",\n          height: \"20%\"\n        },\n        value: this.state.comments,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            comments: event.target.value\n          });\n        }\n      })), React.createElement(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      })), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(Modal, {\n        open: this.state.loading,\n        trigger: React.createElement(Button, {\n          primary: true,\n          onClick: this.onSubmit\n        }, \"Submit Feedback\"),\n        basic: true,\n        size: \"small\"\n      }, React.createElement(Header, {\n        content: \"Submitting Feedback\"\n      }), React.createElement(Modal.Content, null, React.createElement(\"p\", null, \"Please Confirm the MetaMask Transaction Request to submit your Feedback to the Block-Chain Network. Upon successful submission, you will be redirected to the Home Page. This process might take awhile.\"), React.createElement(Loader, {\n        active: true,\n        inline: \"centered\"\n      }, \"Loading\")))));\n    }\n  }]);\n\n  return FeedbackPage;\n}(Component);\n\nexport default FeedbackPage;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\feedback.js"],"names":["React","Component","Layout","Container","Segment","Header","Divider","Button","Icon","TextArea","Modal","Loader","Message","Form","web3","feedback","Router","FeedbackPage","like","usefulness","easy","comments","loading","errorMessage","setState","checkFieldEmpty","state","eth","getAccounts","accounts","methods","updateFeedback","send","from","pushRoute","message","field","height","toString","onLike","onDislike","onUseful","onNotUseful","onEasy","onNotEasy","marginTop","width","event","target","value","onSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { Container, Segment, Header, Divider,\r\n   Button, Icon, TextArea, Modal, Loader, Message, Form } from \"semantic-ui-react\";\r\nimport web3 from '../ethereum/web3';\r\nimport feedback from '../ethereum/feedback';\r\nimport {Router} from '../routes';\r\n\r\nclass FeedbackPage extends Component {\r\n\r\n  state = {\r\n    like: \"\",\r\n    usefulness: \"\",\r\n    easy: \"\",\r\n    comments:\"\",\r\n    loading: false,\r\n    errorMessage: \"\"\r\n  }\r\n\r\n  onLike = () => {\r\n    this.setState({ like: true});\r\n  }\r\n\r\n  onDislike = () => {\r\n    this.setState({ like: false});\r\n  }\r\n\r\n  onUseful = () => {\r\n    this.setState({ usefulness: true});\r\n  }\r\n\r\n  onNotUseful = () => {\r\n    this.setState({ usefulness: false});\r\n  }\r\n\r\n  onEasy = () => {\r\n    this.setState({ easy: true});\r\n  }\r\n\r\n  onNotEasy = () => {\r\n    this.setState({ easy: false});\r\n  }\r\n\r\n  checkFieldEmpty(field){\r\n    return field === \"\" ? false : true;\r\n  }\r\n\r\n  // Submit the question to be stored on the Ethereum Blockchain\r\n  onSubmit = async () => {\r\n      this.setState({ loading: true, errorMessage: '' });\r\n      // Ensures all fields are filled\r\n      if (this.checkFieldEmpty(this.state.like) && this.checkFieldEmpty(this.state.usefulness) && this.checkFieldEmpty(this.state.easy)){\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            // Create a new post\r\n            await feedback.methods\r\n            .updateFeedback(this.state.like, this.state.usefulness, this.state.easy, this.state.comments)\r\n            .send({\r\n                from: accounts[0]\r\n            });\r\n            Router.pushRoute('/home'); // Automatic redirect the user.\r\n        } catch (err) {\r\n            this.setState({ errorMessage: err.message });\r\n        }\r\n        this.setState({ loading: false });\r\n      } else {\r\n        this.setState({ errorMessage: \"Required Field(s) Empty\" });\r\n        this.setState({ loading: false });\r\n      }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <Layout>\r\n        <Container style={{height:\"100vh\"}}>\r\n          <Divider hidden/>\r\n          <Segment raised textAlign='left'>\r\n            <Header as='h2' textAlign='center'>\r\n              Collection of Feedback For System\r\n            </Header>\r\n          </Segment>\r\n          <Divider hidden/>\r\n          <Header as='h3' textAlign='left'>\r\n            Do you like the system?\r\n          </Header>\r\n          <p>Selected Value: <b>{this.state.like.toString()}</b>\r\n          </p>\r\n          <Button icon labelPosition='left' color=\"green\" compact={true} onClick={this.onLike}>\r\n            <Icon name='thumbs up outline' />\r\n            Yes\r\n          </Button>\r\n          <Button icon labelPosition='left' color=\"red\" compact={true} onClick={this.onDislike}>\r\n            <Icon name='thumbs down outline' />\r\n            No\r\n          </Button>\r\n          <Header as='h3' textAlign='left'>\r\n            Do you find the system useful?\r\n          </Header>\r\n          <p>\r\n          Selected Value: <b>{this.state.usefulness.toString()}</b>\r\n          </p>\r\n          <Button icon labelPosition='left' color=\"green\" compact={true} onClick={this.onUseful}>\r\n            <Icon name='thumbs up outline' />\r\n            Yes\r\n          </Button>\r\n          <Button icon labelPosition='left' color=\"red\" compact={true} onClick={this.onNotUseful}>\r\n            <Icon name='thumbs down outline' />\r\n            No\r\n          </Button>\r\n          <Header as='h3' textAlign='left'>\r\n            Do you find the system easy to use?\r\n          </Header>\r\n          <p>\r\n          Selected Value: <b>{this.state.easy.toString()}</b>\r\n          </p>\r\n          <Button icon labelPosition='left' color=\"green\" compact={true} onClick={this.onEasy}>\r\n            <Icon name='thumbs up outline' />\r\n            Yes\r\n          </Button>\r\n          <Button icon labelPosition='left' color=\"red\" compact={true} onClick={this.onNotEasy}>\r\n            <Icon name='thumbs down outline' />\r\n            No\r\n          </Button>\r\n          <Header as='h3' textAlign='left'>\r\n            Any suggestions for improvments or other comments?\r\n          </Header>\r\n          <Form error={!!this.state.errorMessage} style={{ marginTop: '10px' }}>\r\n            <Form.Field>\r\n              <TextArea placeholder='Tell us more' style={{width:\"100%\", height:\"20%\"}}\r\n                value={this.state.comments}\r\n                onChange={event => this.setState({ comments: event.target.value })}/>\r\n            </Form.Field>\r\n            <Message error header=\"Oops!\" content={this.state.errorMessage}/>\r\n          </Form>\r\n          <Divider hidden/>\r\n          <Modal open={this.state.loading} trigger={<Button primary onClick={this.onSubmit}>Submit Feedback</Button>} basic size='small'>\r\n            <Header content='Submitting Feedback' />\r\n            <Modal.Content>\r\n              <p>\r\n                Please Confirm the MetaMask Transaction Request to submit your Feedback to the Block-Chain Network.\r\n                Upon successful submission, you will be redirected to the Home Page. This process might take awhile.\r\n              </p>\r\n              <Loader active inline=\"centered\">\r\n                Loading\r\n              </Loader>\r\n            </Modal.Content>\r\n          </Modal>\r\n        </Container>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackPage;\r\n"]},"metadata":{},"sourceType":"module"}