{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport { Container, Segment, Header, Divider, Button, Popup, Icon, Dropdown, Table, Modal, Loader, Message, Transition } from \"semantic-ui-react\";\nimport { Router } from '../routes';\nimport { logging } from './logger';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport Profile from '../ethereum/profile';\nimport Question from '../ethereum/question';\nimport feedback from '../ethereum/feedback';\nimport EthQuestionToken from '../ethereum/token';\nimport credentials from '../ethereum/credentials'; // Ensure jsPDF does not import on Server Side\n\nvar jsPDF = null;\n\nif (typeof window !== \"undefined\") {\n  import(\"jspdf\").then(function (module) {\n    jsPDF = module.default;\n  });\n}\n\nvar AdminPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminPage, _Component);\n\n  function AdminPage(props) {\n    var _this;\n\n    _classCallCheck(this, AdminPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"export\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var lMargin, rMargin, pdfInMM, doc, questionNumber, question, summary, answerList, questionTitle, lines, j, i, answer;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.questionNumber != \"\")) {\n                _context.next = 24;\n                break;\n              }\n\n              // Initialise the PDF document to write\n              lMargin = 15; //left margin in mm\n\n              rMargin = 15; //right margin in mm\n\n              pdfInMM = 210; // width of A4 in mm\n\n              doc = new jsPDF(\"p\", \"mm\", \"a4\"); // Retrieve all the data of selected question\n\n              questionNumber = Number(_this.state.questionNumber) - 1;\n              question = Question(_this.props.deployedQuestions[questionNumber]);\n              _context.next = 9;\n              return question.methods.getSummary().call();\n\n            case 9:\n              summary = _context.sent;\n              _context.next = 12;\n              return question.methods.getAnswerList().call();\n\n            case 12:\n              answerList = _context.sent;\n              questionTitle = \"Question: \" + summary[1]; // Writing to the PDF document\n\n              lines = doc.splitTextToSize(questionTitle, pdfInMM - lMargin - rMargin);\n              doc.text(lMargin, 20, lines);\n              doc.setLineWidth(0.5);\n              doc.line(lMargin, 20 + lines.length + 8, 195, 20 + lines.length + 8); // If images are uploaded\n\n              if (summary[5].length != 0) {\n                summary[6].map(function (imageName, index) {\n                  var link = \"https://ipfs.io/ipfs/\" + summary[5][index];\n                  doc.text(lMargin, 20 + lines.length + 15, \"Link(s) of Image(s) Uploaded For Question:\");\n                  lines = doc.splitTextToSize(link, pdfInMM - lMargin - rMargin);\n                  doc.text(lMargin, 45, lines);\n                });\n                doc.setLineWidth(0.5);\n                doc.line(lMargin, 20 + lines.length + 35, 195, 20 + lines.length + 35);\n                doc.text(lMargin, 20 + lines.length + 45, \"Answers:\");\n              } else {\n                doc.text(lMargin, 20 + lines.length + 15, \"Answers:\");\n              }\n\n              j = 75;\n\n              for (i = 0; i < answerList.length; i++) {\n                answer = \"(\" + (i + 1) + \") \" + answerList[i][0];\n                lines = doc.splitTextToSize(answer, pdfInMM - lMargin - rMargin); // Creates a new page for every 10 answers\n\n                if (i % 10 == 0 && i != 0) {\n                  doc.addPage();\n                  j = 30;\n                }\n\n                doc.text(lMargin, j, lines);\n                j = j + 10;\n              }\n\n              doc.save(\"Answer.pdf\");\n              _context.next = 25;\n              break;\n\n            case 24:\n              console.log(\"Please select a question\");\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"exportFeedback\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var comments, lMargin, rMargin, pdfInMM, doc, j, i, comment, lines;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return feedback.methods.getComments().call();\n\n            case 2:\n              comments = _context2.sent;\n              // Initialise the PDF document to write\n              lMargin = 15; //left margin in mm\n\n              rMargin = 15; //right margin in mm\n\n              pdfInMM = 210; // width of A4 in mm\n\n              doc = new jsPDF(\"p\", \"mm\", \"a4\"); // Writing to the PDF document\n\n              j = 20;\n\n              for (i = 0; i < comments.length; i++) {\n                comment = \"(\" + (i + 1) + \") \" + comments[i];\n                lines = doc.splitTextToSize(comment, pdfInMM - lMargin - rMargin);\n\n                if (i % 10 == 0 && i != 0) {\n                  doc.addPage();\n                  j = 20;\n                }\n\n                doc.text(lMargin, j, lines);\n                j = j + 10;\n              }\n\n              doc.save(\"Comments.pdf\");\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"getUserTableData\", function () {\n      return _this.props.ethWalletEmailAddressBinding.map(function (item, index) {\n        return React.createElement(Table.Row, {\n          key: index\n        }, React.createElement(Table.Cell, null, item.ethWallet), React.createElement(Table.Cell, null, item.emailAddress), React.createElement(Table.Cell, null, item.status ? \"Blacklisted\" : \"Active\"), React.createElement(Table.Cell, null, item.status ? React.createElement(Button, {\n          onClick: function onClick() {\n            return _this.unblacklist(item.emailAddress);\n          },\n          color: \"green\",\n          size: \"mini\",\n          icon: true\n        }, React.createElement(Icon, {\n          name: \"undo\"\n        })) : React.createElement(Button, {\n          onClick: function onClick() {\n            return _this.blacklist(item.emailAddress);\n          },\n          color: \"red\",\n          size: \"mini\",\n          icon: true\n        }, React.createElement(Icon, {\n          name: \"delete\"\n        }))), React.createElement(Table.Cell, null, React.createElement(Button, {\n          onClick: function onClick() {\n            return _this.dispense(item.ethWallet);\n          },\n          color: \"green\",\n          size: \"mini\",\n          icon: true\n        }, React.createElement(Icon, {\n          name: \"ethereum\"\n        }))));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"blacklist\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(emailAddress) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context3.prev = 1;\n                _context3.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context3.sent;\n                _context3.next = 7;\n                return credentials.methods.blacklistEmail(emailAddress).send({\n                  from: accounts[0]\n                });\n\n              case 7:\n                Router.pushRoute('/admin'); // Automatic redirect the user.\n\n                _context3.next = 14;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](1);\n\n                _this.setState({\n                  errorMessage: _context3.t0.message\n                });\n\n                _this.setState({\n                  error: true\n                });\n\n              case 14:\n                _this.setState({\n                  loading: false\n                });\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"unblacklist\",\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(emailAddress) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context4.prev = 1;\n                _context4.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context4.sent;\n                _context4.next = 7;\n                return credentials.methods.unBlacklistEmail(emailAddress).send({\n                  from: accounts[0]\n                });\n\n              case 7:\n                _context4.next = 13;\n                break;\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4[\"catch\"](1);\n\n                _this.setState({\n                  errorMessage: _context4.t0.message\n                });\n\n                _this.setState({\n                  error: true\n                });\n\n              case 13:\n                _this.setState({\n                  loading: false\n                });\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 9]]);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"dispense\",\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(ethWallet) {\n        var accounts, profileAddress, profile, logTransaction;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context5.prev = 1;\n                _context5.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context5.sent;\n                _context5.next = 7;\n                return EthQuestionToken.methods.transfer(ethWallet, 10e4).send({\n                  from: accounts[0]\n                });\n\n              case 7:\n                _context5.next = 9;\n                return EthQuestionToken.events.Transfer(console.log(\"This happened\"));\n\n              case 9:\n                _context5.next = 11;\n                return factory.methods.getProfile(ethWallet).call();\n\n              case 11:\n                profileAddress = _context5.sent;\n                profile = Profile(profileAddress);\n                logTransaction = logging(\"Awarded 10 EQT(s) for first time user\");\n                _context5.next = 16;\n                return profile.methods.logTransaction(logTransaction).send({\n                  from: accounts[0]\n                });\n\n              case 16:\n                _context5.next = 22;\n                break;\n\n              case 18:\n                _context5.prev = 18;\n                _context5.t0 = _context5[\"catch\"](1);\n\n                _this.setState({\n                  errorMessage: _context5.t0.message\n                });\n\n                _this.setState({\n                  error: true\n                });\n\n              case 22:\n                _this.setState({\n                  loading: false\n                });\n\n              case 23:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 18]]);\n      }));\n\n      return function (_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"getQuestionTableData\", function () {\n      return _this.props.questionAddressTitleBinding.map(function (item, index) {\n        return React.createElement(Table.Row, {\n          key: index\n        }, React.createElement(Table.Cell, null, item.questionAddress), React.createElement(Table.Cell, null, item.title), React.createElement(Table.Cell, null, item.flagged ? \"Flagged\" : \"Active\"), React.createElement(Table.Cell, null, item.flagged ? React.createElement(Button, {\n          onClick: function onClick() {\n            return _this.undoDeleteQuestion(item.questionAddress);\n          },\n          color: \"green\",\n          size: \"mini\",\n          icon: true\n        }, React.createElement(Icon, {\n          name: \"undo\"\n        })) : React.createElement(Button, {\n          onClick: function onClick() {\n            return _this.deleteQuestion(item.questionAddress);\n          },\n          color: \"red\",\n          size: \"mini\",\n          icon: true\n        }, React.createElement(Icon, {\n          name: \"delete\"\n        }))));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteQuestion\",\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(questionAddress, title) {\n        var accounts, logTransaction;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context6.prev = 1;\n                _context6.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context6.sent;\n                logTransaction = logging(\"Deleted Question Titled: \" + title);\n                _context6.next = 8;\n                return factory.methods.deleteQuestion(questionAddress, logTransaction).send({\n                  from: accounts[0]\n                });\n\n              case 8:\n                Router.pushRoute('/admin'); // Automatic redirect the user.\n\n                _context6.next = 15;\n                break;\n\n              case 11:\n                _context6.prev = 11;\n                _context6.t0 = _context6[\"catch\"](1);\n\n                _this.setState({\n                  errorMessage: _context6.t0.message\n                });\n\n                _this.setState({\n                  error: true\n                });\n\n              case 15:\n                _this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[1, 11]]);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"undoDeleteQuestion\",\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(questionAddress, title) {\n        var accounts, logTransaction;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context7.prev = 1;\n                _context7.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context7.sent;\n                logTransaction = logging(\"Undo Deletion Of Question Titled: \" + title);\n                _context7.next = 8;\n                return factory.methods.undoDeleteQuestion(questionAddress, logTransaction).send({\n                  from: accounts[0]\n                });\n\n              case 8:\n                Router.pushRoute('/admin'); // Automatic redirect the user.\n\n                _context7.next = 15;\n                break;\n\n              case 11:\n                _context7.prev = 11;\n                _context7.t0 = _context7[\"catch\"](1);\n\n                _this.setState({\n                  errorMessage: _context7.t0.message\n                });\n\n                _this.setState({\n                  error: true\n                });\n\n              case 15:\n                _this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[1, 11]]);\n      }));\n\n      return function (_x6, _x7) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleUserTableVisibility\", function () {\n      return _this.setState(function (prevState) {\n        return {\n          userVisible: !prevState.userVisible\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleQuestionTableVisibility\", function () {\n      return _this.setState(function (prevState) {\n        return {\n          questionVisible: !prevState.questionVisible\n        };\n      });\n    });\n\n    _this.state = {\n      account: null,\n      error: false,\n      loading: false,\n      loadingResource: true,\n      errorMessage: '',\n      accountType: null,\n      userVisible: false,\n      questionOptions: [],\n      questionNumber: null,\n      questionVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(AdminPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8() {\n        var accounts, login, profileAddress, profile, accountType, questionOptions, i, question, summary;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context8.sent;\n                login = false;\n                _context8.next = 6;\n                return credentials.methods.getBinding(accounts[0]).call();\n\n              case 6:\n                _context8.t0 = _context8.sent;\n\n                if (!(_context8.t0 === \"\")) {\n                  _context8.next = 10;\n                  break;\n                }\n\n                _context8.next = 34;\n                break;\n\n              case 10:\n                login = true; // Get Account Type\n\n                _context8.next = 13;\n                return factory.methods.getProfile(accounts[0]).call();\n\n              case 13:\n                profileAddress = _context8.sent;\n                profile = Profile(profileAddress);\n                _context8.next = 17;\n                return profile.methods.getAccountType().call();\n\n              case 17:\n                accountType = _context8.sent;\n                accountType == 0 ? accountType = \"Admin\" : accountType = \"User\"; // Get Question Deployed\n\n                questionOptions = [];\n                i = 0;\n\n              case 21:\n                if (!(i < this.props.deployedQuestionsCount)) {\n                  _context8.next = 30;\n                  break;\n                }\n\n                question = Question(this.props.deployedQuestions[i]);\n                _context8.next = 25;\n                return question.methods.getSummary().call();\n\n              case 25:\n                summary = _context8.sent;\n                questionOptions.push({\n                  key: i + 1,\n                  text: summary[0],\n                  value: i + 1\n                });\n\n              case 27:\n                i++;\n                _context8.next = 21;\n                break;\n\n              case 30:\n                this.setState({\n                  questionOptions: questionOptions\n                });\n                this.setState({\n                  account: accounts[0]\n                });\n                this.setState({\n                  login: login\n                });\n                this.setState({\n                  accountType: accountType\n                });\n\n              case 34:\n                this.setState({\n                  loadingResource: false\n                });\n\n              case 35:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.login) {\n        return React.createElement(Layout, {\n          accountType: this.state.accountType\n        }, React.createElement(React.Fragment, null, React.createElement(Container, {\n          style: {\n            height: \"100vh\"\n          }\n        }, React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(Segment, {\n          raised: true,\n          textAlign: \"left\"\n        }, React.createElement(Header, {\n          as: \"h2\",\n          textAlign: \"center\"\n        }, \"Exporting Questions & Answers As PDF\")), React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(\"p\", {\n          style: {\n            fontSize: '16px'\n          }\n        }, \"Select the question to export the question and it's corresponding answers\"), React.createElement(Dropdown, {\n          clearable: true,\n          options: this.state.questionOptions,\n          selection: true,\n          placeholder: \"Select the question to export\",\n          value: this.state.questionNumber,\n          onChange: function onChange(e, _ref8) {\n            var value = _ref8.value;\n            return _this2.setState({\n              questionNumber: value\n            });\n          }\n        }), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"red\",\n          onClick: this.export,\n          style: {\n            left: \"20px\"\n          }\n        }, React.createElement(Icon, {\n          name: \"download\"\n        }), \"Export As PDF\"), React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(Segment, {\n          raised: true,\n          textAlign: \"left\"\n        }, React.createElement(Header, {\n          as: \"h2\",\n          textAlign: \"center\"\n        }, \"Exporting Feedback\")), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"red\",\n          onClick: this.exportFeedback,\n          style: {\n            left: \"20px\"\n          }\n        }, React.createElement(Icon, {\n          name: \"download\"\n        }), \"Export As PDF\"), React.createElement(Segment, {\n          raised: true,\n          textAlign: \"center\"\n        }, React.createElement(\"b\", {\n          style: {\n            fontSize: \"20px\"\n          }\n        }, \"Users Management\"), React.createElement(Popup, {\n          trigger: React.createElement(Button, {\n            icon: this.state.userVisible ? \"minus\" : \"plus\",\n            onClick: this.toggleUserTableVisibility,\n            floated: \"right\",\n            size: \"mini\"\n          }),\n          content: \"Click to expand/close\",\n          inverted: true\n        })), React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(Transition, {\n          visible: this.state.userVisible,\n          animation: \"scale\",\n          duration: 500\n        }, React.createElement(Segment, null, React.createElement(Header, null, \"Registered Users\"), React.createElement(Table, {\n          compact: true,\n          celled: true\n        }, React.createElement(Table.Header, {\n          fullWidth: true\n        }, React.createElement(Table.Row, null, React.createElement(Table.HeaderCell, {\n          width: 2\n        }, \"Ethereum Wallet\"), React.createElement(Table.HeaderCell, {\n          width: 3\n        }, \"Email\"), React.createElement(Table.HeaderCell, {\n          width: 2\n        }, \"Status\"), React.createElement(Table.HeaderCell, {\n          width: 2\n        }, \"Blacklist\"), React.createElement(Table.HeaderCell, {\n          width: 2\n        }, \"Dispense Tokens\"))), React.createElement(Table.Body, null, this.getUserTableData()), React.createElement(Table.Footer, {\n          fullWidth: true\n        }, React.createElement(Table.Row, null, React.createElement(Table.HeaderCell, {\n          colSpan: 5\n        })))))), React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(Segment, {\n          raised: true,\n          textAlign: \"center\"\n        }, React.createElement(\"b\", {\n          style: {\n            fontSize: \"20px\"\n          }\n        }, \"Removing Question\"), React.createElement(Popup, {\n          trigger: React.createElement(Button, {\n            icon: this.state.questionVisible ? \"minus\" : \"plus\",\n            onClick: this.toggleQuestionTableVisibility,\n            floated: \"right\",\n            size: \"mini\"\n          }),\n          content: \"Click to expand/close\",\n          inverted: true\n        })), React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(Transition, {\n          visible: this.state.questionVisible,\n          animation: \"scale\",\n          duration: 500\n        }, React.createElement(Segment, null, React.createElement(Header, null, \"Questions Posted\"), React.createElement(Table, {\n          compact: true,\n          celled: true\n        }, React.createElement(Table.Header, {\n          fullWidth: true\n        }, React.createElement(Table.Row, null, React.createElement(Table.HeaderCell, {\n          width: 2\n        }, \"Question Address\"), React.createElement(Table.HeaderCell, {\n          width: 3\n        }, \"Title\"), React.createElement(Table.HeaderCell, {\n          width: 2\n        }, \"Status\"), React.createElement(Table.HeaderCell, {\n          width: 2\n        }, \"Actions\"))), React.createElement(Table.Body, null, this.getQuestionTableData()), React.createElement(Table.Footer, {\n          fullWidth: true\n        }, React.createElement(Table.Row, null, React.createElement(Table.HeaderCell, {\n          colSpan: 5\n        })))))), React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(Modal, {\n          open: this.state.loading,\n          basic: true,\n          size: \"small\"\n        }, React.createElement(Header, {\n          content: \"Performing Admin Actions\"\n        }), React.createElement(Modal.Content, null, React.createElement(\"p\", null, \"Please Confirm the MetaMask Transaction Request. This process might take awhile.\"), React.createElement(Loader, {\n          active: true,\n          inline: \"centered\"\n        }, \"Loading\"))), React.createElement(Message, {\n          error: true,\n          header: \"Oops!\",\n          content: this.state.errorMessage,\n          hidden: !this.state.error\n        }))));\n      } else {\n        return React.createElement(Layout, {\n          accountType: this.state.accountType\n        }, React.createElement(Container, {\n          style: {\n            width: \"100%\",\n            height: \"100vh\"\n          }\n        }, React.createElement(Modal, {\n          open: this.state.loadingResource,\n          basic: true,\n          size: \"small\"\n        }, React.createElement(Header, {\n          icon: \"ethereum\",\n          content: \"Loading Resources\"\n        }), React.createElement(Modal.Content, null, React.createElement(Loader, {\n          active: true,\n          inline: \"centered\"\n        }, \"Loading Admin Panel\"))), React.createElement(Modal, {\n          open: !this.state.login && !this.state.loadingResource,\n          basic: true,\n          size: \"small\"\n        }, React.createElement(Header, {\n          icon: \"ethereum\",\n          content: \"Not Registered\"\n        }), React.createElement(Modal.Content, null, React.createElement(\"p\", null, \"You are currently not registered to access the platform. Please have your account registered.\")), React.createElement(Modal.Actions, null, React.createElement(Button, {\n          color: \"green\",\n          inverted: true,\n          attached: \"bottom\",\n          onClick: function onClick() {\n            Router.pushRoute('/');\n          }\n        }, \"Register For Account\")))));\n      }\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9() {\n        var deployedQuestions, deployedQuestionsCount, questionAddressTitleBinding, i, question, summary, ethWallets, ethWalletEmailAddressBinding, _i, emailAddress, status;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return factory.methods.getDeployedQuestions().call();\n\n              case 2:\n                deployedQuestions = _context9.sent;\n                deployedQuestionsCount = deployedQuestions.length;\n                questionAddressTitleBinding = [];\n                i = 0;\n\n              case 6:\n                if (!(i < deployedQuestionsCount)) {\n                  _context9.next = 15;\n                  break;\n                }\n\n                question = Question(deployedQuestions[i]);\n                _context9.next = 10;\n                return question.methods.getSummary().call();\n\n              case 10:\n                summary = _context9.sent;\n                questionAddressTitleBinding.push({\n                  questionAddress: deployedQuestions[i],\n                  title: summary[0],\n                  flagged: summary[9]\n                });\n\n              case 12:\n                i++;\n                _context9.next = 6;\n                break;\n\n              case 15:\n                _context9.next = 17;\n                return factory.methods.getEthWallets().call();\n\n              case 17:\n                ethWallets = _context9.sent;\n                ethWalletEmailAddressBinding = [];\n                _i = 0;\n\n              case 20:\n                if (!(_i < ethWallets.length)) {\n                  _context9.next = 31;\n                  break;\n                }\n\n                _context9.next = 23;\n                return credentials.methods.getBinding(ethWallets[_i]).call();\n\n              case 23:\n                emailAddress = _context9.sent;\n                _context9.next = 26;\n                return credentials.methods.emailNotBlackList(emailAddress).call();\n\n              case 26:\n                status = _context9.sent;\n                ethWalletEmailAddressBinding.push({\n                  ethWallet: ethWallets[_i],\n                  emailAddress: emailAddress,\n                  status: status\n                });\n\n              case 28:\n                _i++;\n                _context9.next = 20;\n                break;\n\n              case 31:\n                return _context9.abrupt(\"return\", {\n                  deployedQuestionsCount: deployedQuestionsCount,\n                  deployedQuestions: deployedQuestions,\n                  ethWalletEmailAddressBinding: ethWalletEmailAddressBinding,\n                  questionAddressTitleBinding: questionAddressTitleBinding\n                });\n\n              case 32:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return AdminPage;\n}(Component);\n\nexport default AdminPage;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\admin.js"],"names":["React","Component","Layout","Container","Segment","Header","Divider","Button","Popup","Icon","Dropdown","Table","Modal","Loader","Message","Transition","Router","logging","web3","factory","Profile","Question","feedback","EthQuestionToken","credentials","jsPDF","window","then","module","default","AdminPage","props","state","questionNumber","lMargin","rMargin","pdfInMM","doc","Number","question","deployedQuestions","methods","getSummary","call","summary","getAnswerList","answerList","questionTitle","lines","splitTextToSize","text","setLineWidth","line","length","map","imageName","index","link","j","i","answer","addPage","save","console","log","getComments","comments","comment","ethWalletEmailAddressBinding","item","ethWallet","emailAddress","status","unblacklist","blacklist","dispense","setState","loading","errorMessage","eth","getAccounts","accounts","blacklistEmail","send","from","pushRoute","message","error","unBlacklistEmail","transfer","events","Transfer","getProfile","profileAddress","profile","logTransaction","questionAddressTitleBinding","questionAddress","title","flagged","undoDeleteQuestion","deleteQuestion","prevState","userVisible","questionVisible","account","loadingResource","accountType","questionOptions","login","getBinding","getAccountType","deployedQuestionsCount","push","key","value","height","fontSize","e","export","left","exportFeedback","toggleUserTableVisibility","getUserTableData","toggleQuestionTableVisibility","getQuestionTableData","width","getDeployedQuestions","getEthWallets","ethWallets","emailNotBlackList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { Container, Segment, Header, Divider, Button, Popup,\r\n   Icon, Dropdown, Table, Modal, Loader, Message, Transition } from \"semantic-ui-react\";\r\nimport {Router} from '../routes';\r\nimport { logging } from './logger';\r\nimport web3 from '../ethereum/web3';\r\nimport factory from '../ethereum/factory';\r\nimport Profile from '../ethereum/profile';\r\nimport Question from '../ethereum/question';\r\nimport feedback from '../ethereum/feedback';\r\nimport EthQuestionToken from '../ethereum/token';\r\nimport credentials from '../ethereum/credentials';\r\n\r\n// Ensure jsPDF does not import on Server Side\r\nlet jsPDF = null;\r\nif (typeof window !== \"undefined\") {\r\n  import(\"jspdf\").then(module => {\r\n    jsPDF = module.default;\r\n  });\r\n}\r\n\r\nclass AdminPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: null,\r\n      error: false,\r\n      loading: false,\r\n      loadingResource: true,\r\n      errorMessage: '',\r\n      accountType: null,\r\n      userVisible: false,\r\n      questionOptions: [],\r\n      questionNumber: null,\r\n      questionVisible: false,\r\n    };\r\n  }\r\n\r\n  static async getInitialProps () {\r\n      // Retrieve an array of addresses of questions deployed\r\n      let deployedQuestions = await factory.methods.getDeployedQuestions().call();\r\n      let deployedQuestionsCount = deployedQuestions.length;\r\n      let questionAddressTitleBinding = []\r\n      for(let i=0; i<deployedQuestionsCount; i++) {\r\n        let question = Question(deployedQuestions[i]);\r\n        let summary = await question.methods.getSummary().call();\r\n        questionAddressTitleBinding.push({\r\n          questionAddress: deployedQuestions[i],\r\n          title: summary[0],\r\n          flagged: summary[9]\r\n        })\r\n      }\r\n\r\n      // Retrieve an array of EthWallets and Email Addresses\r\n      let ethWallets = await factory.methods.getEthWallets().call();\r\n      let ethWalletEmailAddressBinding = [];\r\n      for (let i=0; i < ethWallets.length; i++) {\r\n        let emailAddress = await credentials.methods.getBinding(ethWallets[i]).call();\r\n        let status = await credentials.methods.emailNotBlackList(emailAddress).call();\r\n        ethWalletEmailAddressBinding.push({\r\n          ethWallet: ethWallets[i],\r\n          emailAddress: emailAddress,\r\n          status: status\r\n        })\r\n      }\r\n      return { deployedQuestionsCount, deployedQuestions, ethWalletEmailAddressBinding, questionAddressTitleBinding }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // Retrieve the Ethereum Account from MetaMask\r\n    const accounts = await web3.eth.getAccounts();\r\n    let login = false;\r\n    if (await credentials.methods.getBinding(accounts[0]).call() === \"\") {\r\n    } else {\r\n      login = true;\r\n      // Get Account Type\r\n      let profileAddress = await factory.methods.getProfile(accounts[0]).call();\r\n      let profile = Profile(profileAddress);\r\n      let accountType = await profile.methods.getAccountType().call();\r\n      accountType == 0 ? accountType = \"Admin\" : accountType = \"User\"\r\n\r\n      // Get Question Deployed\r\n      let questionOptions = [];\r\n      for (let i = 0; i < this.props.deployedQuestionsCount; i++) {\r\n          let question = Question(this.props.deployedQuestions[i])\r\n          let summary = await question.methods.getSummary().call();\r\n          questionOptions.push({\r\n              key: i+1,\r\n              text: summary[0],\r\n              value: i+1\r\n          });\r\n      }\r\n      this.setState( { questionOptions: questionOptions });\r\n      this.setState( { account: accounts[0] })\r\n      this.setState( { login: login });\r\n      this.setState( { accountType: accountType });\r\n    }\r\n    this.setState( { loadingResource: false });\r\n  }\r\n\r\n  export = async () => {\r\n    // Check that a question must be selected\r\n    if (this.state.questionNumber != \"\") {\r\n      // Initialise the PDF document to write\r\n      let lMargin=15; //left margin in mm\r\n      let rMargin=15; //right margin in mm\r\n      let pdfInMM=210;  // width of A4 in mm\r\n      let doc = new jsPDF(\"p\",\"mm\",\"a4\");\r\n\r\n      // Retrieve all the data of selected question\r\n      let questionNumber = Number(this.state.questionNumber) - 1;\r\n      let question = Question(this.props.deployedQuestions[questionNumber])\r\n      let summary = await question.methods.getSummary().call();\r\n      let answerList = await question.methods.getAnswerList().call();\r\n      let questionTitle = \"Question: \" + summary[1];\r\n\r\n      // Writing to the PDF document\r\n      let lines = doc.splitTextToSize(questionTitle, (pdfInMM-lMargin-rMargin));\r\n      doc.text(lMargin,20,lines);\r\n      doc.setLineWidth(0.5)\r\n      doc.line(lMargin, 20+lines.length+8, 195, 20+lines.length+8)\r\n\r\n      // If images are uploaded\r\n      if (summary[5].length != 0) {\r\n          summary[6].map((imageName, index) => {\r\n            let link = \"https://ipfs.io/ipfs/\"+summary[5][index]\r\n            doc.text(lMargin,20+lines.length+15,\"Link(s) of Image(s) Uploaded For Question:\")\r\n            lines = doc.splitTextToSize(link, (pdfInMM-lMargin-rMargin));\r\n            doc.text(lMargin,45,lines);\r\n          })\r\n          doc.setLineWidth(0.5)\r\n          doc.line(lMargin, 20+lines.length+35, 195, 20+lines.length+35)\r\n          doc.text(lMargin, 20+lines.length+45, \"Answers:\");\r\n      } else {\r\n        doc.text(lMargin, 20+lines.length+15, \"Answers:\");\r\n      }\r\n      let j = 75;\r\n      for (let i = 0; i < answerList.length; i++) {\r\n        let answer = \"(\" + (i+1) + \") \" + answerList[i][0];\r\n        lines = doc.splitTextToSize(answer, (pdfInMM-lMargin-rMargin));\r\n        // Creates a new page for every 10 answers\r\n        if (i % 10 == 0 && i != 0) {\r\n          doc.addPage();\r\n          j = 30;\r\n        }\r\n        doc.text(lMargin, j, lines);\r\n        j = j + 10;\r\n      }\r\n      doc.save(\"Answer.pdf\");\r\n    } else {\r\n      console.log(\"Please select a question\")\r\n    }\r\n  }\r\n\r\n  exportFeedback = async () => {\r\n    // Retrieve all comments\r\n    let comments = await feedback.methods.getComments().call();\r\n    // Initialise the PDF document to write\r\n    let lMargin=15; //left margin in mm\r\n    let rMargin=15; //right margin in mm\r\n    let pdfInMM=210;  // width of A4 in mm\r\n    let doc = new jsPDF(\"p\",\"mm\",\"a4\");\r\n\r\n    // Writing to the PDF document\r\n    let j = 20;\r\n    for (let i = 0; i < comments.length; i++) {\r\n      let comment = \"(\" + (i+1) + \") \" + comments[i];\r\n      let lines = doc.splitTextToSize(comment, (pdfInMM-lMargin-rMargin));\r\n      if (i % 10 == 0 && i != 0) {\r\n        doc.addPage();\r\n        j = 20;\r\n      }\r\n      doc.text(lMargin,j,lines);\r\n      j = j + 10;\r\n    }\r\n    doc.save(\"Comments.pdf\");\r\n  }\r\n\r\n  getUserTableData = () => {\r\n    return this.props.ethWalletEmailAddressBinding.map((item, index) => {\r\n      return <Table.Row key={index}>\r\n        <Table.Cell>{item.ethWallet}</Table.Cell>\r\n        <Table.Cell>{item.emailAddress}</Table.Cell>\r\n        <Table.Cell>{item.status ? \"Blacklisted\" : \"Active\"}</Table.Cell>\r\n        <Table.Cell>\r\n        {\r\n          item.status ? <Button onClick={() => this.unblacklist(item.emailAddress)} color=\"green\" size=\"mini\" icon>\r\n            <Icon name=\"undo\" />\r\n          </Button> :\r\n          <Button onClick={() => this.blacklist(item.emailAddress)} color=\"red\" size=\"mini\" icon>\r\n            <Icon name=\"delete\" />\r\n          </Button>\r\n        }\r\n        </Table.Cell>\r\n        <Table.Cell>\r\n          <Button onClick={() => this.dispense(item.ethWallet)} color=\"green\" size=\"mini\" icon>\r\n            <Icon name=\"ethereum\" />\r\n          </Button>\r\n        </Table.Cell>\r\n      </Table.Row>;\r\n    })\r\n  }\r\n\r\n  blacklist = async (emailAddress) => {\r\n    this.setState({ loading: true, errorMessage: ''});\r\n    try {\r\n        const accounts = await web3.eth.getAccounts();\r\n        // Create a new post\r\n        await credentials.methods\r\n        .blacklistEmail(emailAddress)\r\n        .send({\r\n            from: accounts[0]\r\n        });\r\n        Router.pushRoute('/admin'); // Automatic redirect the user.\r\n    } catch (err) {\r\n        this.setState({ errorMessage: err.message });\r\n        this.setState({ error: true})\r\n    }\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  unblacklist = async (emailAddress) => {\r\n    this.setState({ loading: true, errorMessage: ''});\r\n    try {\r\n        const accounts = await web3.eth.getAccounts();\r\n        // Create a new post\r\n        await credentials.methods\r\n        .unBlacklistEmail(emailAddress)\r\n        .send({\r\n            from: accounts[0]\r\n        });\r\n    } catch (err) {\r\n        this.setState({ errorMessage: err.message });\r\n        this.setState({ error: true})\r\n    }\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  dispense = async (ethWallet) => {\r\n    this.setState({ loading: true, errorMessage: ''});\r\n    try {\r\n        const accounts = await web3.eth.getAccounts();\r\n        // Create a new post\r\n        await EthQuestionToken.methods\r\n        .transfer(ethWallet, 10e4)\r\n        .send({\r\n            from: accounts[0]\r\n        });\r\n        await EthQuestionToken.events.Transfer(console.log(\"This happened\"));\r\n        // Log transaction\r\n        const profileAddress = await factory.methods.getProfile(ethWallet).call();\r\n        const profile = Profile(profileAddress);\r\n        let logTransaction = logging(\"Awarded 10 EQT(s) for first time user\");\r\n        await profile.methods.logTransaction(logTransaction)\r\n        .send({\r\n            from: accounts[0]\r\n        });\r\n    } catch (err) {\r\n        this.setState({ errorMessage: err.message });\r\n        this.setState({ error: true})\r\n    }\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  getQuestionTableData = () => {\r\n    return this.props.questionAddressTitleBinding.map((item, index) => {\r\n      return <Table.Row key={index}>\r\n        <Table.Cell>{item.questionAddress}</Table.Cell>\r\n        <Table.Cell>{item.title}</Table.Cell>\r\n        <Table.Cell>{item.flagged ? \"Flagged\" : \"Active\"}</Table.Cell>\r\n        <Table.Cell>\r\n        {\r\n          item.flagged ? <Button onClick={() => this.undoDeleteQuestion(item.questionAddress)} color=\"green\" size=\"mini\" icon>\r\n            <Icon name=\"undo\" />\r\n          </Button> :\r\n          <Button onClick={() => this.deleteQuestion(item.questionAddress)} color=\"red\" size=\"mini\" icon>\r\n            <Icon name=\"delete\" />\r\n          </Button>\r\n        }\r\n        </Table.Cell>\r\n      </Table.Row>;\r\n    })\r\n  }\r\n\r\n  deleteQuestion = async (questionAddress, title) => {\r\n    this.setState({ loading: true, errorMessage: ''});\r\n    try {\r\n        const accounts = await web3.eth.getAccounts();\r\n        let logTransaction = logging(\"Deleted Question Titled: \" + title);\r\n        await factory.methods\r\n        .deleteQuestion(questionAddress, logTransaction)\r\n        .send({\r\n            from: accounts[0]\r\n        });\r\n        Router.pushRoute('/admin'); // Automatic redirect the user.\r\n    } catch (err) {\r\n        this.setState({ errorMessage: err.message });\r\n        this.setState({ error: true})\r\n    }\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  undoDeleteQuestion = async (questionAddress, title) => {\r\n    this.setState({ loading: true, errorMessage: ''});\r\n    try {\r\n        const accounts = await web3.eth.getAccounts();\r\n        let logTransaction = logging(\"Undo Deletion Of Question Titled: \" + title);\r\n        await factory.methods\r\n        .undoDeleteQuestion(questionAddress, logTransaction)\r\n        .send({\r\n            from: accounts[0]\r\n        });\r\n        Router.pushRoute('/admin'); // Automatic redirect the user.\r\n    } catch (err) {\r\n        this.setState({ errorMessage: err.message });\r\n        this.setState({ error: true})\r\n    }\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  toggleUserTableVisibility = () =>\r\n    this.setState((prevState) => ({ userVisible: !prevState.userVisible }))\r\n\r\n  toggleQuestionTableVisibility = () =>\r\n    this.setState((prevState) => ({ questionVisible: !prevState.questionVisible }))\r\n\r\n  render() {\r\n    if (this.state.login) {\r\n      return (\r\n        <Layout accountType={this.state.accountType}>\r\n          <React.Fragment>\r\n            <Container style={{height:\"100vh\"}}>\r\n              <Divider hidden/>\r\n\r\n              <Segment raised textAlign='left'>\r\n                <Header as='h2' textAlign='center'>\r\n                  Exporting Questions & Answers As PDF\r\n                </Header>\r\n              </Segment>\r\n              <Divider hidden/>\r\n              <p style={{fontSize:'16px'}}>\r\n                Select the question to export the question and it's corresponding answers\r\n              </p>\r\n              <Dropdown clearable\r\n                        options={this.state.questionOptions}\r\n                        selection\r\n                        placeholder='Select the question to export'\r\n                        value={this.state.questionNumber}\r\n                        onChange={ (e, { value }) => this.setState({ questionNumber: value })}/>\r\n              <Button icon labelPosition='left' color=\"red\" onClick={this.export} style={{left:\"20px\"}}>\r\n                <Icon name='download'/>\r\n                Export As PDF\r\n              </Button>\r\n              <Divider hidden/>\r\n\r\n              <Segment raised textAlign='left'>\r\n                <Header as='h2' textAlign='center'>\r\n                  Exporting Feedback\r\n                </Header>\r\n              </Segment>\r\n              <Button icon labelPosition='left' color=\"red\" onClick={this.exportFeedback} style={{left:\"20px\"}}>\r\n                <Icon name='download'/>\r\n                Export As PDF\r\n              </Button>\r\n\r\n              <Segment raised textAlign='center'>\r\n                <b style={{fontSize:\"20px\"}}>Users Management</b>\r\n                <Popup\r\n                  trigger={\r\n                    <Button\r\n                      icon={this.state.userVisible ? \"minus\" : \"plus\"}\r\n                      onClick={this.toggleUserTableVisibility}\r\n                      floated=\"right\"\r\n                      size=\"mini\"\r\n                    />\r\n                  }\r\n                  content={\"Click to expand/close\"}\r\n                  inverted/>\r\n              </Segment>\r\n              <Divider hidden/>\r\n\r\n\r\n              <Transition visible={this.state.userVisible} animation='scale' duration={500}>\r\n                <Segment>\r\n                  <Header>Registered Users</Header>\r\n                    <Table compact celled>\r\n                      <Table.Header fullWidth>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell width={2}>Ethereum Wallet</Table.HeaderCell>\r\n                          <Table.HeaderCell width={3}>Email</Table.HeaderCell>\r\n                          <Table.HeaderCell width={2}>Status</Table.HeaderCell>\r\n                          <Table.HeaderCell width={2}>Blacklist</Table.HeaderCell>\r\n                          <Table.HeaderCell width={2}>Dispense Tokens</Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>{this.getUserTableData()}</Table.Body>\r\n                      <Table.Footer fullWidth>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell colSpan={5} />\r\n                        </Table.Row>\r\n                      </Table.Footer>\r\n                    </Table>\r\n                </Segment>\r\n              </Transition>\r\n              <Divider hidden/>\r\n              <Segment raised textAlign='center'>\r\n                <b style={{fontSize:\"20px\"}}>Removing Question</b>\r\n                <Popup\r\n                  trigger={\r\n                    <Button\r\n                      icon={this.state.questionVisible ? \"minus\" : \"plus\"}\r\n                      onClick={this.toggleQuestionTableVisibility}\r\n                      floated=\"right\"\r\n                      size=\"mini\"\r\n                    />\r\n                  }\r\n                  content={\"Click to expand/close\"}\r\n                  inverted/>\r\n              </Segment>\r\n              <Divider hidden/>\r\n\r\n              <Transition visible={this.state.questionVisible} animation='scale' duration={500}>\r\n                <Segment>\r\n                  <Header>Questions Posted</Header>\r\n                    <Table compact celled>\r\n                      <Table.Header fullWidth>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell width={2}>Question Address</Table.HeaderCell>\r\n                          <Table.HeaderCell width={3}>Title</Table.HeaderCell>\r\n                          <Table.HeaderCell width={2}>Status</Table.HeaderCell>\r\n                          <Table.HeaderCell width={2}>Actions</Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>{this.getQuestionTableData()}</Table.Body>\r\n                      <Table.Footer fullWidth>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell colSpan={5} />\r\n                        </Table.Row>\r\n                      </Table.Footer>\r\n                    </Table>\r\n                </Segment>\r\n              </Transition>\r\n              <Divider hidden/>\r\n\r\n              <Modal open={this.state.loading} basic size='small'>\r\n                <Header content='Performing Admin Actions' />\r\n                <Modal.Content>\r\n                  <p>\r\n                    Please Confirm the MetaMask Transaction Request. This process might take awhile.\r\n                  </p>\r\n                  <Loader active inline=\"centered\">\r\n                    Loading\r\n                  </Loader>\r\n                </Modal.Content>\r\n              </Modal>\r\n              <Message error header=\"Oops!\" content={this.state.errorMessage} hidden={!this.state.error}/>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Layout>\r\n      );\r\n    } else {\r\n      return (\r\n        <Layout accountType={this.state.accountType}>\r\n          <Container style={{width: \"100%\", height:\"100vh\"}}>\r\n            <Modal open={this.state.loadingResource} basic size='small'>\r\n              <Header icon='ethereum' content='Loading Resources' />\r\n              <Modal.Content>\r\n                <Loader active inline=\"centered\">\r\n                  Loading Admin Panel\r\n                </Loader>\r\n              </Modal.Content>\r\n            </Modal>\r\n            <Modal open={!this.state.login && !this.state.loadingResource} basic size='small'>\r\n              <Header icon='ethereum' content='Not Registered' />\r\n              <Modal.Content>\r\n                <p>\r\n                  You are currently not registered to access the platform. Please have your account registered.\r\n                </p>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Button color='green' inverted attached='bottom' onClick={() => {\r\n                  Router.pushRoute('/')}\r\n                }>\r\n                  Register For Account\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n          </Container>\r\n        </Layout>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default AdminPage;\r\n"]},"metadata":{},"sourceType":"module"}