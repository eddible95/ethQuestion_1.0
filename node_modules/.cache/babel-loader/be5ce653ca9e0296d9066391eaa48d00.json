{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Feed, Button, Header } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Question from '../ethereum/question';\nimport Layout from '../components/Layout';\nimport { Link, Router } from '../routes';\nimport QuestionRow from '../components/QuestionRow';\nimport web3 from '../ethereum/web3';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomePage, _Component);\n\n  function HomePage() {\n    _classCallCheck(this, HomePage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HomePage).apply(this, arguments));\n  }\n\n  _createClass(HomePage, [{\n    key: \"renderQuestions\",\n    value: function renderQuestions() {\n      var questionsDeployed = this.props.summaries;\n      return questionsDeployed.map(function (summary, index) {\n        return React.createElement(QuestionRow, {\n          key: index,\n          summary: summary\n        });\n      });\n    }\n  }, {\n    key: \"renderRentsDesktop\",\n    value: function renderRentsDesktop() {\n      var _this = this;\n\n      var activeCategory = this.state.activeCategory;\n      var items = this.state.availableQuestions.map(function (address, i) {\n        var deposit = ethers.utils.formatUnits(_this.state.deposit[i], \"ether\") * 1000000000000000000;\n        var rating = _this.state.questionRating[i];\n        var answers = _this.state.answererList[i];\n        var isOverDue = _this.state.isOverDue[i];\n        var canShareToken = _this.state.shareToken[i];\n        var timeEnd = _this.state.timeEnd[i];\n        var numAnswer4 = _this.state.numAnswer4[i];\n        console.log(canShareToken);\n        return React.createElement(Table.Row, {\n          key: i\n        }, React.createElement(Table.Cell, {\n          textAlign: \"center\",\n          width: 2\n        }, React.createElement(Statistic, {\n          size: \"mini\",\n          color: \"red\"\n        }, React.createElement(Statistic.Value, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, React.createElement(Rating, {\n          icon: \"star\",\n          size: \"huge\",\n          rating: rating,\n          maxRating: 5,\n          disabled: true\n        }))), React.createElement(Statistic.Label, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, \"votes\")))), React.createElement(Table.Cell, {\n          textAlign: \"center\",\n          width: 2\n        }, React.createElement(Statistic, {\n          size: \"mini\",\n          color: \"red\"\n        }, React.createElement(Statistic.Value, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, answers.length)), React.createElement(Statistic.Label, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, \"answers\")))), React.createElement(Table.Cell, {\n          textAlign: \"center\",\n          width: 2\n        }, React.createElement(Statistic, {\n          size: \"mini\",\n          color: \"red\"\n        }, React.createElement(Statistic.Value, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, deposit)), React.createElement(Statistic.Label, null, React.createElement(\"span\", {\n          style: {\n            fontSize: 15,\n            color: '#6A737C'\n          }\n        }, \"ethers\")))), React.createElement(Table.Cell, {\n          textAlign: \"left\"\n        }, React.createElement(Grid.Row, {\n          textAlign: \"left\"\n        }, React.createElement(\"span\", {\n          style: {\n            fontSize: 18,\n            color: '#6A737C',\n            cursor: 'pointer'\n          },\n          onClick: function onClick() {\n            return Router.pushRoute(\"/questions/\".concat(address));\n          }\n        }, React.createElement(\"a\", null, _this.state.titles[i]))), isOverDue ? canShareToken ? numAnswer4 ? React.createElement(Grid.Row, {\n          textAlign: \"right\"\n        }, React.createElement(Button, {\n          positive: true,\n          onClick: function onClick(e) {\n            return _this.shareToken(e, address, i);\n          },\n          loading: _this.state.loadingShareToken && _this.state.currentIndex == i,\n          disabled: _this.state.disabledShareToken\n        }, \"Share Tokens!\"), React.createElement(Message, {\n          color: \"red\",\n          compact: true,\n          size: \"mini\",\n          header: 'End time: ' + timeEnd\n        })) : React.createElement(Grid.Row, {\n          textAlign: \"right\"\n        }, \" \", React.createElement(\"span\", null, \"No answers more than 4 stars\")) : React.createElement(Grid.Row, {\n          textAlign: \"right\"\n        }, React.createElement(\"span\", null, \"Tokens Shared!\", React.createElement(Icon, {\n          name: \"check\",\n          color: \"green\"\n        }))) : React.createElement(Grid.Row, {\n          textAlign: \"right\"\n        }, React.createElement(Message, {\n          color: \"yellow\",\n          compact: true,\n          size: \"mini\",\n          header: 'End time: ' + timeEnd\n        }))));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(\"div\", null, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, \"Questions Posted\")), this.renderRentsDesktop());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var accounts, deployedQuestions, deployedQuestionsCount, questions, summaries, i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context.sent;\n                _context.next = 5;\n                return factory.methods.getDeployedQuestions().call();\n\n              case 5:\n                deployedQuestions = _context.sent;\n                deployedQuestionsCount = deployedQuestions.length; // Stores all Question contracts\n\n                questions = [];\n                summaries = [];\n                i = 0;\n\n              case 10:\n                if (!(i < deployedQuestionsCount)) {\n                  _context.next = 22;\n                  break;\n                }\n\n                questions[i] = Question(deployedQuestions[i]);\n                _context.next = 14;\n                return questions[i].methods.getSummary().call();\n\n              case 14:\n                summaries[i] = _context.sent;\n                _context.next = 17;\n                return questions[i].methods.start().call();\n\n              case 17:\n                summaries[i][6] = _context.sent;\n                console.log(summaries);\n\n              case 19:\n                i++;\n                _context.next = 10;\n                break;\n\n              case 22:\n                return _context.abrupt(\"return\", {\n                  summaries: summaries,\n                  deployedQuestions: deployedQuestions,\n                  accounts: accounts\n                });\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return HomePage;\n}(Component);\n\nexport default HomePage;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\index.js"],"names":["React","Component","Feed","Button","Header","factory","Question","Layout","Link","Router","QuestionRow","web3","HomePage","questionsDeployed","props","summaries","map","summary","index","activeCategory","state","items","availableQuestions","address","i","deposit","ethers","utils","formatUnits","rating","questionRating","answers","answererList","isOverDue","canShareToken","shareToken","timeEnd","numAnswer4","console","log","fontSize","color","length","cursor","pushRoute","titles","e","loadingShareToken","currentIndex","disabledShareToken","renderRentsDesktop","eth","getAccounts","accounts","methods","getDeployedQuestions","call","deployedQuestions","deployedQuestionsCount","questions","getSummary","start"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Feed, Button, Header } from 'semantic-ui-react';\r\nimport factory from '../ethereum/factory';\r\nimport Question from '../ethereum/question';\r\nimport Layout from '../components/Layout';\r\nimport {Link, Router} from '../routes'\r\nimport QuestionRow from '../components/QuestionRow';\r\nimport web3 from '../ethereum/web3'\r\n\r\nclass HomePage extends Component {\r\n\r\n    static async getInitialProps () {\r\n        const accounts = await web3.eth.getAccounts();\r\n        // Retrieve an array of all our deployed questions addresses.\r\n        const deployedQuestions = await factory.methods.getDeployedQuestions().call();\r\n        const deployedQuestionsCount = deployedQuestions.length;\r\n\r\n        // Stores all Question contracts\r\n        let questions = [];\r\n        let summaries = [];\r\n        for(let i=0; i<deployedQuestionsCount; i++) {\r\n          questions[i] = Question(deployedQuestions[i]);\r\n          summaries[i] = await questions[i].methods.getSummary().call();\r\n          summaries[i][6] = await questions[i].methods.start().call();\r\n          console.log(summaries);\r\n        }\r\n\r\n        return { summaries, deployedQuestions, accounts };\r\n    }\r\n\r\n    renderQuestions(){\r\n        const questionsDeployed = this.props.summaries;\r\n        return questionsDeployed.map((summary, index) => {\r\n            return <QuestionRow\r\n                key={index}\r\n                summary={summary}\r\n            />;\r\n        });\r\n    }\r\n\r\n    renderRentsDesktop() {\r\n        const {activeCategory} = this.state;\r\n\r\n        const items = this.state.availableQuestions.map((address, i) => {\r\n            const deposit = ethers.utils.formatUnits(this.state.deposit[i], \"ether\")*1000000000000000000;\r\n            const rating = this.state.questionRating[i];\r\n            const answers = this.state.answererList[i];\r\n            const isOverDue = this.state.isOverDue[i];\r\n            const canShareToken = this.state.shareToken[i];\r\n            const timeEnd = this.state.timeEnd[i];\r\n            const numAnswer4 = this.state.numAnswer4[i];\r\n            console.log(canShareToken);\r\n            return <Table.Row key={i}>\r\n                <Table.Cell textAlign='center' width={2}>\r\n                    <Statistic size='mini' color='red'>\r\n                        <Statistic.Value><span\r\n                            style={{fontSize: 15, color: '#6A737C'}}><Rating icon='star' size='huge'\r\n                                                                             rating={rating}\r\n                                                                             maxRating={5} disabled />\r\n                                        </span></Statistic.Value>\r\n                        <Statistic.Label><span style={{fontSize: 15, color: '#6A737C'}}>votes</span></Statistic.Label>\r\n                    </Statistic>\r\n                </Table.Cell>\r\n                <Table.Cell textAlign='center' width={2}>\r\n                    <Statistic size='mini' color='red'>\r\n                        <Statistic.Value><span style={{fontSize: 15, color: '#6A737C'}}>{answers.length}</span></Statistic.Value>\r\n                        <Statistic.Label><span style={{fontSize: 15, color: '#6A737C'}}>answers</span></Statistic.Label>\r\n                    </Statistic>\r\n                </Table.Cell>\r\n                <Table.Cell textAlign='center' width={2}>\r\n                    <Statistic size='mini' color='red'>\r\n                        <Statistic.Value><span style={{fontSize: 15, color: '#6A737C'}}>{deposit}</span></Statistic.Value>\r\n                        <Statistic.Label><span style={{fontSize: 15, color: '#6A737C'}}>ethers</span></Statistic.Label>\r\n                    </Statistic>\r\n                </Table.Cell>\r\n                <Table.Cell textAlign='left'>\r\n                    <Grid.Row textAlign='left'>\r\n                        <span style={{fontSize: 18, color: '#6A737C', cursor: 'pointer'}} onClick={() => Router.pushRoute(`/questions/${address}`)}><a>{this.state.titles[i]}</a></span></Grid.Row>\r\n                    {isOverDue ?\r\n                        ((canShareToken) ? ((numAnswer4) ?\r\n                            <Grid.Row textAlign='right'>\r\n                                <Button positive onClick={(e)=>this.shareToken(e, address, i)}  loading={this.state.loadingShareToken&&(this.state.currentIndex==i)} disabled={this.state.disabledShareToken}>\r\n                                    Share Tokens!\r\n                                </Button>\r\n                                <Message color='red' compact size='mini'\r\n                                         header={'End time: '+timeEnd}\r\n                                />\r\n                            </Grid.Row> : <Grid.Row textAlign='right'> <span>No answers more than 4 stars</span></Grid.Row>) : <Grid.Row textAlign='right'><span>Tokens Shared!<Icon name='check' color='green'/></span></Grid.Row>) :\r\n                        <Grid.Row textAlign='right'>\r\n                            <Message color='yellow' compact size='mini'\r\n                                     header={'End time: '+timeEnd}\r\n                            />\r\n                        </Grid.Row>}\r\n                </Table.Cell>\r\n            </Table.Row>\r\n        });\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <Header as='h2' textAlign='center'>\r\n                        Questions Posted\r\n                    </Header>\r\n                </div>\r\n                {this.renderRentsDesktop()}\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}