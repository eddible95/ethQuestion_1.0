{"ast":null,"code":"// Imports Web3 API\nimport Web3 from 'web3'; // New instance of Web3 with the provider that is automatically provided to us by MetaMask inside the browser.\n// This makes the assumption that the user has MetaMask.\n\nvar web3; // Modern DApp broswer\n\nif (typeof window !== 'undefined' && window.ethereum) {\n  var instance = new Web3(window.ethereum);\n\n  try {\n    // Request account access if needed\n    window.ethereum.enable(); // Acccounts now exposed\n\n    web3 = instance;\n  } catch (error) {\n    // User denied account access\n    alert('Please allow access for the app to work');\n  }\n} else if (typeof window !== 'undefined' && window.web3) {\n  //Legacy DApp browser\n  web3 = new Web3(web3.currentProvider); // Acccounts always exposed\n\n  resolve(web3);\n} else {\n  // Metamask not available\n  var provider = new Web3.providers.HttpProvider('http://192.168.86.248:8543');\n  web3 = new Web3(provider);\n  console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n}\n\nexport default web3;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion_1.0\\ethereum\\web3.js"],"names":["Web3","web3","window","ethereum","instance","enable","error","alert","currentProvider","resolve","provider","providers","HttpProvider","console","log"],"mappings":"AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB,C,CAEA;AACA;;AACA,IAAIC,IAAJ,C,CAEA;;AACA,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAA5C,EAAsD;AACpD,MAAIC,QAAQ,GAAG,IAAIJ,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAf;;AACA,MAAI;AACF;AACAD,IAAAA,MAAM,CAACC,QAAP,CAAgBE,MAAhB,GAFE,CAGF;;AACAJ,IAAAA,IAAI,GAAGG,QAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd;AACAC,IAAAA,KAAK,CAAC,yCAAD,CAAL;AACD;AACF,CAXD,MAWO,IAAI,OAAOL,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACD,IAA5C,EAAkD;AACvD;AACAA,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASC,IAAI,CAACO,eAAd,CAAP,CAFuD,CAGvD;;AACAC,EAAAA,OAAO,CAACR,IAAD,CAAP;AACD,CALM,MAKA;AACL;AACA,MAAMS,QAAQ,GAAG,IAAIV,IAAI,CAACW,SAAL,CAAeC,YAAnB,CAAgC,4BAAhC,CAAjB;AACAX,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASU,QAAT,CAAP;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACD;;AAED,eAAeb,IAAf","sourcesContent":["// Imports Web3 API\r\nimport Web3 from 'web3';\r\n\r\n// New instance of Web3 with the provider that is automatically provided to us by MetaMask inside the browser.\r\n// This makes the assumption that the user has MetaMask.\r\nlet web3;\r\n\r\n// Modern DApp broswer\r\nif (typeof window !== 'undefined' && window.ethereum) {\r\n  let instance = new Web3(window.ethereum);\r\n  try {\r\n    // Request account access if needed\r\n    window.ethereum.enable();\r\n    // Acccounts now exposed\r\n    web3 = instance;\r\n  } catch (error) {\r\n    // User denied account access\r\n    alert('Please allow access for the app to work');\r\n  }\r\n} else if (typeof window !== 'undefined' && window.web3) {\r\n  //Legacy DApp browser\r\n  web3 = new Web3(web3.currentProvider);\r\n  // Acccounts always exposed\r\n  resolve(web3);\r\n} else {\r\n  // Metamask not available\r\n  const provider = new Web3.providers.HttpProvider('http://192.168.86.248:8543');\r\n  web3 = new Web3(provider);\r\n  console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n}\r\n\r\nexport default web3;\r\n"]},"metadata":{},"sourceType":"module"}