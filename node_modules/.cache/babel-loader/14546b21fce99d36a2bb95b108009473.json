{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Feed, Button, Header } from 'semantic-ui-react'; // import factory from '../ethereum/factory';\n// import Post from '../ethereum/post';\n\nimport Layout from '../components/Layout';\nimport { Link, Router } from '../routes'; // import PostRow from '../components/PostRow';\n\nimport web3 from '../ethereum/web3';\n\nvar FeedIndex =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FeedIndex, _Component);\n\n  function FeedIndex() {\n    _classCallCheck(this, FeedIndex);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FeedIndex).apply(this, arguments));\n  }\n\n  _createClass(FeedIndex, [{\n    key: \"render\",\n    // static async getInitialProps () {\n    //     const accounts = await web3.eth.getAccounts();\n    //     // Retrieve an array of all our deployed posts addresses.\n    //     const deployedPosts = await factory.methods.getDeployedPosts().call();\n    //     const deployedPostsCount = deployedPosts.length;\n    //     // Return 10 posts or less\n    //     const displayCount = (deployedPostsCount >= 10) ? 10 : deployedPostsCount;\n    //     let posts = [];\n    //     let summaries = [];\n    //     let counter = deployedPostsCount-1;\n    //\n    //     // Get the last 10 posts:\n    //     for ( let i=0; i<displayCount; i++ ){\n    //         posts[i] = Post(deployedPosts[counter]);\n    //         summaries[i] = await posts[i].methods.getSummary().call();\n    //         summaries[i][6] = await posts[i].methods.likes(accounts[0]).call();\n    //         counter--;\n    //     }\n    //\n    //     return { summaries, posts, deployedPosts };\n    // }\n    //\n    // async handleClick(i) {\n    //     const accounts = await web3.eth.getAccounts();\n    //     let deployedPosts = this.props.deployedPosts;\n    //     const postLiked = Post(deployedPosts[i]);\n    //\n    //     try {\n    //         // Like a post\n    //         await postLiked.methods.likePost()\n    //         .send({\n    //             from: accounts[0]\n    //         });\n    //\n    //         Router.pushRoute('/'); // Automatic redirect the user.\n    //     } catch (err) {\n    //         //this.setState({ errorMessage: err.message });\n    //         console.log('error:', err);\n    //     }\n    // }\n    //\n    // renderPosts(){\n    //     const postsDeployed = this.props.summaries;\n    //\n    //     return postsDeployed.map((summary, index) => {\n    //         return <PostRow\n    //             key={index}\n    //             summary={summary}\n    //             onClick={() => this.handleClick(index)}\n    //         />;\n    //     });\n    // }\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(\"div\", null, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, \"Questions Posted\"), React.createElement(Link, {\n        route: \"/new\"\n      }, React.createElement(\"a\", null, React.createElement(Button, {\n        floated: \"right\",\n        content: \"New Post\",\n        icon: \"add circle\",\n        primary: true\n      })))));\n    }\n  }]);\n\n  return FeedIndex;\n}(Component);\n\nexport default FeedIndex;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\index.js"],"names":["React","Component","Feed","Button","Header","Layout","Link","Router","web3","FeedIndex"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,mBAArC,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,WAA3B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;IAEMC,S;;;;;;;;;;;;;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AACL,aACI,oBAAC,MAAD,QACI,iCACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,SAAS,EAAC;AAA1B,4BADJ,EAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC;AAAZ,SACI,+BACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,OAAhB;AAAwB,QAAA,OAAO,EAAC,UAAhC;AAA2C,QAAA,IAAI,EAAC,YAAhD;AAA6D,QAAA,OAAO;AAApE,QADJ,CADJ,CAJJ,CADJ,CADJ;AAcH;;;;EArEmBR,S;;AAwExB,eAAeQ,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Feed, Button, Header } from 'semantic-ui-react';\r\n// import factory from '../ethereum/factory';\r\n// import Post from '../ethereum/post';\r\nimport Layout from '../components/Layout';\r\nimport {Link, Router} from '../routes'\r\n// import PostRow from '../components/PostRow';\r\nimport web3 from '../ethereum/web3'\r\n\r\nclass FeedIndex extends Component {\r\n    // static async getInitialProps () {\r\n    //     const accounts = await web3.eth.getAccounts();\r\n    //     // Retrieve an array of all our deployed posts addresses.\r\n    //     const deployedPosts = await factory.methods.getDeployedPosts().call();\r\n    //     const deployedPostsCount = deployedPosts.length;\r\n    //     // Return 10 posts or less\r\n    //     const displayCount = (deployedPostsCount >= 10) ? 10 : deployedPostsCount;\r\n    //     let posts = [];\r\n    //     let summaries = [];\r\n    //     let counter = deployedPostsCount-1;\r\n    //\r\n    //     // Get the last 10 posts:\r\n    //     for ( let i=0; i<displayCount; i++ ){\r\n    //         posts[i] = Post(deployedPosts[counter]);\r\n    //         summaries[i] = await posts[i].methods.getSummary().call();\r\n    //         summaries[i][6] = await posts[i].methods.likes(accounts[0]).call();\r\n    //         counter--;\r\n    //     }\r\n    //\r\n    //     return { summaries, posts, deployedPosts };\r\n    // }\r\n    //\r\n    // async handleClick(i) {\r\n    //     const accounts = await web3.eth.getAccounts();\r\n    //     let deployedPosts = this.props.deployedPosts;\r\n    //     const postLiked = Post(deployedPosts[i]);\r\n    //\r\n    //     try {\r\n    //         // Like a post\r\n    //         await postLiked.methods.likePost()\r\n    //         .send({\r\n    //             from: accounts[0]\r\n    //         });\r\n    //\r\n    //         Router.pushRoute('/'); // Automatic redirect the user.\r\n    //     } catch (err) {\r\n    //         //this.setState({ errorMessage: err.message });\r\n    //         console.log('error:', err);\r\n    //     }\r\n    // }\r\n    //\r\n    // renderPosts(){\r\n    //     const postsDeployed = this.props.summaries;\r\n    //\r\n    //     return postsDeployed.map((summary, index) => {\r\n    //         return <PostRow\r\n    //             key={index}\r\n    //             summary={summary}\r\n    //             onClick={() => this.handleClick(index)}\r\n    //         />;\r\n    //     });\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <Header as='h2' textAlign='center'>\r\n                        Questions Posted\r\n                    </Header>\r\n                    <Link route=\"/new\">\r\n                        <a>\r\n                            <Button floated=\"right\" content=\"New Post\" icon=\"add circle\" primary />\r\n                        </a>\r\n                    </Link>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedIndex;\r\n"]},"metadata":{},"sourceType":"module"}