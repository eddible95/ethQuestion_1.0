{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport web3 from '../ethereum/web3';\nimport Layout from '../components/Layout';\nimport factory from '../ethereum/factory';\nimport credentials from '../ethereum/credentials';\nimport Profile from '../ethereum/profile';\nimport { Router } from '../routes';\nimport { Button, Card, Segment, Container } from \"semantic-ui-react\";\n\nvar userProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(userProfile, _Component);\n\n  function userProfile() {\n    _classCallCheck(this, userProfile);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(userProfile).apply(this, arguments));\n  }\n\n  _createClass(userProfile, [{\n    key: \"componentWillMount\",\n    // Redirect E-Wallet that are not Logged In to the Login Page\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context.sent;\n                _context.next = 5;\n                return credentials.methods.getBinding(accounts[0]).call();\n\n              case 5:\n                _context.t0 = _context.sent;\n\n                if (!(_context.t0 === \"\")) {\n                  _context.next = 8;\n                  break;\n                }\n\n                Router.pushRoute(\"/\"); // Automatic redirect the user to Login or Sign Up\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(Card, {\n        color: \"red\",\n        centered: true,\n        style: {\n          width: \"20%\",\n          height: \"15%\"\n        }\n      }, React.createElement(Card.Content, null, React.createElement(Card.Header, null, \"Account Details:\", React.createElement(\"div\", {\n        style: {\n          color: \"red\",\n          fontSize: \"small\",\n          wordWrap: \"break-word\"\n        }\n      }, this.props.account)), React.createElement(Card.Meta, null, \"User\"), React.createElement(Card.Description, null, React.createElement(\"b\", null, \"Token Available:\"), \" \", this.props.token), React.createElement(Card.Description, null, React.createElement(\"b\", null, \"Valid Email Address:\"), \" \", this.props.emailAddress))), React.createElement(Container, {\n        style: {\n          width: \"80%\"\n        }\n      }, React.createElement(Segment, {\n        textAlign: \"center\"\n      }, React.createElement(\"b\", null, \"Transaction History\"))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var accounts, account, profileAddress, profile, emailAddress, token;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context2.sent;\n                account = accounts[0];\n                _context2.next = 6;\n                return credentials.methods.getBinding(account).call();\n\n              case 6:\n                _context2.t0 = _context2.sent;\n\n                if (!(_context2.t0 === \"\")) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                Router.pushRoute(\"/\"); // Automatic redirect the user to Login or Sign Up\n\n              case 9:\n                _context2.next = 11;\n                return factory.methods.getProfile(account).call();\n\n              case 11:\n                profileAddress = _context2.sent;\n                profile = Profile(profileAddress);\n                _context2.next = 15;\n                return credentials.methods.getBinding(account).call();\n\n              case 15:\n                emailAddress = _context2.sent;\n                _context2.next = 18;\n                return profile.methods.getToken().call();\n\n              case 18:\n                token = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  account: account,\n                  token: token,\n                  emailAddress: emailAddress\n                });\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return userProfile;\n}(Component);\n\nexport default userProfile;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\userProfile.js"],"names":["React","Component","web3","Layout","factory","credentials","Profile","Router","Button","Card","Segment","Container","userProfile","eth","getAccounts","accounts","methods","getBinding","call","pushRoute","width","height","color","fontSize","wordWrap","props","account","token","emailAddress","getProfile","profileAddress","profile","getToken"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+BC,SAA/B,QAA+C,mBAA/C;;IAEMC,W;;;;;;;;;;;;;AAeJ;;;;;;;;;;;uBAGyBV,IAAI,CAACW,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;;uBACIV,WAAW,CAACW,OAAZ,CAAoBC,UAApB,CAA+BF,QAAQ,CAAC,CAAD,CAAvC,EAA4CG,IAA5C,E;;;;;sCAAuD,E;;;;;AAC7DX,gBAAAA,MAAM,CAACY,SAAP,M,CAAuB;;;;;;;;;;;;;;;;;;6BAIpB;AACP,aACE,oBAAC,MAAD,QACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAG,KAAd;AAAoB,QAAA,QAAQ,MAA5B;AAA6B,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC,KAAP;AAAcC,UAAAA,MAAM,EAAC;AAArB;AAApC,SACE,oBAAC,IAAD,CAAM,OAAN,QACE,oBAAC,IAAD,CAAM,MAAN,4BAEE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,KAAR;AAAeC,UAAAA,QAAQ,EAAE,OAAzB;AAAkCC,UAAAA,QAAQ,EAAE;AAA5C;AAAZ,SAAyE,KAAKC,KAAL,CAAWC,OAApF,CAFF,CADF,EAKE,oBAAC,IAAD,CAAM,IAAN,eALF,EAQE,oBAAC,IAAD,CAAM,WAAN,QACE,kDADF,OAC2B,KAAKD,KAAL,CAAWE,KADtC,CARF,EAWE,oBAAC,IAAD,CAAM,WAAN,QACE,sDADF,OAC+B,KAAKF,KAAL,CAAWG,YAD1C,CAXF,CADF,CADF,EAkBE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAACR,UAAAA,KAAK,EAAC;AAAP;AAAlB,SACE,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAE;AAApB,SACE,qDADF,CADF,CAlBF,CADF;AA0BD;;;;;;;;;;;;;uBAhD0BlB,IAAI,CAACW,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACAW,gBAAAA,O,GAAUX,QAAQ,CAAC,CAAD,C;;uBACdV,WAAW,CAACW,OAAZ,CAAoBC,UAApB,CAA+BS,OAA/B,EAAwCR,IAAxC,E;;;;;uCAAmD,E;;;;;AACzDX,gBAAAA,MAAM,CAACY,SAAP,M,CAAuB;;;;uBAEEf,OAAO,CAACY,OAAR,CAAgBa,UAAhB,CAA2BH,OAA3B,EAAoCR,IAApC,E;;;AAAvBY,gBAAAA,c;AACAC,gBAAAA,O,GAAUzB,OAAO,CAACwB,cAAD,C;;uBACIzB,WAAW,CAACW,OAAZ,CAAoBC,UAApB,CAA+BS,OAA/B,EAAwCR,IAAxC,E;;;AAArBU,gBAAAA,Y;;uBACcG,OAAO,CAACf,OAAR,CAAgBgB,QAAhB,GAA2Bd,IAA3B,E;;;AAAdS,gBAAAA,K;kDACC;AAAED,kBAAAA,OAAO,EAAPA,OAAF;AAAWC,kBAAAA,KAAK,EAALA,KAAX;AAAkBC,kBAAAA,YAAY,EAAZA;AAAlB,iB;;;;;;;;;;;;;;;;;;;EAZa3B,S;;AAsD1B,eAAeW,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport web3 from '../ethereum/web3'\r\nimport Layout from '../components/Layout';\r\nimport factory from '../ethereum/factory';\r\nimport credentials from '../ethereum/credentials';\r\nimport Profile from '../ethereum/profile';\r\nimport { Router } from '../routes';\r\nimport {Button, Card, Segment, Container} from \"semantic-ui-react\";\r\n\r\nclass userProfile extends Component {\r\n\r\n  static async getInitialProps () {\r\n      const accounts = await web3.eth.getAccounts();\r\n      const account = accounts[0];\r\n      if (await credentials.methods.getBinding(account).call() === \"\"){\r\n          Router.pushRoute(`/`); // Automatic redirect the user to Login or Sign Up\r\n      }\r\n      const profileAddress = await factory.methods.getProfile(account).call();\r\n      const profile = Profile(profileAddress);\r\n      const emailAddress = await credentials.methods.getBinding(account).call();\r\n      const token = await profile.methods.getToken().call();\r\n      return { account, token, emailAddress };\r\n  }\r\n\r\n  // Redirect E-Wallet that are not Logged In to the Login Page\r\n  async componentWillMount() {\r\n    // Retrieve the Ethereum Account from MetaMask\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (await credentials.methods.getBinding(accounts[0]).call() === \"\"){\r\n        Router.pushRoute(`/`); // Automatic redirect the user to Login or Sign Up\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Layout>\r\n        <Card color = \"red\" centered style={{width:\"20%\", height:\"15%\"}}>\r\n          <Card.Content>\r\n            <Card.Header>\r\n              Account Details:\r\n              <div style={{color: \"red\", fontSize: \"small\", wordWrap: \"break-word\" }}>{this.props.account}</div>\r\n            </Card.Header>\r\n            <Card.Meta>\r\n              User\r\n            </Card.Meta>\r\n            <Card.Description>\r\n              <b>Token Available:</b> {this.props.token}\r\n            </Card.Description>\r\n            <Card.Description>\r\n              <b>Valid Email Address:</b> {this.props.emailAddress}\r\n            </Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n        <Container style={{width:\"80%\"}}>\r\n          <Segment textAlign={\"center\"}>\r\n            <b>Transaction History</b>\r\n          </Segment>\r\n        </Container>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default userProfile;\r\n"]},"metadata":{},"sourceType":"module"}