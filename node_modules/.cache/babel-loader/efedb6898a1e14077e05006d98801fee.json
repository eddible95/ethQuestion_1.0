{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Container, Divider, Responsive } from 'semantic-ui-react';\nimport Head from 'next/head';\nimport CustomHeader from './Header';\nimport AdminHeader from './AdminHeader';\nimport Footer from './Footer'; // export default props => {\n//   const accountType = props.accountType;\n//   return (\n//       <Container style={{width:\"100%\", height:\"100vh\"}}>\n//           <Head>\n//               <link\n//                   rel=\"stylesheet\"\n//                   href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n//               />\n//               <link rel=\"shortcut icon\" href=\"/static/ethIcon.ico\" />\n//               <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n//               <title>Block-Chain Based Question Answering System</title>\n//           </Head>\n//           { accountType == \"Admin\" ? <AdminHeader/> : <CustomHeader/>}\n//           {props.children}\n//           <Divider hidden/>\n//           <Footer/>\n//       </Container>\n//   );\n// };\n\nvar DesktopContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DesktopContainer, _Component);\n\n  function DesktopContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DesktopContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DesktopContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    return _this;\n  }\n\n  _createClass(DesktopContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          getWidth = _this$props.getWidth,\n          contextRef = _this$props.contextRef,\n          children = _this$props.children;\n      return React.createElement(Responsive, {\n        fireOnMount: true,\n        getWidth: getWidth,\n        minWidth: Responsive.onlyTablet.minWidth\n      }, React.createElement(HeaderDesktop, {\n        contextRef: contextRef\n      }, React.createElement(Container, {\n        style: {\n          paddingTop: \"10em\"\n        }\n      }, children)));\n    }\n  }]);\n\n  return DesktopContainer;\n}(Component);\n\nvar Layout =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Layout, _Component2);\n\n  function Layout() {\n    _classCallCheck(this, Layout);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Layout).apply(this, arguments));\n  }\n\n  _createClass(Layout, [{\n    key: \"render\",\n    value: function render() {\n      var accountType = this.props.accountType;\n      return React.createElement(React.Fragment, null, React.createElement(Head, null, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n      }), React.createElement(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1\"\n      })));\n    }\n  }]);\n\n  return Layout;\n}(Component);\n\nexport default Layout;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\components\\Layout.js"],"names":["React","Component","Container","Divider","Responsive","Head","CustomHeader","AdminHeader","Footer","DesktopContainer","props","getWidth","contextRef","children","onlyTablet","minWidth","paddingTop","Layout","accountType"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,UAA7B,QAA+C,mBAA/C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,UAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,gB;;;;;;;;;;;;;;;;;;4DACM,E;;;;;;;6BAEC;AAAA,wBACsC,KAAKC,KAD3C;AAAA,UACGC,QADH,eACGA,QADH;AAAA,UACaC,UADb,eACaA,UADb;AAAA,UACyBC,QADzB,eACyBA,QADzB;AAGL,aACI,oBAAC,UAAD;AAAY,QAAA,WAAW,MAAvB;AAAwB,QAAA,QAAQ,EAAEF,QAAlC;AAA4C,QAAA,QAAQ,EAAEP,UAAU,CAACU,UAAX,CAAsBC;AAA5E,SACI,oBAAC,aAAD;AAAe,QAAA,UAAU,EAAEH;AAA3B,SACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEI,UAAAA,UAAU,EAAE;AAAd;AAAlB,SACKH,QADL,CADJ,CADJ,CADJ;AASH;;;;EAf0BZ,S;;IAkBzBgB,M;;;;;;;;;;;;;6BACK;AACP,UAAIC,WAAW,GAAG,KAAKR,KAAL,CAAWQ,WAA7B;AACA,aACI,oBAAC,KAAD,CAAO,QAAP,QACI,oBAAC,IAAD,QACI;AACI,QAAA,GAAG,EAAC,YADR;AAEI,QAAA,IAAI,EAAC;AAFT,QADJ,EAKI;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC;AAA9B,QALJ,CADJ,CADJ;AAWD;;;;EAdkBjB,S;;AAiBrB,eAAegB,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Divider, Responsive } from 'semantic-ui-react';\r\nimport Head from 'next/head';\r\nimport CustomHeader from './Header';\r\nimport AdminHeader from './AdminHeader';\r\nimport Footer from './Footer';\r\n\r\n// export default props => {\r\n//   const accountType = props.accountType;\r\n//   return (\r\n//       <Container style={{width:\"100%\", height:\"100vh\"}}>\r\n//           <Head>\r\n//               <link\r\n//                   rel=\"stylesheet\"\r\n//                   href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\r\n//               />\r\n//               <link rel=\"shortcut icon\" href=\"/static/ethIcon.ico\" />\r\n//               <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n//               <title>Block-Chain Based Question Answering System</title>\r\n//           </Head>\r\n//           { accountType == \"Admin\" ? <AdminHeader/> : <CustomHeader/>}\r\n//           {props.children}\r\n//           <Divider hidden/>\r\n//           <Footer/>\r\n//       </Container>\r\n//   );\r\n// };\r\n\r\nclass DesktopContainer extends Component {\r\n    state = {}\r\n\r\n    render() {\r\n        const { getWidth, contextRef, children } = this.props;\r\n\r\n        return(\r\n            <Responsive fireOnMount getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\r\n                <HeaderDesktop contextRef={contextRef}>\r\n                    <Container style={{ paddingTop: \"10em\" }}>\r\n                        {children}\r\n                    </Container>\r\n                </HeaderDesktop>\r\n            </Responsive>\r\n        );\r\n    }\r\n}\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    let accountType = this.props.accountType;\r\n    return (\r\n        <React.Fragment>\r\n            <Head>\r\n                <link\r\n                    rel=\"stylesheet\"\r\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\r\n                />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n            </Head>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}