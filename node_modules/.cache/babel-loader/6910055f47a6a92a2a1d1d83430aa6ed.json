{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Button, Checkbox, Form, Container, Divider, Input, Segment, Message, Icon, Modal, Header, Loader } from 'semantic-ui-react';\nimport LoginLayout from '../components/LoginLayout';\nimport web3 from '../ethereum/web3';\nimport Profile from '../ethereum/profile';\nimport factory from '../ethereum/factory';\nimport EthQuestionToken from '../ethereum/token';\nimport credentials from '../ethereum/credentials';\nimport { Router } from '../routes';\n\nvar RegisterPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegisterPage, _Component);\n\n  function RegisterPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      emailAddress: '',\n      loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var accounts, profileAddress, profile;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              }); // Check for valid NTU Student Email Address and Email Address has not been used\n\n\n              _context.t0 = _this.validate(_this.state.emailAddress);\n\n              if (!_context.t0) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return credentials.methods.emailNotExist(_this.state.emailAddress).call();\n\n            case 5:\n              _context.t0 = _context.sent;\n\n            case 6:\n              if (!_context.t0) {\n                _context.next = 31;\n                break;\n              }\n\n              _context.prev = 7;\n              _context.next = 10;\n              return web3.eth.getAccounts();\n\n            case 10:\n              accounts = _context.sent;\n              _context.next = 13;\n              return credentials.methods.createBinding(_this.state.emailAddress).send({\n                from: accounts[0]\n              });\n\n            case 13:\n              _context.next = 15;\n              return factory.methods.createProfile().send({\n                from: accounts[0]\n              });\n\n            case 15:\n              if (!(_this.state.emailAddress === \"admin\")) {\n                _context.next = 22;\n                break;\n              }\n\n              _context.next = 18;\n              return factory.methods.getProfile(accounts[0]).call();\n\n            case 18:\n              profileAddress = _context.sent;\n              profile = Profile(profileAddress);\n              _context.next = 22;\n              return profile.methods.setAdmin().send({\n                from: accounts[0]\n              });\n\n            case 22:\n              // } else {\n              //   let owner = await EthQuestionToken.methods.getOwner().call();\n              //   await EthQuestionToken.methods.retrieveFrom(owner, accounts[0], 10e4)\n              //   .send({\n              //     from: accounts[0]\n              //   });\n              // }\n              Router.pushRoute(\"/home\"); // Automatic redirect the user.\n\n              _context.next = 29;\n              break;\n\n            case 25:\n              _context.prev = 25;\n              _context.t1 = _context[\"catch\"](7);\n\n              _this.setState({\n                errorMessage: _context.t1.message\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 29:\n              _context.next = 33;\n              break;\n\n            case 31:\n              _this.setState({\n                errorMessage: \"Invalid Email Address or Email Address Already In Used\"\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[7, 25]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(RegisterPage, [{\n    key: \"validate\",\n    value: function validate(emailAddress) {\n      if (emailAddress === \"admin\") {\n        return true;\n      } else {\n        var re = /\\S+@e\\.ntu\\.edu\\.sg$/;\n        return re.test(emailAddress);\n      }\n    }\n  }, {\n    key: \"renderForm\",\n    value: function renderForm() {\n      var _this2 = this;\n\n      return React.createElement(Form, {\n        error: !!this.state.errorMessage\n      }, React.createElement(Segment, {\n        raised: true,\n        textAlign: \"center\"\n      }, \"Please use a valid NTU Student Email Address to be bounded to the Etheruem Account to use the Application\"), React.createElement(Form.Field, null, React.createElement(\"label\", null, \"NTU Student Email Address\"), React.createElement(Input, {\n        placeholder: \"example@e.ntu.edu.sg\",\n        value: this.state.emailAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            emailAddress: event.target.value\n          });\n        }\n      })), React.createElement(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }), React.createElement(Modal, {\n        open: this.state.loading,\n        trigger: React.createElement(Button, {\n          primary: true,\n          onClick: this.onSubmit\n        }, \"Register\"),\n        basic: true,\n        size: \"small\"\n      }, React.createElement(Header, {\n        content: \"Registering Your Email Address\"\n      }), React.createElement(Modal.Content, null, React.createElement(\"p\", null, \"Please confirm the 2 MetaMask transactions for creation of Profile and Registering of Email Address. Upon confirming the requests, please hold on while the system completes the registration process...\"), React.createElement(Loader, {\n        active: true,\n        inline: \"centered\"\n      }, \"Registering Your Email\"))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LoginLayout, null, React.createElement(Container, {\n        style: {\n          height: \"100vh\"\n        }\n      }, this.renderForm()));\n    }\n  }]);\n\n  return RegisterPage;\n}(Component);\n\nexport default RegisterPage;","map":null,"metadata":{},"sourceType":"module"}