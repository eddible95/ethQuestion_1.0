{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Feed, Button, Header } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Question from '../ethereum/question';\nimport Layout from '../components/Layout';\nimport { Link, Router } from '../routes';\nimport QuestionRow from '../components/QuestionRow';\nimport web3 from '../ethereum/web3';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomePage, _Component);\n\n  function HomePage() {\n    _classCallCheck(this, HomePage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HomePage).apply(this, arguments));\n  }\n\n  _createClass(HomePage, [{\n    key: \"renderQuestions\",\n    // async handleClick(i) {\n    //     const accounts = await web3.eth.getAccounts();\n    //     let deployedPosts = this.props.deployedPosts;\n    //     const postLiked = Post(deployedPosts[i]);\n    //\n    //     try {\n    //         // Like a post\n    //         await postLiked.methods.likePost()\n    //         .send({\n    //             from: accounts[0]\n    //         });\n    //\n    //         Router.pushRoute('/'); // Automatic redirect the user.\n    //     } catch (err) {\n    //         //this.setState({ errorMessage: err.message });\n    //         console.log('error:', err);\n    //     }\n    // }\n    value: function renderQuestions() {\n      var questionsDeployed = this.props.summaries;\n      return questionsDeployed.map(function (summary, index) {\n        return React.createElement(QuestionRow, {\n          key: index,\n          summary: summary\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(\"div\", null, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, \"Questions Posted\", console.log(factory))), this.renderQuestions());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var accounts, deployedQuestions, deployedQuestionsCount, questions, summaries, i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context.sent;\n                _context.next = 5;\n                return factory.methods.getDeployedQuestions().call();\n\n              case 5:\n                deployedQuestions = _context.sent;\n                deployedQuestionsCount = deployedQuestions.length; // Stores all Question contracts\n\n                questions = [];\n                summaries = [];\n                i = 0;\n\n              case 10:\n                if (!(i < deployedQuestionsCount - 1)) {\n                  _context.next = 18;\n                  break;\n                }\n\n                questions[i] = Question(deployedQuestions[i]);\n                _context.next = 14;\n                return questions[i].methods.getSummary().call();\n\n              case 14:\n                summaries[i] = _context.sent;\n\n              case 15:\n                i++;\n                _context.next = 10;\n                break;\n\n              case 18:\n                return _context.abrupt(\"return\", {\n                  summaries: summaries,\n                  deployedQuestions: deployedQuestions,\n                  accounts: accounts\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return HomePage;\n}(Component);\n\nexport default HomePage;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\index.js"],"names":["React","Component","Feed","Button","Header","factory","Question","Layout","Link","Router","QuestionRow","web3","HomePage","questionsDeployed","props","summaries","map","summary","index","console","log","renderQuestions","eth","getAccounts","accounts","methods","getDeployedQuestions","call","deployedQuestions","deployedQuestionsCount","length","questions","i","getSummary"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,mBAArC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,WAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;IAEMC,Q;;;;;;;;;;;;;AAkBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;sCAEiB;AACb,UAAMC,iBAAiB,GAAG,KAAKC,KAAL,CAAWC,SAArC;AACA,aAAOF,iBAAiB,CAACG,GAAlB,CAAsB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC7C,eAAO,oBAAC,WAAD;AACH,UAAA,GAAG,EAAEA,KADF;AAEH,UAAA,OAAO,EAAED;AAFN,UAAP;AAIH,OALM,CAAP;AAMH;;;6BAEQ;AACL,aACI,oBAAC,MAAD,QACI,iCACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,SAAS,EAAC;AAA1B,6BAEKE,OAAO,CAACC,GAAR,CAAYf,OAAZ,CAFL,CADJ,CADJ,EAOK,KAAKgB,eAAL,EAPL,CADJ;AAWH;;;;;;;;;;;;;uBAzD0BV,IAAI,CAACW,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;;uBAE0BnB,OAAO,CAACoB,OAAR,CAAgBC,oBAAhB,GAAuCC,IAAvC,E;;;AAA1BC,gBAAAA,iB;AACAC,gBAAAA,sB,GAAyBD,iBAAiB,CAACE,M,EAEjD;;AACIC,gBAAAA,S,GAAY,E;AACZhB,gBAAAA,S,GAAY,E;AACRiB,gBAAAA,C,GAAE,C;;;sBAAGA,CAAC,GAACH,sBAAsB,GAAC,C;;;;;AACpCE,gBAAAA,SAAS,CAACC,CAAD,CAAT,GAAe1B,QAAQ,CAACsB,iBAAiB,CAACI,CAAD,CAAlB,CAAvB;;uBACqBD,SAAS,CAACC,CAAD,CAAT,CAAaP,OAAb,CAAqBQ,UAArB,GAAkCN,IAAlC,E;;;AAArBZ,gBAAAA,SAAS,CAACiB,CAAD,C;;;AAF8BA,gBAAAA,CAAC,E;;;;;iDAKnC;AAAEjB,kBAAAA,SAAS,EAATA,SAAF;AAAaa,kBAAAA,iBAAiB,EAAjBA,iBAAb;AAAgCJ,kBAAAA,QAAQ,EAARA;AAAhC,iB;;;;;;;;;;;;;;;;;;;EAfQvB,S;;AA8DvB,eAAeW,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Feed, Button, Header } from 'semantic-ui-react';\r\nimport factory from '../ethereum/factory';\r\nimport Question from '../ethereum/question';\r\nimport Layout from '../components/Layout';\r\nimport {Link, Router} from '../routes'\r\nimport QuestionRow from '../components/QuestionRow';\r\nimport web3 from '../ethereum/web3'\r\n\r\nclass HomePage extends Component {\r\n    static async getInitialProps () {\r\n        const accounts = await web3.eth.getAccounts();\r\n        // Retrieve an array of all our deployed questions addresses.\r\n        const deployedQuestions = await factory.methods.getDeployedQuestions().call();\r\n        const deployedQuestionsCount = deployedQuestions.length;\r\n\r\n        // Stores all Question contracts\r\n        let questions = [];\r\n        let summaries = [];\r\n        for(let i=0; i<deployedQuestionsCount-1; i++) {\r\n          questions[i] = Question(deployedQuestions[i]);\r\n          summaries[i] = await questions[i].methods.getSummary().call();\r\n        }\r\n\r\n        return { summaries, deployedQuestions, accounts };\r\n    }\r\n\r\n    // async handleClick(i) {\r\n    //     const accounts = await web3.eth.getAccounts();\r\n    //     let deployedPosts = this.props.deployedPosts;\r\n    //     const postLiked = Post(deployedPosts[i]);\r\n    //\r\n    //     try {\r\n    //         // Like a post\r\n    //         await postLiked.methods.likePost()\r\n    //         .send({\r\n    //             from: accounts[0]\r\n    //         });\r\n    //\r\n    //         Router.pushRoute('/'); // Automatic redirect the user.\r\n    //     } catch (err) {\r\n    //         //this.setState({ errorMessage: err.message });\r\n    //         console.log('error:', err);\r\n    //     }\r\n    // }\r\n\r\n    renderQuestions(){\r\n        const questionsDeployed = this.props.summaries;\r\n        return questionsDeployed.map((summary, index) => {\r\n            return <QuestionRow\r\n                key={index}\r\n                summary={summary}\r\n            />;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <Header as='h2' textAlign='center'>\r\n                        Questions Posted\r\n                        {console.log(factory)}\r\n                    </Header>\r\n                </div>\r\n                {this.renderQuestions()}\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}