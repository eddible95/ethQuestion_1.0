{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Button, Card, Header, Image, Segment } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport { Link } from '../routes';\n\nrequire('es6-promise').polyfill();\n\nrequire('isomorphic-fetch');\n\nvar UserProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserProfile, _Component);\n\n  function UserProfile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserProfile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      colors: ['red', 'orange', 'yellow', 'green', 'teal', 'violet', 'pink']\n    });\n\n    return _this;\n  }\n\n  _createClass(UserProfile, [{\n    key: \"renderCats\",\n    value: function renderCats() {\n      var _this2 = this;\n\n      if (this.props.userCats !== undefined && this.props.userCats.length === 0) {\n        return React.createElement(Segment, {\n          placeholder: true\n        }, React.createElement(Header, {\n          icon: true\n        }, \"You don't own any CryptoKitties\"), React.createElement(\"a\", {\n          href: \"https://www.cryptokitties.co\"\n        }, React.createElement(Button, {\n          content: \"cryptokitties.co\",\n          primary: true\n        })));\n      } else {\n        return this.props.userCats.map(function (cat, index) {\n          return React.createElement(Link, {\n            key: index,\n            route: \"/kitties/\".concat(cat.id)\n          }, React.createElement(Card, {\n            raised: true,\n            color: _this2.state.colors[index % _this2.state.colors.length]\n          }, React.createElement(Image, {\n            src: cat.image_url_png\n          }), React.createElement(Card.Content, null, React.createElement(Card.Header, null, cat.name), React.createElement(Card.Meta, null, React.createElement(\"span\", {\n            className: \"date\"\n          }, \"Generation \", cat.generation)), React.createElement(Card.Description, null, cat.bio.replace('#{name}', cat.name)))));\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, this.props.userAccount, \" Profile\"), React.createElement(Card.Group, {\n        centered: true,\n        style: {\n          marginTop: '10px'\n        }\n      }, this.renderCats()));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var accounts, url, urlR, userAccount, response, userCats;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context.sent;\n                // URL with an address for example (owns CryptoKitties):\n                url = 'https://public.api.cryptokitties.co/v1/kitties?owner_wallet_address=0xc147FC4Af048b8f9CE9E1296468dF9417938629b';\n                urlR = 'https://public.api.cryptokitties.co/v1/kitties?owner_wallet_address=' + accounts[0];\n                userAccount = accounts[0];\n                /** Get the CryptoKitties of the current user.\r\n                 To get an account that has CryptoKitties use url instead of urlR **/\n\n                _context.next = 8;\n                return fetch(url, {\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                    'x-api-token': process.env.API_TOKEN\n                  }\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 8:\n                response = _context.sent;\n                userCats = response.kitties;\n                return _context.abrupt(\"return\", {\n                  userCats: userCats,\n                  userAccount: userAccount\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return UserProfile;\n}(Component);\n\nexport default UserProfile;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\userProfile.js"],"names":["React","Component","Button","Card","Header","Image","Segment","Layout","web3","Link","require","polyfill","UserProfile","colors","props","userCats","undefined","length","map","cat","index","id","state","image_url_png","name","generation","bio","replace","userAccount","marginTop","renderCats","eth","getAccounts","accounts","url","urlR","fetch","headers","process","env","API_TOKEN","then","res","json","response","kitties"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Button, Card, Header, Image, Segment} from 'semantic-ui-react'\r\nimport Layout from '../components/Layout';\r\nimport web3 from '../ethereum/web3';\r\nimport { Link } from '../routes';\r\n\r\nrequire('es6-promise').polyfill();\r\nrequire('isomorphic-fetch');\r\n\r\nclass UserProfile extends Component {\r\n    state = {\r\n        colors: ['red', 'orange', 'yellow', 'green', 'teal', 'violet', 'pink']\r\n    }\r\n    static async getInitialProps () {\r\n        const accounts = await web3.eth.getAccounts();\r\n        // URL with an address for example (owns CryptoKitties):\r\n        const url = 'https://public.api.cryptokitties.co/v1/kitties?owner_wallet_address=0xc147FC4Af048b8f9CE9E1296468dF9417938629b';\r\n        const urlR = 'https://public.api.cryptokitties.co/v1/kitties?owner_wallet_address=' + accounts[0];\r\n\r\n        const userAccount = accounts[0];\r\n\r\n        /** Get the CryptoKitties of the current user.\r\n         To get an account that has CryptoKitties use url instead of urlR **/\r\n        const response = await fetch(url, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-api-token': process.env.API_TOKEN\r\n            }\r\n        }).then(res => res.json());\r\n\r\n        const userCats = response.kitties;\r\n        return { userCats, userAccount }\r\n    }\r\n\r\n    renderCats(){\r\n        if(this.props.userCats !== undefined && this.props.userCats.length ===  0){\r\n            return (\r\n                <Segment placeholder>\r\n                    <Header icon>\r\n                        You don't own any CryptoKitties\r\n                    </Header>\r\n                    <a href=\"https://www.cryptokitties.co\">\r\n                        <Button content=\"cryptokitties.co\" primary />\r\n                    </a>\r\n                </Segment>\r\n            );\r\n        }\r\n        else {\r\n            return this.props.userCats.map((cat, index) => {\r\n                return (\r\n                    <Link key={index} route={`/kitties/${cat.id}`}>\r\n                        <Card raised color={this.state.colors[index%this.state.colors.length]}>\r\n                            <Image src={cat.image_url_png} />\r\n                            <Card.Content>\r\n                                <Card.Header>{cat.name}</Card.Header>\r\n                                <Card.Meta>\r\n                                    <span className='date'>Generation {cat.generation}</span>\r\n                                </Card.Meta>\r\n                                <Card.Description>{cat.bio.replace('#{name}', cat.name)}</Card.Description>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </Link>);\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Header as='h2' textAlign='center'>\r\n                    {this.props.userAccount} Profile\r\n                </Header>\r\n                <Card.Group centered style={{ marginTop: '10px' }}>\r\n                    {this.renderCats()}\r\n                </Card.Group>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}