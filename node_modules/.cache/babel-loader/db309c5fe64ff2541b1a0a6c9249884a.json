{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport MobileDetect from 'mobile-detect';\nimport Layout from '../components/Layout';\nimport { Container, Segment, Header, Divider, Responsive, Button, Icon, TextArea, Modal, Loader, Message, Form, Grid, Label, Progress } from \"semantic-ui-react\";\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport Profile from '../ethereum/profile';\nimport credentials from '../ethereum/credentials';\nimport feedback from '../ethereum/feedback';\nimport { getWidthFactory } from '../pages/device';\nimport { checkFieldEmpty } from './functions';\nimport { Router } from '../routes';\n\nvar FeedbackPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FeedbackPage, _Component);\n\n  function FeedbackPage(props) {\n    var _this;\n\n    _classCallCheck(this, FeedbackPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FeedbackPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              }); // Ensures all fields are filled\n\n\n              if (!(_this.checkFieldEmpty(_this.state.like) && _this.checkFieldEmpty(_this.state.usefulness) && _this.checkFieldEmpty(_this.state.easy))) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return web3.eth.getAccounts();\n\n            case 5:\n              accounts = _context.sent;\n              _context.next = 8;\n              return feedback.methods.updateFeedback(_this.state.like, _this.state.usefulness, _this.state.easy, _this.state.comments).send({\n                from: accounts[0]\n              });\n\n            case 8:\n              Router.pushRoute('/home'); // Automatic redirect the user.\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n            case 14:\n              _this.setState({\n                loading: false\n              });\n\n              _context.next = 19;\n              break;\n\n            case 17:\n              _this.setState({\n                errorMessage: \"Required Field(s) Empty\"\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 11]]);\n    })));\n\n    _this.state = {\n      like: \"\",\n      usefulness: \"\",\n      easy: \"\",\n      comments: \"\",\n      loading: false,\n      errorMessage: \"\",\n      login: false,\n      resourceLoading: true,\n      accountType: null,\n      statistics: []\n    };\n    return _this;\n  }\n\n  _createClass(FeedbackPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var accounts, login, profileAddress, profile, accountType, statistics;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context2.sent;\n                login = false;\n                _context2.next = 6;\n                return credentials.methods.getBinding(accounts[0]).call();\n\n              case 6:\n                _context2.t0 = _context2.sent;\n\n                if (!(_context2.t0 === \"\")) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 25;\n                break;\n\n              case 10:\n                login = true; // Get Account Type\n\n                _context2.next = 13;\n                return factory.methods.getProfile(accounts[0]).call();\n\n              case 13:\n                profileAddress = _context2.sent;\n                profile = Profile(profileAddress);\n                _context2.next = 17;\n                return profile.methods.getAccountType().call();\n\n              case 17:\n                accountType = _context2.sent;\n                accountType == 0 ? accountType = \"Admin\" : accountType = \"User\";\n                _context2.next = 21;\n                return feedback.methods.getSummaryStatistics().call();\n\n              case 21:\n                statistics = _context2.sent;\n                this.setState({\n                  login: login\n                });\n                this.setState({\n                  accountType: accountType\n                });\n                this.setState({\n                  statistics: statistics\n                });\n\n              case 25:\n                this.setState({\n                  resourceLoading: false\n                });\n\n              case 26:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"checkFieldEmpty\",\n    value: function checkFieldEmpty(field) {\n      return field === \"\" ? false : true;\n    } // Submit the question to be stored on the Ethereum Blockchain\n\n  }, {\n    key: \"renderStatistic\",\n    value: function renderStatistic() {\n      var numOfLikes = this.state.statistics[0];\n      var numOfDislikes = this.state.statistics[1];\n      var numOfUseful = this.state.statistics[2];\n      var numOfNotUseful = this.state.statistics[3];\n      var numOfEasy = this.state.statistics[4];\n      var numOfNotEasy = this.state.statistics[5];\n      var totalRatings = Number(numOfLikes) + Number(numOfDislikes);\n      return React.createElement(Segment, null, React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"center\"\n      }, React.createElement(Icon, {\n        name: \"chart bar outline\"\n      }), \"Summary Statistics of System\"), React.createElement(\"p\", {\n        style: {\n          textAlign: 'center'\n        }\n      }, React.createElement(\"b\", null, \"Total Rating(s):\"), \" \", totalRatings), React.createElement(Grid, {\n        centered: true,\n        columns: 2\n      }, React.createElement(Grid.Column, {\n        style: {\n          paddingLeft: \"10px\",\n          paddingRight: \"0\",\n          width: \"30%\"\n        }\n      }, React.createElement(Label, {\n        horizontal: true\n      }, \"Likes\")), React.createElement(Grid.Column, {\n        style: {\n          paddingLeft: \"0\",\n          paddingRight: \"10px\",\n          width: \"70%\"\n        }\n      }, React.createElement(Progress, {\n        color: \"green\",\n        value: numOfLikes,\n        total: totalRatings,\n        progress: \"percent\",\n        precision: 2,\n        style: {\n          margin: \"0\"\n        }\n      })), React.createElement(Grid.Column, {\n        style: {\n          paddingLeft: \"10px\",\n          paddingRight: \"0\",\n          width: \"30%\"\n        }\n      }, React.createElement(Label, {\n        horizontal: true\n      }, \"Useful\")), React.createElement(Grid.Column, {\n        style: {\n          paddingLeft: \"0\",\n          paddingRight: \"10px\",\n          width: \"70%\"\n        }\n      }, React.createElement(Progress, {\n        color: \"green\",\n        value: numOfUseful,\n        total: totalRatings,\n        progress: \"percent\",\n        precision: 2,\n        style: {\n          margin: \"0\"\n        }\n      })), React.createElement(Grid.Column, {\n        style: {\n          paddingLeft: \"10px\",\n          paddingRight: \"0\",\n          width: \"30%\"\n        }\n      }, React.createElement(Label, {\n        horizontal: true\n      }, \"Easy To Use\")), React.createElement(Grid.Column, {\n        style: {\n          paddingLeft: \"0\",\n          paddingRight: \"10px\",\n          width: \"70%\"\n        }\n      }, React.createElement(Progress, {\n        color: \"green\",\n        value: numOfEasy,\n        total: totalRatings,\n        progress: \"percent\",\n        precision: 2,\n        style: {\n          margin: \"0\"\n        }\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.login) {\n        return React.createElement(Layout, {\n          accountType: this.state.accountType\n        }, React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(Container, {\n          style: {\n            width: \"70vw\"\n          }\n        }, React.createElement(Segment, {\n          raised: true\n        }, React.createElement(Header, {\n          as: \"h2\",\n          textAlign: \"center\"\n        }, \"Collection of Feedback For System\"))), React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(Grid, {\n          centered: true\n        }, React.createElement(Grid.Column, {\n          width: 8\n        }, React.createElement(Header, {\n          as: \"h3\",\n          textAlign: \"left\"\n        }, \"Do you like the system?\"), React.createElement(\"p\", null, \"Selected Choice: \", React.createElement(\"b\", null, this.state.like.toString())), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"green\",\n          compact: true,\n          onClick: function onClick() {\n            _this2.setState({\n              like: true\n            });\n          }\n        }, React.createElement(Icon, {\n          name: \"thumbs up outline\"\n        }), \"Yes\"), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"red\",\n          compact: true,\n          onClick: function onClick() {\n            _this2.setState({\n              like: false\n            });\n          }\n        }, \">\", React.createElement(Icon, {\n          name: \"thumbs down outline\"\n        }), \"No\"), React.createElement(Header, {\n          as: \"h3\",\n          textAlign: \"left\"\n        }, \"Do you find the system useful?\"), React.createElement(\"p\", null, \"Selected Choice: \", React.createElement(\"b\", null, this.state.usefulness.toString())), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"green\",\n          compact: true,\n          onClick: function onClick() {\n            _this2.setState({\n              usefulness: true\n            });\n          }\n        }, React.createElement(Icon, {\n          name: \"thumbs up outline\"\n        }), \"Yes\"), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"red\",\n          compact: true,\n          onClick: function onClick() {\n            _this2.setState({\n              usefulness: false\n            });\n          }\n        }, React.createElement(Icon, {\n          name: \"thumbs down outline\"\n        }), \"No\"), React.createElement(Header, {\n          as: \"h3\",\n          textAlign: \"left\"\n        }, \"Do you find the system easy to use?\"), React.createElement(\"p\", null, \"Selected Choice: \", React.createElement(\"b\", null, this.state.easy.toString())), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"green\",\n          compact: true,\n          onClick: function onClick() {\n            _this2.setState({\n              easy: true\n            });\n          }\n        }, React.createElement(Icon, {\n          name: \"thumbs up outline\"\n        }), \"Yes\"), React.createElement(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          color: \"red\",\n          compact: true,\n          onClick: function onClick() {\n            _this2.setState({\n              easy: false\n            });\n          }\n        }, React.createElement(Icon, {\n          name: \"thumbs down outline\"\n        }), \"No\"), React.createElement(Header, {\n          as: \"h3\",\n          textAlign: \"left\"\n        }, \"Any suggestions for improvments or other comments?\"), React.createElement(Form, {\n          error: !!this.state.errorMessage,\n          style: {\n            marginTop: '10px'\n          }\n        }, React.createElement(Form.Field, null, React.createElement(TextArea, {\n          placeholder: \"Tell us more\",\n          style: {\n            width: \"100%\",\n            height: \"20%\"\n          },\n          value: this.state.comments,\n          onChange: function onChange(event) {\n            return _this2.setState({\n              comments: event.target.value\n            });\n          }\n        })), React.createElement(Message, {\n          error: true,\n          header: \"Oops!\",\n          content: this.state.errorMessage\n        })), React.createElement(Divider, {\n          hidden: true\n        }), React.createElement(Modal, {\n          open: this.state.loading,\n          trigger: React.createElement(Button, {\n            primary: true,\n            onClick: this.onSubmit\n          }, \"Submit Feedback\"),\n          basic: true,\n          size: \"small\"\n        }, React.createElement(Header, {\n          content: \"Submitting Feedback\"\n        }), React.createElement(Modal.Content, null, React.createElement(\"p\", null, \"Please Confirm the MetaMask Transaction Request to submit your Feedback to the Block-Chain Network. Upon successful submission, you will be redirected to the Home Page. This process might take awhile.\"), React.createElement(Loader, {\n          active: true,\n          inline: \"centered\"\n        }, \"Loading\")))), React.createElement(Grid.Column, {\n          width: 4\n        }, React.createElement(Responsive, {\n          fireOnMount: true,\n          getWidth: getWidthFactory(this.props.isMobileFromSSR),\n          minWidth: Responsive.onlyTablet.minWidth\n        }, this.renderStatistic()))));\n      } else {\n        return React.createElement(Layout, {\n          accountType: this.state.accountType\n        }, React.createElement(Container, null, React.createElement(Modal, {\n          open: this.state.resourceLoading,\n          basic: true,\n          size: \"small\"\n        }, React.createElement(Header, {\n          icon: \"ethereum\",\n          content: \"Loading Resources\"\n        }), React.createElement(Modal.Content, null, React.createElement(Loader, {\n          active: true,\n          inline: \"centered\"\n        }, \"Loading Feedback Page\"))), React.createElement(Modal, {\n          open: !this.state.login && !this.state.resourceLoading,\n          basic: true,\n          size: \"small\"\n        }, React.createElement(Header, {\n          icon: \"ethereum\",\n          content: \"Not Registered\"\n        }), React.createElement(Modal.Content, null, React.createElement(\"p\", null, \"You are currently not registered to access the platform. Please have your account registered.\")), React.createElement(Modal.Actions, null, React.createElement(Button, {\n          color: \"green\",\n          inverted: true,\n          attached: \"bottom\",\n          onClick: function onClick() {\n            Router.pushRoute('/');\n          }\n        }, \"Register For Account\")))));\n      }\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(_ref2) {\n        var req, isMobileFromSSR, device, md;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                req = _ref2.req;\n                isMobileFromSSR = false;\n\n                if (req) {\n                  device = req.headers[\"user-agent\"];\n                  md = new MobileDetect(device);\n                  isMobileFromSSR = !!md.mobile();\n                }\n\n                return _context3.abrupt(\"return\", {\n                  isMobileFromSSR: isMobileFromSSR\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return FeedbackPage;\n}(Component);\n\nexport default FeedbackPage;","map":{"version":3,"sources":["C:\\Users\\edd1e\\Desktop\\ethQuestion\\pages\\feedback.js"],"names":["React","Component","MobileDetect","Layout","Container","Segment","Header","Divider","Responsive","Button","Icon","TextArea","Modal","Loader","Message","Form","Grid","Label","Progress","web3","factory","Profile","credentials","feedback","getWidthFactory","checkFieldEmpty","Router","FeedbackPage","props","setState","loading","errorMessage","state","like","usefulness","easy","eth","getAccounts","accounts","methods","updateFeedback","comments","send","from","pushRoute","message","login","resourceLoading","accountType","statistics","getBinding","call","getProfile","profileAddress","profile","getAccountType","getSummaryStatistics","field","numOfLikes","numOfDislikes","numOfUseful","numOfNotUseful","numOfEasy","numOfNotEasy","totalRatings","Number","textAlign","paddingLeft","paddingRight","width","margin","toString","marginTop","height","event","target","value","onSubmit","isMobileFromSSR","onlyTablet","minWidth","renderStatistic","req","device","headers","md","mobile"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MobileDetect from 'mobile-detect';\r\nimport Layout from '../components/Layout';\r\nimport { Container, Segment, Header, Divider, Responsive,\r\n   Button, Icon, TextArea, Modal, Loader, Message, Form, Grid, Label, Progress } from \"semantic-ui-react\";\r\nimport web3 from '../ethereum/web3';\r\nimport factory from '../ethereum/factory';\r\nimport Profile from '../ethereum/profile';\r\nimport credentials from '../ethereum/credentials';\r\nimport feedback from '../ethereum/feedback';\r\nimport { getWidthFactory } from '../pages/device';\r\nimport { checkFieldEmpty } from './functions'\r\nimport {Router} from '../routes';\r\n\r\nclass FeedbackPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      like: \"\",\r\n      usefulness: \"\",\r\n      easy: \"\",\r\n      comments:\"\",\r\n      loading: false,\r\n      errorMessage: \"\",\r\n      login: false,\r\n      resourceLoading: true,\r\n      accountType: null,\r\n      statistics: []\r\n    };\r\n  }\r\n\r\n  static async getInitialProps({ req }) {\r\n    let isMobileFromSSR = false;\r\n    if(req){\r\n        const device = req.headers[\"user-agent\"];\r\n        const md = new MobileDetect(device);\r\n        isMobileFromSSR = !!md.mobile();\r\n    }\r\n    return { isMobileFromSSR };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // Retrieve the Ethereum Account from MetaMask\r\n    const accounts = await web3.eth.getAccounts();\r\n    let login = false;\r\n    if (await credentials.methods.getBinding(accounts[0]).call() === \"\") {\r\n    } else {\r\n        login = true;\r\n        // Get Account Type\r\n        let profileAddress = await factory.methods.getProfile(accounts[0]).call();\r\n        let profile = Profile(profileAddress);\r\n        let accountType = await profile.methods.getAccountType().call();\r\n        accountType == 0 ? accountType = \"Admin\" : accountType = \"User\"\r\n        let statistics = await feedback.methods.getSummaryStatistics().call();\r\n        this.setState( { login: login });\r\n        this.setState( { accountType: accountType });\r\n        this.setState( { statistics: statistics });\r\n      }\r\n    this.setState( { resourceLoading: false });\r\n  }\r\n\r\n  checkFieldEmpty(field){\r\n    return field === \"\" ? false : true;\r\n  }\r\n\r\n  // Submit the question to be stored on the Ethereum Blockchain\r\n  onSubmit = async () => {\r\n      this.setState({ loading: true, errorMessage: '' });\r\n      // Ensures all fields are filled\r\n      if (this.checkFieldEmpty(this.state.like) && this.checkFieldEmpty(this.state.usefulness) && this.checkFieldEmpty(this.state.easy)){\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            // Create a new post\r\n            await feedback.methods\r\n            .updateFeedback(this.state.like, this.state.usefulness, this.state.easy, this.state.comments)\r\n            .send({\r\n                from: accounts[0]\r\n            });\r\n            Router.pushRoute('/home'); // Automatic redirect the user.\r\n        } catch (err) {\r\n            this.setState({ errorMessage: err.message });\r\n        }\r\n        this.setState({ loading: false });\r\n      } else {\r\n        this.setState({ errorMessage: \"Required Field(s) Empty\" });\r\n        this.setState({ loading: false });\r\n      }\r\n  };\r\n\r\n  renderStatistic() {\r\n    const numOfLikes = this.state.statistics[0];\r\n    const numOfDislikes = this.state.statistics[1];\r\n    const numOfUseful = this.state.statistics[2];\r\n    const numOfNotUseful = this.state.statistics[3];\r\n    const numOfEasy = this.state.statistics[4];\r\n    const numOfNotEasy = this.state.statistics[5];\r\n    const totalRatings = Number(numOfLikes) + Number(numOfDislikes);\r\n    return (\r\n      <Segment>\r\n        <Header as='h3' textAlign=\"center\">\r\n          <Icon name=\"chart bar outline\"/>Summary Statistics of System\r\n        </Header>\r\n        <p style={{ textAlign:'center'}}>\r\n          <b>Total Rating(s):</b> {totalRatings}\r\n        </p>\r\n        <Grid centered columns={2}>\r\n          <Grid.Column style={{paddingLeft:\"10px\", paddingRight:\"0\", width:\"30%\"}}>\r\n            <Label horizontal>\r\n              Likes\r\n            </Label>\r\n          </Grid.Column>\r\n          <Grid.Column style={{paddingLeft:\"0\", paddingRight:\"10px\", width:\"70%\"}}>\r\n            <Progress color='green' value={numOfLikes} total={totalRatings} progress='percent' precision={2} style={{ margin:\"0\"}}/>\r\n          </Grid.Column>\r\n          <Grid.Column style={{paddingLeft:\"10px\", paddingRight:\"0\", width:\"30%\"}}>\r\n            <Label horizontal>\r\n              Useful\r\n            </Label>\r\n          </Grid.Column>\r\n          <Grid.Column style={{paddingLeft:\"0\", paddingRight:\"10px\", width:\"70%\"}}>\r\n            <Progress color='green' value={numOfUseful} total={totalRatings} progress='percent' precision={2} style={{ margin:\"0\"}}/>\r\n          </Grid.Column>\r\n          <Grid.Column style={{paddingLeft:\"10px\", paddingRight:\"0\", width:\"30%\"}}>\r\n            <Label horizontal>\r\n              Easy To Use\r\n            </Label>\r\n          </Grid.Column>\r\n          <Grid.Column style={{paddingLeft:\"0\", paddingRight:\"10px\", width:\"70%\"}}>\r\n            <Progress color='green' value={numOfEasy} total={totalRatings} progress='percent' precision={2} style={{ margin:\"0\"}}/>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.login) {\r\n      return(\r\n        <Layout accountType={this.state.accountType}>\r\n          <Divider hidden/>\r\n          <Container style={{width:\"70vw\"}}>\r\n            <Segment raised>\r\n              <Header as='h2' textAlign='center'>\r\n                Collection of Feedback For System\r\n              </Header>\r\n            </Segment>\r\n          </Container>\r\n          <Divider hidden/>\r\n          <Grid centered>\r\n            <Grid.Column width={8}>\r\n              <Header as='h3' textAlign='left'>\r\n                Do you like the system?\r\n              </Header>\r\n              <p>Selected Choice: <b>{this.state.like.toString()}</b>\r\n              </p>\r\n              <Button icon labelPosition='left' color=\"green\" compact={true}\r\n                onClick={() => {this.setState({ like: true })}}>\r\n                <Icon name='thumbs up outline' />\r\n                Yes\r\n              </Button>\r\n              <Button icon labelPosition='left' color=\"red\" compact={true}\r\n                onClick={() => {this.setState({ like: false })}}>>\r\n                <Icon name='thumbs down outline' />\r\n                No\r\n              </Button>\r\n              <Header as='h3' textAlign='left'>\r\n                Do you find the system useful?\r\n              </Header>\r\n              <p>\r\n              Selected Choice: <b>{this.state.usefulness.toString()}</b>\r\n              </p>\r\n              <Button icon labelPosition='left' color=\"green\" compact={true}\r\n                onClick={() => {this.setState({ usefulness: true })}}>\r\n                <Icon name='thumbs up outline' />\r\n                Yes\r\n              </Button>\r\n              <Button icon labelPosition='left' color=\"red\" compact={true}\r\n                onClick={() => {this.setState({ usefulness: false })}}>\r\n                <Icon name='thumbs down outline' />\r\n                No\r\n              </Button>\r\n              <Header as='h3' textAlign='left'>\r\n                Do you find the system easy to use?\r\n              </Header>\r\n              <p>\r\n              Selected Choice: <b>{this.state.easy.toString()}</b>\r\n              </p>\r\n              <Button icon labelPosition='left' color=\"green\" compact={true}\r\n                onClick={() => {this.setState({ easy: true })}}>\r\n                <Icon name='thumbs up outline' />\r\n                Yes\r\n              </Button>\r\n              <Button icon labelPosition='left' color=\"red\" compact={true}\r\n                onClick={() => {this.setState({ easy: false })}}>\r\n                <Icon name='thumbs down outline' />\r\n                No\r\n              </Button>\r\n              <Header as='h3' textAlign='left'>\r\n                Any suggestions for improvments or other comments?\r\n              </Header>\r\n              <Form error={!!this.state.errorMessage} style={{ marginTop: '10px' }}>\r\n                <Form.Field>\r\n                  <TextArea placeholder='Tell us more' style={{width:\"100%\", height:\"20%\"}}\r\n                    value={this.state.comments}\r\n                    onChange={event => this.setState({ comments: event.target.value })}/>\r\n                </Form.Field>\r\n                <Message error header=\"Oops!\" content={this.state.errorMessage}/>\r\n              </Form>\r\n              <Divider hidden/>\r\n              <Modal open={this.state.loading} trigger={<Button primary onClick={this.onSubmit}>Submit Feedback</Button>} basic size='small'>\r\n                <Header content='Submitting Feedback' />\r\n                <Modal.Content>\r\n                  <p>\r\n                    Please Confirm the MetaMask Transaction Request to submit your Feedback to the Block-Chain Network.\r\n                    Upon successful submission, you will be redirected to the Home Page. This process might take awhile.\r\n                  </p>\r\n                  <Loader active inline=\"centered\">\r\n                    Loading\r\n                  </Loader>\r\n                </Modal.Content>\r\n              </Modal>\r\n              </Grid.Column>\r\n              <Grid.Column width={4}>\r\n                <Responsive fireOnMount getWidth={getWidthFactory(this.props.isMobileFromSSR)} minWidth={Responsive.onlyTablet.minWidth}>\r\n                  {this.renderStatistic()}\r\n                </Responsive>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Layout>\r\n      );\r\n    } else {\r\n      return (\r\n        <Layout accountType={this.state.accountType}>\r\n          <Container>\r\n            <Modal open={this.state.resourceLoading} basic size='small'>\r\n              <Header icon='ethereum' content='Loading Resources' />\r\n              <Modal.Content>\r\n                <Loader active inline=\"centered\">\r\n                  Loading Feedback Page\r\n                </Loader>\r\n              </Modal.Content>\r\n            </Modal>\r\n            <Modal open={!this.state.login && !this.state.resourceLoading} basic size='small'>\r\n              <Header icon='ethereum' content='Not Registered' />\r\n              <Modal.Content>\r\n                <p>\r\n                  You are currently not registered to access the platform. Please have your account registered.\r\n                </p>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Button color='green' inverted attached='bottom' onClick={() => {\r\n                  Router.pushRoute('/')}\r\n                }>\r\n                  Register For Account\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n          </Container>\r\n        </Layout>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default FeedbackPage;\r\n"]},"metadata":{},"sourceType":"module"}