{"version":3,"file":"static\\development\\pages\\admin.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/AccountIssueModal.js","webpack:///./components/DesktopHeader.js","webpack:///./components/Footer.js","webpack:///./components/Layout.js","webpack:///./components/LoadingModal.js","webpack:///./components/MobileHeader.js","webpack:///./components/TimeOutModal.js","webpack:///./ethereum/credentials.js","webpack:///./ethereum/factory.js","webpack:///./ethereum/feedback.js","webpack:///./ethereum/profile.js","webpack:///./ethereum/question.js","webpack:///./ethereum/token.js","webpack:///./ethereum/tokenSale.js","webpack:///./ethereum/web3.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/create.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime-corejs2/regenerator/index.js","webpack:///./pages/admin.js","webpack:///./routes.js","webpack:///./utils/device.js","webpack:///./utils/functions.js","webpack:///./utils/pdf.js","webpack:///external \"core-js/library/fn/object/create\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-prototype-of\"","webpack:///external \"core-js/library/fn/object/set-prototype-of\"","webpack:///external \"core-js/library/fn/promise\"","webpack:///external \"core-js/library/fn/symbol\"","webpack:///external \"core-js/library/fn/symbol/iterator\"","webpack:///external \"fuse.js\"","webpack:///external \"jspdf\"","webpack:///external \"mobile-detect\"","webpack:///external \"next-cookies\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"regenerator-runtime\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"web3\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// object to store loaded chunks\n \t// \"0\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t\"static\\\\development\\\\pages\\\\admin.js\": 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// uncaught error handler for webpack runtime\n \t__webpack_require__.oe = function(err) {\n \t\tprocess.nextTick(function() {\n \t\t\tthrow err; // catch this error by using import().catch()\n \t\t});\n \t};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","import React, { Component } from 'react';\r\nimport { Modal, Header, Button, Loader } from 'semantic-ui-react';\r\nimport {Link, Router} from '../routes';\r\n\r\nclass AccountIssueModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Modal open={this.props.loading} basic size='small'>\r\n          <Header icon='ethereum' content='Loading Resources' />\r\n          <Modal.Content>\r\n            <Loader active inline=\"centered\">\r\n              Fetching Data From Blockchain\r\n            </Loader>\r\n          </Modal.Content>\r\n        </Modal>\r\n        <Modal open={!this.props.login && !this.props.loading} basic size='small'>\r\n          <Header icon='ethereum' content='Account Issue' />\r\n          <Modal.Content>\r\n            <p>\r\n              You are facing one of the following issues:\r\n            </p>\r\n            <p>\r\n              (1) Banned from accessing the platform.\r\n            </p>\r\n            <p>\r\n              (2) Currently not registered to access the platform. Please have your account registered.\r\n            </p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color='green' inverted attached='bottom' onClick={() => {\r\n              Router.pushRoute('/')}\r\n            }>\r\n              Register For Account\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountIssueModal;\r\n","import React, { Component } from 'react';\r\nimport { Menu, Icon, Input, Segment, Sticky, Container, Button, Dropdown, Grid } from 'semantic-ui-react';\r\nimport { Link, Router } from '../routes';\r\n\r\nclass DesktopHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value:''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.keyPress = this.keyPress.bind(this);\r\n   }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value });\r\n   }\r\n\r\n  keyPress(e){\r\n    if(e.keyCode == 13){\r\n     if (this.state.value!='')\r\n         Router.pushRoute(`/${'search/'+encodeURIComponent(this.state.value)}`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Segment inverted style={{marginBottom:'0px', fontSize:'20px', borderRadius:'0px', border:'0px', paddingRight:'5%'}} as='h1' textAlign='center'>\r\n          <Icon name='ethereum' />Block-Chain Based Question Answering System\r\n          <Button compact floated='right' inverted color='orange' onClick={()=>{Router.pushRoute('/')}}><Icon name='user' circular size='small'/>Log Out</Button>\r\n        </Segment>\r\n        <Sticky context={this.props.contextRef}>\r\n            <Menu inverted size='massive' fluid style={{marginTop:'0px', borderRadius:'0px', border:'0px', paddingLeft:'5%', paddingRight:'5%'}}>\r\n              <Link route=\"/home\">\r\n                <Menu.Item\r\n                  name='Home'\r\n                  icon='home'\r\n                  active = {this.props.page === 'Home'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route=\"/about\">\r\n                <Menu.Item\r\n                  name='About'\r\n                  icon='question'\r\n                  active = {this.props.page === 'About'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route='/userProfile'>\r\n                <Menu.Item\r\n                  name='Profile'\r\n                  icon='user'\r\n                  active = {this.props.page === 'Profile'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route=\"/new\">\r\n                <Menu.Item\r\n                  name='Ask Question'\r\n                  icon='pencil alternate'\r\n                  active = {this.props.page === 'New'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route=\"/feedback\">\r\n                <Menu.Item\r\n                  name='Feedback'\r\n                  icon='comment'\r\n                  active = {this.props.page === 'Feedback'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route=\"/leaderboard\">\r\n                <Menu.Item\r\n                  name='Leaderboard'\r\n                  icon='trophy'\r\n                  active = {this.props.page === 'Leaderboard'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              {this.props.accountType == \"Admin\" ? <Link route=\"/admin\">\r\n                                                    <Menu.Item\r\n                                                      name='Admin Options'\r\n                                                      icon='settings'\r\n                                                      active = {this.props.page === 'Admin'}\r\n                                                      color='orange'\r\n                                                      />\r\n                                                   </Link>\r\n                                                 : null }\r\n              <Menu.Menu position=\"right\">\r\n                <Menu.Item>\r\n                  <Input icon={<Icon name=\"search\" link onClick={() => {\r\n                   if (this.state.value!='') {\r\n                     Router.pushRoute(`/${'search/'+encodeURIComponent(this.state.value)}`);\r\n                   }\r\n                  }}/>}\r\n                  placeholder=\"Search...\"\r\n                  onKeyDown={this.keyPress}\r\n                  onChange={this.handleChange}\r\n                   />\r\n                </Menu.Item>\r\n              </Menu.Menu>\r\n            </Menu>\r\n        </Sticky>\r\n        {this.props.children}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DesktopHeader;\r\n","import React, { Component } from 'react';\r\nimport { Container, Segment, Icon, Header } from 'semantic-ui-react';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <Segment inverted vertical >\r\n        <Header as='h4' inverted textAlign='center'>\r\n          <Icon name='ethereum'/>Block-Chain Based Question Answering System\r\n        </Header>\r\n        <p style={{textAlign:\"center\"}}>\r\n          SCSE Final Year Project | Powered By Ethereum | Created Using React JS\r\n        </p>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import Head from 'next/head';\r\nimport React, { Component } from 'react';\r\nimport MobileDetect from 'mobile-detect';\r\nimport { Container, Responsive, Sidebar, Divider } from 'semantic-ui-react';\r\nimport { getWidthFactory } from '../utils/device';\r\nimport DesktopHeader from './DesktopHeader';\r\nimport MobileHeader from \"./MobileHeader\"\r\nimport Footer from './Footer';\r\n\r\nclass DesktopContainer extends Component {\r\n  state = {}\r\n\r\n  render() {\r\n    const { accountType, page, getWidth, contextRef, children } = this.props;\r\n    return(\r\n      <Responsive fireOnMount getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\r\n        <DesktopHeader accountType={accountType} contextRef={contextRef} page={page}>\r\n          <Container style={{minHeight:\"100vh\", width:\"100vw\"}}>\r\n            {children}\r\n          </Container>\r\n        </DesktopHeader>\r\n      </Responsive>\r\n    );\r\n  }\r\n}\r\n\r\nclass MobileContainer extends Component {\r\n  state = { sidebarOpened: false };\r\n\r\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\r\n\r\n  handleToggle = () => this.setState({ sidebarOpened: true })\r\n\r\n  render() {\r\n    const { accountType, getWidth, contextRef, children } = this.props;\r\n\r\n    return(\r\n      <Responsive fireOnMount as={Sidebar.Pushable} getWidth={getWidth} maxWidth={Responsive.onlyMobile.maxWidth}>\r\n          <MobileHeader contextRef={contextRef}\r\n                      accountType={accountType}\r\n                      handleSidebarHide={this.handleSidebarHide}\r\n                      handleToggle={this.handleToggle}\r\n                      sidebarOpened={this.state.sidebarOpened}>\r\n              <Container style={{ paddingTop: \"10em\", minHeight:\"100vh\", width:\"100vw\"}}>\r\n                {children}\r\n              </Container>\r\n          </MobileHeader>\r\n      </Responsive>\r\n    );\r\n  }\r\n}\r\n\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  };\r\n  static async getInitialProps(props) {\r\n    let isMobileFromSSR = false;\r\n    if(props.req){\r\n        const device = props.req.headers[\"user-agent\"];\r\n        const md = new MobileDetect(device);\r\n        isMobileFromSSR = !!md.mobile();\r\n    }\r\n    return { isMobileFromSSR };\r\n  }\r\n  handleContextRef = contextRef => this.setState({ contextRef });\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Head>\r\n          <link\r\n              rel=\"stylesheet\"\r\n              href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\r\n          />\r\n          <link rel=\"shortcut icon\" href=\"/static/ethIcon.ico\" />\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n          <title>Block-Chain Based Question Answering System</title>\r\n        </Head>\r\n        <div ref={this.handleContextRef}>\r\n          <DesktopContainer accountType={this.props.accountType} getWidth={getWidthFactory(this.props.isMobileFromSSR)} page={this.props.page}>\r\n            {this.props.children}\r\n          </DesktopContainer>\r\n\r\n          <MobileContainer accountType={this.props.accountType} getWidth={getWidthFactory(this.props.isMobileFromSSR)}>\r\n            {this.props.children}\r\n          </MobileContainer>\r\n        </div>\r\n        <Divider hidden/>\r\n        <Footer/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\r\nimport { Modal, Header, Button, Loader } from 'semantic-ui-react';\r\nimport {Link, Router} from '../routes';\r\n\r\nclass ErrorModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Modal open={this.props.trigger} basic size='small'>\r\n          <Header content={this.props.title} />\r\n          <Modal.Content>\r\n            <p>\r\n              {this.props.content}\r\n            </p>\r\n            <Loader active inline=\"centered\">\r\n              {this.props.loader}\r\n            </Loader>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorModal;\r\n","import React, { Component } from 'react';\r\nimport { Menu, Segment, Container, Icon, Header, Grid,\r\n   Input, Button, Sticky, Rail, Sidebar } from 'semantic-ui-react';\r\nimport { Link, Router } from '../routes';\r\n\r\nclass HeaderMobile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={value:''}\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.keyPress = this.keyPress.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n      this.setState({ value: e.target.value });\r\n   }\r\n\r\n  keyPress(e){\r\n      if(e.keyCode == 13){\r\n         if (this.state.value!='')\r\n              Router.pushRoute(`/${'search/'+encodeURIComponent(this.state.value)}`);\r\n      }\r\n  }\r\n\r\n  renderSideBar() {\r\n    const {\r\n        handleSidebarHide,\r\n        handleToggle,\r\n        sidebarOpened,\r\n        children\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Sidebar.Pushable>\r\n          <Sidebar\r\n            as={Menu}\r\n            animation='push'\r\n            inverted\r\n            onHide={handleSidebarHide}\r\n            vertical\r\n            visible={sidebarOpened}\r\n            width='thin'\r\n            icon='labeled'>\r\n            <Menu.Item header>\r\n              <h3>Question Answering System</h3>\r\n            </Menu.Item>\r\n\r\n            <Link route=\"/home\">\r\n              <a className = \"item\">\r\n                <Icon name='home'/>\r\n                Home\r\n              </a>\r\n            </Link>\r\n            <Link route=\"/about\">\r\n              <a className = \"item\">\r\n                <Icon name='question'/>\r\n                About\r\n              </a>\r\n            </Link>\r\n            <Link route=\"/userProfile\">\r\n              <a className = \"item\">\r\n                <Icon name='user'/>\r\n                Profile\r\n              </a>\r\n            </Link>\r\n            <Link route=\"/new\">\r\n              <a className = \"item\">\r\n                <Icon name='pencil alternate'/>\r\n                Ask Question\r\n              </a>\r\n            </Link>\r\n            <Link route=\"/feedback\">\r\n              <a className = \"item\">\r\n                <Icon name='comment'/>\r\n                Feedback\r\n              </a>\r\n            </Link>\r\n            <Link route=\"/leaderboard\">\r\n              <a className = \"item\">\r\n                <Icon name='trophy'/>\r\n                Leaderboard\r\n              </a>\r\n            </Link>\r\n            {this.props.accountType == \"Admin\" ? <Link route=\"/admin\">\r\n                                                  <a className = \"item\">\r\n                                                    <Icon name='settings'/>\r\n                                                    Admin Settings\r\n                                                  </a>\r\n                                                 </Link>\r\n                                               : null }\r\n             <Link route=\"/login\">\r\n               <a className = \"item\">\r\n                 <Icon name='power off'/>\r\n                 Log Out\r\n               </a>\r\n             </Link>\r\n          </Sidebar>\r\n\r\n          <Sidebar.Pusher dimmed={sidebarOpened} style={{minHeight: '100vh'}}>\r\n            <Rail\r\n              internal\r\n              position=\"left\"\r\n              attached\r\n              style={{ top: \"auto\", height: \"auto\", width: \"100%\" }}>\r\n              <Sticky context={this.props.contextRef}>\r\n                <Segment inverted vertical style={{ minHeight: 50 , padding: '1em 0em 0em 0em', textAlign: 'flex-end'}}>\r\n                  <Menu inverted fixed='top' size='large' secondary>\r\n                    <Container>\r\n                      <Menu.Item onClick={handleToggle}>\r\n                        <Icon name='sidebar' />\r\n                      </Menu.Item>\r\n                      <Menu.Item header style={{padding: 0}}>\r\n                        <Icon name='ethereum' style={{float: 'left'}}/>\r\n                        Ethereum Question Answering System\r\n                      </Menu.Item>\r\n                    </Container>\r\n                  </Menu>\r\n                  <Container style={{marginTop: '40px'}}>\r\n                    <Grid inverted style={{padding: '0em 0.7em 0em 1.5em'}} verticalAlign='bottom'>\r\n                      <Grid.Row>\r\n                        <Menu secondary inverted fluid>\r\n                          <Menu.Item>\r\n                            <Input icon={<Icon name=\"search\" link onClick={() => {\r\n                             if (this.state.value!='') {\r\n                               Router.pushRoute(`/${'search/'+encodeURIComponent(this.state.value)}`);\r\n                             }\r\n                            }}/>}\r\n                            placeholder=\"Search...\"\r\n                            onKeyDown={this.keyPress}\r\n                            onChange={this.handleChange}\r\n                             />\r\n                          </Menu.Item>\r\n                          <Button compact floated='right' inverted color='orange' onClick={()=>{Router.pushRoute('/new')}}>\r\n                            <Icon name='pencil alternate' circular size='small'/>Ask Question\r\n                          </Button>\r\n                        </Menu>\r\n                      </Grid.Row>\r\n                      </Grid>\r\n                    </Container>\r\n                  </Segment>\r\n                </Sticky>\r\n              </Rail>\r\n              {children}\r\n          </Sidebar.Pusher>\r\n        </Sidebar.Pushable>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <React.Fragment>\r\n      {this.renderSideBar()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderMobile;\r\n","import React, { Component } from 'react';\r\nimport { Modal, Header, Button, Loader } from 'semantic-ui-react';\r\nimport {Link, Router} from '../routes';\r\n\r\nclass TimeOutModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Modal open={this.props.timeout} basic size='small'>\r\n          <Header icon='ethereum' content='Account Timeout' />\r\n          <Modal.Content>\r\n            Your account has timed out after being idle for too long. Please re-login your account.\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color='green' inverted attached='bottom' onClick={() => {\r\n              Router.pushRoute('/')}\r\n            }>\r\n              Login Account\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeOutModal;\r\n","// The idea: If we need to get access to our deployed factory instance from somewhere else in our app,\r\n//     we won't have to go through the entire process of importing web3, and the interface and get the address and etc.\r\n//     Instead, we can import this factory.js file.\r\n\r\n// Import the copy of web3 that we created (The instance that is created there).\r\nimport web3 from './web3';\r\n\r\n// Import the compiled contract that is placed in the build directory.\r\n// Any time that we want to tell web3 about an already deployed contract, we have to give web3 that contract's interface (ABI).\r\n// The ABI is defined inside the PostFactory.JSON file.\r\nimport Credentials from './build/Credentials.json';\r\n\r\n// Create the contract instance that refers to the specific address that we deployed the contract to\r\n// and we we'll export it from this file.\r\n// So, if we need excess to our deployed factory - We can import factory.js.\r\n// arguments: Our contract ABI, The address that we deployed our factory to\r\nlet instance;\r\nif (typeof web3 !== 'undefined') {\r\n  instance = new web3.eth.Contract(\r\n      JSON.parse(Credentials.interface),\r\n      \"0x24F324e559FD33741Baf45d9F0D4c22834636E7d\"\r\n  );\r\n}\r\n\r\nexport default instance;\r\n","// The idea: If we need to get access to our deployed factory instance from somewhere else in our app,\r\n//     we won't have to go through the entire process of importing web3, and the interface and get the address and etc.\r\n//     Instead, we can import this factory.js file.\r\n\r\n// Import the copy of web3 that we created (The instance that is created there).\r\nimport web3 from './web3';\r\n\r\n// Import the compiled contract that is placed in the build directory.\r\n// Any time that we want to tell web3 about an already deployed contract, we have to give web3 that contract's interface (ABI).\r\n// The ABI is defined inside the PostFactory.JSON file.\r\nimport QuestionFactory from './build/QuestionFactory.json';\r\n\r\n// Create the contract instance that refers to the specific address that we deployed the contract to\r\n// and we we'll export it from this file.\r\n// So, if we need excess to our deployed factory - We can import factory.js.\r\n// arguments: Our contract ABI, The address that we deployed our factory to\r\nlet instance;\r\nif (typeof web3 !== 'undefined') {\r\n  instance = new web3.eth.Contract(\r\n      JSON.parse(QuestionFactory.interface),\r\n      \"0xc82918Bd8970D2774343e239437B2A40E2ffDA23\"\r\n  );\r\n}\r\n\r\nexport default instance;\r\n","// The idea: If we need to get access to our deployed factory instance from somewhere else in our app,\r\n//     we won't have to go through the entire process of importing web3, and the interface and get the address and etc.\r\n//     Instead, we can import this factory.js file.\r\n// Import the copy of web3 that we created (The instance that is created there).\r\nimport web3 from './web3';\r\n\r\n// Import the compiled contract that is placed in the build directory.\r\n// Any time that we want to tell web3 about an already deployed contract, we have to give web3 that contract's interface (ABI).\r\n// The ABI is defined inside the PostFactory.JSON file.\r\nimport Feedback from './build/Feedback.json';\r\n\r\n// Create the contract instance that refers to the specific address that we deployed the contract to\r\n// and we we'll export it from this file.\r\n// So, if we need excess to our deployed factory - We can import factory.js.\r\n// arguments: Our contract ABI, The address that we deployed our factory to\r\nlet instance;\r\nif (typeof web3 !== 'undefined') {\r\n  instance = new web3.eth.Contract(\r\n      JSON.parse(Feedback.interface),\r\n      \"0x0F5F69473A921dbbc765149Fae1fbeFA7Bbb61D3\"\r\n  );\r\n}\r\n\r\nexport default instance;\r\n","import web3 from './web3';\r\nimport Profile from './build/Profile.json';\r\n\r\nexport default (address) => {\r\n  return new web3.eth.Contract(\r\n    // The interface from the build/Profile:\r\n    JSON.parse(Profile.interface), address\r\n  );\r\n} ;\r\n","import web3 from './web3';\r\nimport Question from './build/Question.json';\r\n\r\nexport default (address) => {\r\n  return new web3.eth.Contract(\r\n    // The interface from the build/Question:\r\n    JSON.parse(Question.interface), address\r\n  );\r\n} ;\r\n","// The idea: If we need to get access to our deployed factory instance from somewhere else in our app,\r\n//     we won't have to go through the entire process of importing web3, and the interface and get the address and etc.\r\n//     Instead, we can import this factory.js file.\r\n\r\n// Import the copy of web3 that we created (The instance that is created there).\r\nimport web3 from './web3';\r\n\r\n// Import the compiled contract that is placed in the build directory.\r\n// Any time that we want to tell web3 about an already deployed contract, we have to give web3 that contract's interface (ABI).\r\n// The ABI is defined inside the PostFactory.JSON file.\r\nimport Token from './build/EthQuestionToken.json';\r\n\r\n// Create the contract instance that refers to the specific address that we deployed the contract to\r\n// and we we'll export it from this file.\r\n// So, if we need excess to our deployed factory - We can import factory.js.\r\n// arguments: Our contract ABI, The address that we deployed our factory to\r\nlet instance;\r\nif (typeof web3 !== 'undefined') {\r\n  instance = new web3.eth.Contract(\r\n      JSON.parse(Token.interface),\r\n      \"0xD6b20F97777ed67deB51B5d15fa63389e5fBaA99\"\r\n  );\r\n}\r\n\r\nexport default instance;\r\n","// The idea: If we need to get access to our deployed factory instance from somewhere else in our app,\r\n//     we won't have to go through the entire process of importing web3, and the interface and get the address and etc.\r\n//     Instead, we can import this factory.js file.\r\n\r\n// Import the copy of web3 that we created (The instance that is created there).\r\nimport web3 from './web3';\r\n\r\n// Import the compiled contract that is placed in the build directory.\r\n// Any time that we want to tell web3 about an already deployed contract, we have to give web3 that contract's interface (ABI).\r\n// The ABI is defined inside the PostFactory.JSON file.\r\nimport Token from './build/EthQuestionTokenSale.json';\r\n\r\n// Create the contract instance that refers to the specific address that we deployed the contract to\r\n// and we we'll export it from this file.\r\n// So, if we need excess to our deployed factory - We can import factory.js.\r\n// arguments: Our contract ABI, The address that we deployed our factory to\r\nlet instance;\r\nif (typeof web3 !== 'undefined') {\r\n  instance = new web3.eth.Contract(\r\n      JSON.parse(Token.interface),\r\n      \"0x498885040eAdBeA9990b6bF4E6AE2dbb5E8d9c99\"\r\n  );\r\n}\r\n\r\nexport default instance;\r\n","// Imports Web3 API\r\nimport Web3 from 'web3';\r\n\r\n// New instance of Web3 with the provider that is automatically provided to us by MetaMask inside the browser.\r\n// This makes the assumption that the user has MetaMask.\r\nlet web3;\r\n\r\n// Modern DApp broswer\r\nif (typeof window !== 'undefined' && window.ethereum) {\r\n  let instance = new Web3(window.ethereum);\r\n  try {\r\n    // Request account access if needed\r\n    window.ethereum.enable();\r\n    // Acccounts now exposed\r\n    web3 = instance;\r\n  } catch (error) {\r\n    // User denied account access\r\n    alert('Please allow access for the app to work');\r\n  }\r\n} else if (typeof window !== 'undefined' && window.web3) {\r\n  //Legacy DApp browser\r\n  web3 = new Web3(web3.currentProvider);\r\n  // Acccounts always exposed\r\n  resolve(web3);\r\n} else {\r\n  // Metamask not available\r\n  const provider = new Web3.providers.HttpProvider('http://192.168.86.248:8543');\r\n  web3 = new Web3(provider);\r\n  console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n}\r\n\r\nexport default web3;\r\n","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","export default function _assertThisInitialized(self) {\r\n  if (self === void 0) {\r\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\r\n  }\r\n\r\n  return self;\r\n}","import _Promise from \"../../core-js/promise\";\r\n\r\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\r\n  try {\r\n    var info = gen[key](arg);\r\n    var value = info.value;\r\n  } catch (error) {\r\n    reject(error);\r\n    return;\r\n  }\r\n\r\n  if (info.done) {\r\n    resolve(value);\r\n  } else {\r\n    _Promise.resolve(value).then(_next, _throw);\r\n  }\r\n}\r\n\r\nexport default function _asyncToGenerator(fn) {\r\n  return function () {\r\n    var self = this,\r\n        args = arguments;\r\n    return new _Promise(function (resolve, reject) {\r\n      var gen = fn.apply(self, args);\r\n\r\n      function _next(value) {\r\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\r\n      }\r\n\r\n      function _throw(err) {\r\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\r\n      }\r\n\r\n      _next(undefined);\r\n    });\r\n  };\r\n}","export default function _classCallCheck(instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\r\n\r\nfunction _defineProperties(target, props) {\r\n  for (var i = 0; i < props.length; i++) {\r\n    var descriptor = props[i];\r\n    descriptor.enumerable = descriptor.enumerable || false;\r\n    descriptor.configurable = true;\r\n    if (\"value\" in descriptor) descriptor.writable = true;\r\n\r\n    _Object$defineProperty(target, descriptor.key, descriptor);\r\n  }\r\n}\r\n\r\nexport default function _createClass(Constructor, protoProps, staticProps) {\r\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\r\n  if (staticProps) _defineProperties(Constructor, staticProps);\r\n  return Constructor;\r\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\r\nexport default function _defineProperty(obj, key, value) {\r\n  if (key in obj) {\r\n    _Object$defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n\r\n  return obj;\r\n}","import _Object$getPrototypeOf from \"../../core-js/object/get-prototype-of\";\r\nimport _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\r\nexport default function _getPrototypeOf(o) {\r\n  _getPrototypeOf = _Object$setPrototypeOf ? _Object$getPrototypeOf : function _getPrototypeOf(o) {\r\n    return o.__proto__ || _Object$getPrototypeOf(o);\r\n  };\r\n  return _getPrototypeOf(o);\r\n}","import _Object$create from \"../../core-js/object/create\";\r\nimport setPrototypeOf from \"./setPrototypeOf\";\r\nexport default function _inherits(subClass, superClass) {\r\n  if (typeof superClass !== \"function\" && superClass !== null) {\r\n    throw new TypeError(\"Super expression must either be null or a function\");\r\n  }\r\n\r\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\r\n    constructor: {\r\n      value: subClass,\r\n      writable: true,\r\n      configurable: true\r\n    }\r\n  });\r\n  if (superClass) setPrototypeOf(subClass, superClass);\r\n}","import _typeof from \"../../helpers/esm/typeof\";\r\nimport assertThisInitialized from \"./assertThisInitialized\";\r\nexport default function _possibleConstructorReturn(self, call) {\r\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\r\n    return call;\r\n  }\r\n\r\n  return assertThisInitialized(self);\r\n}","import _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\r\nexport default function _setPrototypeOf(o, p) {\r\n  _setPrototypeOf = _Object$setPrototypeOf || function _setPrototypeOf(o, p) {\r\n    o.__proto__ = p;\r\n    return o;\r\n  };\r\n\r\n  return _setPrototypeOf(o, p);\r\n}","import _Symbol$iterator from \"../../core-js/symbol/iterator\";\r\nimport _Symbol from \"../../core-js/symbol\";\r\n\r\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\r\n\r\nexport default function _typeof(obj) {\r\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\r\n    _typeof = function _typeof(obj) {\r\n      return _typeof2(obj);\r\n    };\r\n  } else {\r\n    _typeof = function _typeof(obj) {\r\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\r\n    };\r\n  }\r\n\r\n  return _typeof(obj);\r\n}","module.exports = require(\"regenerator-runtime\");\r\n","import React, { Component } from 'react';\r\nimport { Container, Segment, Header, Divider, Button, Popup, Form, Input,\r\n   Icon, Dropdown, Table, Modal, Loader, Message, Transition, Grid } from \"semantic-ui-react\";\r\nimport Layout from '../components/Layout';\r\nimport LoadingModal from '../components/LoadingModal';\r\nimport AccountIssueModal from '../components/AccountIssueModal';\r\nimport TimeOutModal from '../components/TimeOutModal';\r\nimport {Router} from '../routes';\r\nimport { logging, checkRewardField } from '../utils/functions';\r\nimport web3 from '../ethereum/web3';\r\nimport factory from '../ethereum/factory';\r\nimport Profile from '../ethereum/profile';\r\nimport Question from '../ethereum/question';\r\nimport feedback from '../ethereum/feedback';\r\nimport EthQuestionToken from '../ethereum/token';\r\nimport EthQuestionTokenSale from '../ethereum/tokenSale'\r\nimport credentials from '../ethereum/credentials';\r\nimport { exportQuestion, exportComments } from '../utils/pdf';\r\nimport cookies from 'next-cookies';\r\n\r\nclass AdminPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: null,\r\n      error: false,\r\n      loading: false,\r\n      loadingResource: true,\r\n      timeout: false,\r\n      deployedQuestionsCount: null,\r\n      deployedQuestions: [],\r\n      ethWalletEmailAddressBinding: [],\r\n      questionAddressTitleBinding: [],\r\n      tokenPrice: null,\r\n      tokenBalance: null,\r\n      etherBalance: null,\r\n      errorMessage: '',\r\n      accountType: null,\r\n      userVisible: false,\r\n      questionOptions: [],\r\n      questionNumber: null,\r\n      questionVisible: false,\r\n      newTokenPrice: '',\r\n      topUpAmount: '',\r\n      tokenManagementVisible: false\r\n    };\r\n  }\r\n\r\n  static async getInitialProps(props) {\r\n    return { isLogin: cookies(props).login || '', account: cookies(props).wallet || '' };\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    if(this.props != prevProps) {\r\n      this.fetchData()\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (typeof web3 === 'undefined') {\r\n      this.setState({ loading: false })\r\n      return\r\n    }\r\n    let login = false;\r\n    if (this.props.isLogin) {\r\n      login = true;\r\n      // Get Account Type\r\n      const account = this.props.account;\r\n      let profileAddress = await factory.methods.getProfile(account).call();\r\n      let profile = Profile(profileAddress);\r\n      let accountType = await profile.methods.getAccountType().call();\r\n      accountType == 0 ? accountType = \"Admin\" : accountType = \"User\"\r\n      if(accountType != \"Admin\") {\r\n        login = false;\r\n      }\r\n\r\n      await this.fetchData();\r\n      // Get Question Deployed\r\n      let questionOptions = [];\r\n      for (let i = 0; i < this.state.deployedQuestionsCount; i++) {\r\n          let question = Question(this.state.deployedQuestions[i])\r\n          let summary = await question.methods.getSummary().call();\r\n          questionOptions.push({\r\n              key: i+1,\r\n              text: summary[0],\r\n              value: i+1\r\n          });\r\n      }\r\n      this.setState( { questionOptions: questionOptions });\r\n      this.setState( { account: account })\r\n      this.setState( { login: login });\r\n      this.setState( { accountType: accountType });\r\n    }\r\n    this.setState( { loadingResource: false });\r\n  }\r\n\r\n  async fetchData() {\r\n    // Retrieve an array of addresses of questions deployed\r\n    let deployedQuestions = await factory.methods.getDeployedQuestions().call();\r\n    let deployedQuestionsCount = deployedQuestions.length;\r\n    let questionAddressTitleBinding = []\r\n    for(let i=0; i<deployedQuestionsCount; i++) {\r\n      let question = Question(deployedQuestions[i]);\r\n      let summary = await question.methods.getSummary().call();\r\n      questionAddressTitleBinding.push({\r\n        questionAddress: deployedQuestions[i],\r\n        title: summary[0],\r\n        flagged: summary[9]\r\n      })\r\n    }\r\n\r\n    // Retrieve an array of EthWallets and Email Addresses\r\n    let ethWallets = await factory.methods.getEthWallets().call();\r\n    let ethWalletEmailAddressBinding = [];\r\n    for (let i=0; i < ethWallets.length; i++) {\r\n      let emailAddress = await credentials.methods.getBinding(ethWallets[i]).call();\r\n      let status = await credentials.methods.emailNotBlackList(emailAddress).call();\r\n      ethWalletEmailAddressBinding.push({\r\n        ethWallet: ethWallets[i],\r\n        emailAddress: emailAddress,\r\n        status: status\r\n      })\r\n    }\r\n\r\n    let tokenPrice = await EthQuestionTokenSale.methods.getTokenPrice().call();\r\n    let tokenBalance = await EthQuestionToken.methods.balanceOf(EthQuestionTokenSale._address).call();\r\n    let etherBalance = await EthQuestionTokenSale.methods.getEtherBalance().call();\r\n    this.setState({\r\n      deployedQuestionsCount: deployedQuestionsCount,\r\n      deployedQuestions: deployedQuestions,\r\n      ethWalletEmailAddressBinding: ethWalletEmailAddressBinding,\r\n      questionAddressTitleBinding: questionAddressTitleBinding,\r\n      tokenPrice: tokenPrice,\r\n      tokenBalance: tokenBalance,\r\n      etherBalance: etherBalance\r\n    })\r\n  }\r\n\r\n  export = async () => {\r\n    // Check that a question must be selected\r\n    if (this.state.questionNumber != null) {\r\n      // Retrieve all the data of selected question\r\n      let questionNumber = Number(this.state.questionNumber) - 1;\r\n      let question = Question(this.state.deployedQuestions[questionNumber])\r\n      let summary = await question.methods.getSummary().call();\r\n      let answerList = await question.methods.getAnswerList().call();\r\n      await exportQuestion(summary, answerList);\r\n    }\r\n  }\r\n\r\n  exportFeedback = async () => {\r\n    // Retrieve all comments\r\n    let comments = await feedback.methods.getComments().call();\r\n    await exportComments(comments);\r\n  }\r\n\r\n  getUserTableData = () => {\r\n    return this.state.ethWalletEmailAddressBinding.map((item, index) => {\r\n      return <Table.Row key={index}>\r\n        <Table.Cell>{item.ethWallet}</Table.Cell>\r\n        <Table.Cell>{item.emailAddress}</Table.Cell>\r\n        <Table.Cell>{item.status ? \"Blacklisted\" : \"Active\"}</Table.Cell>\r\n        <Table.Cell>\r\n        {\r\n          item.status ? <Button onClick={() => this.unblacklist(item.emailAddress)} color=\"green\" size=\"mini\" icon>\r\n            <Icon name=\"add user\" />\r\n          </Button> :\r\n          <Button onClick={() => this.blacklist(item.emailAddress)} color=\"red\" size=\"mini\" icon>\r\n            <Icon name=\"remove user\" />\r\n          </Button>\r\n        }\r\n        </Table.Cell>\r\n        <Table.Cell>\r\n          <Button onClick={() => this.dispense(item.ethWallet)} color=\"green\" size=\"mini\" icon>\r\n            <Icon name=\"ethereum\" />\r\n          </Button>\r\n        </Table.Cell>\r\n      </Table.Row>;\r\n    })\r\n  }\r\n\r\n  blacklist = async (emailAddress) => {\r\n    this.setState({ loading: true, errorMessage: ''});\r\n    try {\r\n      const account = this.state.account;\r\n      await credentials.methods\r\n      .blacklistEmail(emailAddress)\r\n      .send({\r\n          from: account,\r\n          gasPrice: '0'\r\n      });\r\n      Router.pushRoute('/admin'); // Automatic redirect the user.\r\n    } catch (err) {\r\n      if (err.message == \"Returned error: authentication needed: password or unlock\") {\r\n        this.setState({ timeout: true });\r\n      }\r\n      this.setState({ errorMessage: err.message });\r\n      this.setState({ error: true})\r\n    }\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  unblacklist = async (emailAddress) => {\r\n    this.setState({ loading: true, errorMessage: ''});\r\n    try {\r\n      const account = this.state.account;\r\n      await credentials.methods\r\n      .unBlacklistEmail(emailAddress)\r\n      .send({\r\n          from: account,\r\n          gasPrice: '0'\r\n      });\r\n    } catch (err) {\r\n      if (err.message == \"Returned error: authentication needed: password or unlock\") {\r\n        this.setState({ timeout: true });\r\n      }\r\n      this.setState({ errorMessage: err.message });\r\n      this.setState({ error: true})\r\n    }\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  dispense = async (ethWallet) => {\r\n    this.setState({ loading: true, errorMessage: ''});\r\n    try {\r\n      const account = this.state.account;\r\n      await EthQuestionToken.methods\r\n      .transfer(ethWallet, 10e4)\r\n      .send({\r\n          from: account,\r\n          gasPrice: '0'\r\n      });\r\n      // Log transaction\r\n      const profileAddress = await factory.methods.getProfile(ethWallet).call();\r\n      const profile = Profile(profileAddress);\r\n      let logTransaction = logging(\"Awarded 10 EQT(s) for first time user\");\r\n      await profile.methods.logTransaction(logTransaction)\r\n      .send({\r\n          from: account,\r\n          gasPrice: '0'\r\n      });\r\n    } catch (err) {\r\n      if (err.message == \"Returned error: authentication needed: password or unlock\") {\r\n        this.setState({ timeout: true });\r\n      }\r\n      this.setState({ errorMessage: err.message });\r\n      this.setState({ error: true})\r\n    }\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  getQuestionTableData = () => {\r\n    return this.state.questionAddressTitleBinding.map((item, index) => {\r\n      return <Table.Row key={index}>\r\n        <Table.Cell>{item.questionAddress}</Table.Cell>\r\n        <Table.Cell>{item.title}</Table.Cell>\r\n        <Table.Cell>{item.flagged ? \"Flagged\" : \"Active\"}</Table.Cell>\r\n        <Table.Cell>\r\n        {\r\n          item.flagged ? <Button onClick={() => this.undoDeleteQuestion(item.questionAddress)} color=\"green\" size=\"mini\" icon>\r\n            <Icon name=\"undo\" />\r\n          </Button> :\r\n          <Button onClick={() => this.deleteQuestion(item.questionAddress)} color=\"red\" size=\"mini\" icon>\r\n            <Icon name=\"flag\" />\r\n          </Button>\r\n        }\r\n        </Table.Cell>\r\n      </Table.Row>;\r\n    })\r\n  }\r\n\r\n  deleteQuestion = async (questionAddress, title) => {\r\n    this.setState({ loading: true, errorMessage: ''});\r\n    try {\r\n      const account = this.state.account;\r\n      let logTransaction = logging(\"Deleted Question Titled: \" + title);\r\n      await factory.methods\r\n      .deleteQuestion(questionAddress, logTransaction)\r\n      .send({\r\n          from: account,\r\n          gasPrice: '0'\r\n      });\r\n      Router.pushRoute('/admin'); // Automatic redirect the user.\r\n    } catch (err) {\r\n      if (err.message == \"Returned error: authentication needed: password or unlock\") {\r\n        this.setState({ timeout: true });\r\n      }\r\n      this.setState({ errorMessage: err.message });\r\n      this.setState({ error: true})\r\n    }\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  undoDeleteQuestion = async (questionAddress, title) => {\r\n    this.setState({ loading: true, errorMessage: ''});\r\n    try {\r\n      const account = this.state.account;\r\n      let logTransaction = logging(\"Undo Deletion Of Question Titled: \" + title);\r\n      await factory.methods\r\n      .undoDeleteQuestion(questionAddress, logTransaction)\r\n      .send({\r\n          from: account,\r\n          gasPrice: '0'\r\n      });\r\n      Router.pushRoute('/admin'); // Automatic redirect the user.\r\n    } catch (err) {\r\n      if (err.message == \"Returned error: authentication needed: password or unlock\") {\r\n        this.setState({ timeout: true });\r\n      }\r\n      this.setState({ errorMessage: err.message });\r\n      this.setState({ error: true})\r\n    }\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  topUp = async () => {\r\n    this.setState({ loading: true, errorMessage: ''});\r\n    if (checkRewardField(this.state.topUpAmount)) {\r\n      try {\r\n        const account = this.state.account;\r\n        await web3.eth.personal.unlockAccount(account, \"password\", 600);\r\n        await EthQuestionToken.methods\r\n        .transfer(EthQuestionTokenSale._address, this.state.topUpAmount*1e4)\r\n        .send({\r\n            from: account,\r\n            gasPrice: '0'\r\n        });\r\n        // Log transaction\r\n        const profileAddress = await factory.methods.getProfile(account).call();\r\n        const profile = Profile(profileAddress);\r\n        let logTransaction = logging(\"Added \" + this.state.topUpAmount + \" EQT(s) for exchange\");\r\n        await profile.methods.logTransaction(logTransaction)\r\n        .send({\r\n            from: account,\r\n            gasPrice: '0'\r\n        });\r\n        Router.pushRoute('/admin'); // Automatic redirect the user.\r\n      } catch (err) {\r\n        if (err.message == \"Returned error: authentication needed: password or unlock\") {\r\n          this.setState({ timeout: true });\r\n        }\r\n        this.setState({ errorMessage: err.message });\r\n        this.setState({ error: true})\r\n        this.setState({ loading: false})\r\n      }\r\n    } else {\r\n      this.setState({ errorMessage: \"Required Field(s) Empty or Invalid Input\" });\r\n      this.setState({ error: true})\r\n      this.setState({ loading: false });\r\n    }\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  collectEther = async () => {\r\n    this.setState({ loading: true, errorMessage: ''});\r\n    try {\r\n      const account = this.state.account\r\n      const profileAddress = await factory.methods.getProfile(account).call();\r\n      let logTransaction = logging(\"Collect Ether from exchange of EQT(s)\");\r\n      await EthQuestionTokenSale.methods\r\n      .endSale(EthQuestionToken._address, profileAddress, logTransaction)\r\n      .send({\r\n          from: account,\r\n          gasPrice: '0'\r\n      });\r\n      Router.pushRoute('/admin'); // Automatic redirect the user.\r\n    } catch (err) {\r\n      if (err.message == \"Returned error: authentication needed: password or unlock\") {\r\n        this.setState({ timeout: true });\r\n      }\r\n      this.setState({ errorMessage: err.message });\r\n      this.setState({ error: true})\r\n      this.setState({ loading: false})\r\n    }\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  changeTokenPrice = async () => {\r\n    this.setState({ loading: true, errorMessage: ''});\r\n    if (checkRewardField(this.state.newTokenPrice)) {\r\n      try {\r\n        const account = this.state.account\r\n        const profileAddress = await factory.methods.getProfile(account).call();\r\n        let logTransaction = logging(\"Changed Token Price to \" + this.state.newTokenPrice + \" wei per EQT.\");\r\n        await EthQuestionTokenSale.methods\r\n        .changeTokenPrice(this.state.newTokenPrice, profileAddress, logTransaction)\r\n        .send({\r\n            from: account,\r\n            gasPrice: '0'\r\n        });\r\n        Router.pushRoute('/admin'); // Automatic redirect the user.\r\n      } catch (err) {\r\n        if (err.message == \"Returned error: authentication needed: password or unlock\") {\r\n          this.setState({ timeout: true });\r\n        }\r\n        this.setState({ errorMessage: err.message });\r\n        this.setState({ error: true})\r\n        this.setState({ loading: false})\r\n      }\r\n    } else {\r\n      this.setState({ errorMessage: \"Required Field(s) Empty or Invalid Input\" });\r\n      this.setState({ error: true})\r\n      this.setState({ loading: false });\r\n    }\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  toggleUserTableVisibility = () =>\r\n    this.setState((prevState) => ({ userVisible: !prevState.userVisible }))\r\n\r\n  toggleQuestionTableVisibility = () =>\r\n    this.setState((prevState) => ({ questionVisible: !prevState.questionVisible }))\r\n\r\n  toggleTokenManagementVisibility = () =>\r\n      this.setState((prevState) => ({ tokenManagementVisible: !prevState.tokenManagementVisible }))\r\n\r\n  renderExport() {\r\n    return <React.Fragment>\r\n      <Segment raised textAlign='left'>\r\n        <Header as='h2' textAlign='center'>\r\n          Exporting Questions & Answers As PDF\r\n        </Header>\r\n      </Segment>\r\n\r\n      <Divider hidden/>\r\n\r\n      <p style={{fontSize:'16px'}}>\r\n        Select the question to export the question and it's corresponding answers\r\n      </p>\r\n      <Dropdown clearable\r\n                options={this.state.questionOptions}\r\n                selection\r\n                placeholder='Select the question to export'\r\n                value={this.state.questionNumber}\r\n                onChange={ (e, { value }) => this.setState({ questionNumber: value })}/>\r\n      <Button icon labelPosition='left' color=\"red\" onClick={this.export} style={{left:\"20px\"}}>\r\n        <Icon name='download'/>\r\n        Export As PDF\r\n      </Button>\r\n\r\n      <Divider hidden/>\r\n\r\n      <Segment raised textAlign='left'>\r\n        <Header as='h2' textAlign='center'>\r\n          Exporting Feedback\r\n        </Header>\r\n      </Segment>\r\n      <Button icon labelPosition='left' color=\"red\" onClick={this.exportFeedback} style={{left:\"20px\"}}>\r\n        <Icon name='download'/>\r\n        Export As PDF\r\n      </Button>\r\n    </React.Fragment>\r\n  }\r\n\r\n  renderEQTSettings() {\r\n    return <React.Fragment>\r\n      <Segment raised textAlign='center'>\r\n        <b style={{fontSize:\"20px\"}}>EthQuestionTokens (EQT) Exchange Settings</b>\r\n        <Popup\r\n          trigger={\r\n            <Button\r\n              icon={this.state.tokenManagementVisible ? \"minus\" : \"plus\"}\r\n              onClick={this.toggleTokenManagementVisibility}\r\n              floated=\"right\"\r\n              size=\"mini\"\r\n            />\r\n          }\r\n          content={\"Click to expand/close\"}\r\n          inverted/>\r\n      </Segment>\r\n      <Transition visible={this.state.tokenManagementVisible} animation='scale' duration={500}>\r\n      <Grid container={true}>\r\n        <Grid.Row>\r\n          <p style={{fontSize:'16px'}}>\r\n            Balance Available For Exchange: <b>{this.state.tokenBalance*1e-4} EQT(s)</b>\r\n          </p>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Form error={!!this.state.errorMessage} style={{ marginTop: '10px' }}>\r\n            <Form.Field required={true}>\r\n                <label>Top Up Amount</label>\r\n                <Input\r\n                    label=\"EQT(s)\"\r\n                    labelPosition=\"right\"\r\n                    placeholder='Enter EQT Value'\r\n                    value={this.state.topUpAmount}\r\n                    onChange={event => this.setState({ topUpAmount: event.target.value })}\r\n                />\r\n            </Form.Field>\r\n          </Form>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Button icon labelPosition='left' color=\"red\" onClick={this.topUp}>\r\n            <Icon name='dollar sign'/>\r\n            Top Up Balance\r\n          </Button>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <p style={{fontSize:'16px'}}>\r\n            Ether Collected From Exchange: <b>{this.state.etherBalance*1e-18} Ether(s)</b>\r\n          </p>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Button icon labelPosition='left' color=\"red\" onClick={this.collectEther}>\r\n            <Icon name='ethereum'/>\r\n            Collect Ether\r\n          </Button>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <p style={{fontSize:'16px'}}>\r\n            Current Token Price: <b>{this.state.tokenPrice*1e-18} Ether(s)</b>\r\n          </p>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Form error={!!this.state.errorMessage} style={{ marginTop: '10px' }}>\r\n            <Form.Field required={true}>\r\n                <label>Token Price</label>\r\n                <Input\r\n                    label=\"Wei\"\r\n                    labelPosition=\"right\"\r\n                    placeholder='New Token Price'\r\n                    value={this.state.newTokenPrice}\r\n                    onChange={event => this.setState({ newTokenPrice: event.target.value })}\r\n                />\r\n            </Form.Field>\r\n          </Form>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Button icon labelPosition='left' color=\"red\" onClick={this.changeTokenPrice}>\r\n            <Icon name='ethereum'/>\r\n            Change Token Price\r\n          </Button>\r\n        </Grid.Row>\r\n      </Grid>\r\n      </Transition>\r\n      <Divider hidden/>\r\n    </React.Fragment>\r\n  }\r\n\r\n  renderUserManagement() {\r\n    return <React.Fragment>\r\n      <Segment raised textAlign='center'>\r\n        <b style={{fontSize:\"20px\"}}>Users Management</b>\r\n        <Popup\r\n          trigger={\r\n            <Button\r\n              icon={this.state.userVisible ? \"minus\" : \"plus\"}\r\n              onClick={this.toggleUserTableVisibility}\r\n              floated=\"right\"\r\n              size=\"mini\"\r\n            />\r\n          }\r\n          content={\"Click to expand/close\"}\r\n          inverted/>\r\n      </Segment>\r\n\r\n      <Divider hidden/>\r\n\r\n      <Transition visible={this.state.userVisible} animation='scale' duration={500}>\r\n        <Segment>\r\n          <Header><Icon name='user' circular/>Registered Users</Header>\r\n            <Table compact celled stackable>\r\n              <Table.Header fullWidth>\r\n                <Table.Row>\r\n                  <Table.HeaderCell width={2}>Ethereum Wallet</Table.HeaderCell>\r\n                  <Table.HeaderCell width={3}>Email</Table.HeaderCell>\r\n                  <Table.HeaderCell width={2}>Status</Table.HeaderCell>\r\n                  <Table.HeaderCell width={2}>Blacklist</Table.HeaderCell>\r\n                  <Table.HeaderCell width={2}>Dispense Tokens</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>{this.getUserTableData()}</Table.Body>\r\n              <Table.Footer fullWidth>\r\n                <Table.Row>\r\n                  <Table.HeaderCell colSpan={5} />\r\n                </Table.Row>\r\n              </Table.Footer>\r\n            </Table>\r\n        </Segment>\r\n      </Transition>\r\n\r\n      <Divider hidden/>\r\n\r\n      <Segment raised textAlign='center'>\r\n        <b style={{fontSize:\"20px\"}}>Removing Question</b>\r\n        <Popup\r\n          trigger={\r\n            <Button\r\n              icon={this.state.questionVisible ? \"minus\" : \"plus\"}\r\n              onClick={this.toggleQuestionTableVisibility}\r\n              floated=\"right\"\r\n              size=\"mini\"\r\n            />\r\n          }\r\n          content={\"Click to expand/close\"}\r\n          inverted/>\r\n      </Segment>\r\n    </React.Fragment>\r\n  }\r\n\r\n  renderQuestionSettings() {\r\n    return <React.Fragment>\r\n      <Transition visible={this.state.questionVisible} animation='scale' duration={500}>\r\n        <Segment>\r\n          <Header><Icon name='question circle' circular/>Questions Posted</Header>\r\n            <Table compact celled stackable>\r\n              <Table.Header fullWidth>\r\n                <Table.Row>\r\n                  <Table.HeaderCell width={2}>Question Address</Table.HeaderCell>\r\n                  <Table.HeaderCell width={3}>Title</Table.HeaderCell>\r\n                  <Table.HeaderCell width={2}>Status</Table.HeaderCell>\r\n                  <Table.HeaderCell width={2}>Actions</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>{this.getQuestionTableData()}</Table.Body>\r\n              <Table.Footer fullWidth>\r\n                <Table.Row>\r\n                  <Table.HeaderCell colSpan={5} />\r\n                </Table.Row>\r\n              </Table.Footer>\r\n            </Table>\r\n        </Segment>\r\n      </Transition>\r\n    </React.Fragment>\r\n  }\r\n\r\n  render() {\r\n    if (this.state.login) {\r\n      return (\r\n        <Layout accountType={this.state.accountType} page={\"Admin\"}>\r\n          <Container>\r\n            <Divider hidden/>\r\n            {this.renderExport()}\r\n            {this.renderEQTSettings()}\r\n            <Message error header=\"Oops!\" content={this.state.errorMessage} hidden={!this.state.error}/>\r\n            {this.renderUserManagement()}\r\n            <Divider hidden/>\r\n            {this.renderQuestionSettings()}\r\n            <Divider hidden/>\r\n            <LoadingModal trigger={this.state.loading}\r\n                          title={'Performing Admin Actions'}\r\n                          content={\"Please wait patiently as the system performs the action selected. This process might take awhile.\"}\r\n                          loader={\"Loading\"}/>\r\n            </Container>\r\n            <TimeOutModal timeout={this.state.timeout} />\r\n        </Layout>\r\n      );\r\n    } else {\r\n      return (\r\n        <Layout accountType={this.state.accountType}>\r\n          <AccountIssueModal loading={this.state.loadingResource} login={this.state.login} />\r\n        </Layout>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default AdminPage;\r\n","const routes = require('next-routes')();\r\n\r\n// Define a new route mapping\r\n// Arguments: The pattern to look for, which route inside the page directory\r\n// we want to display\r\n\r\nroutes\r\n  .add('/', '/login')\r\n  .add('/home', 'home')\r\n  .add('/about', '/about')\r\n  .add('/userProfile/:value', '/userProfile')\r\n  .add('/feedback', '/feedback')\r\n  .add('/admin', '/admin')\r\n  .add('/new', '/newQuestion')\r\n  .add('/questions/:value', '/showQuestion')\r\n  .add('/search/:value', '/home')\r\n  .add('/leaderboard', '/leaderboard')\r\n  .add('/register', '/register');\r\n\r\nmodule.exports = routes;\r\n","const MobileDetect = require('mobile-detect');\r\nconst { Responsive } = require('semantic-ui-react');\r\n\r\nconst isMobileSSR = (req) => {\r\n    const md = new MobileDetect(req.headers[\"user-agent\"]);\r\n    console.log(md);\r\n    return !!md.mobile();\r\n}\r\n\r\nconst getWidthFactory = (isMobileFromSSR) => () => {\r\n    const isSSR = typeof window === \"undefined\";\r\n    const ssrValue = isMobileFromSSR\r\n      ? Responsive.onlyMobile.maxWidth\r\n      : Responsive.onlyTablet.minWidth;\r\n    return isSSR ? ssrValue : window.innerWidth;\r\n};\r\n\r\n export { isMobileSSR, getWidthFactory };\r\n","import Question from '../ethereum/question';\r\nconst Fuse = require(\"fuse.js\");\r\n\r\n// Validate Email Address Format\r\nconst validate = (emailAddress) => {\r\n  if (emailAddress === \"admin\") {\r\n    return true;\r\n  } else {\r\n    const re = /\\S+@e\\.ntu\\.edu\\.sg$/;\r\n    return re.test(emailAddress);\r\n  }\r\n};\r\n\r\n// Provides common logging method for logging every transactions\r\nconst logging = (message) => {\r\n    let today = new Date();\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\r\n    \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    let date = months[today.getMonth()]+\" \"+today.getDate()+\" \"+today.getFullYear();\r\n    let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    let dateTime = date+' '+time+\": \"+message;\r\n    return dateTime;\r\n};\r\n\r\n// Search Algorithm\r\nasync function search(value, questions) {\r\n    let list = [];\r\n    for (let i = 0; i < questions.length; i++) {\r\n        var summary = await Question(questions[i]).methods.getSummary().call();\r\n        list.push({'address': questions[i], 'title': summary[0], 'content': summary[1], 'tags': summary[8]});\r\n    }\r\n    let options = {\r\n        id: \"address\",\r\n        threshold: 0.1,\r\n        shouldSort: true,\r\n        tokenize: true,\r\n        keys: [{\r\n            name: 'title',\r\n            weight: 0.3\r\n        }, {\r\n            name: 'content',\r\n            weight: 0.4\r\n        }, {\r\n           name:'tags',\r\n           weight: 0.3\r\n        }]\r\n    };\r\n    let fuse = new Fuse(list, options);\r\n    const result = fuse.search(value);\r\n    return result;\r\n}\r\n\r\n// Checks required fields are filled up\r\nconst checkFieldEmpty = (field) => {\r\n  return field === \"\" ? false : true;\r\n}\r\n\r\n// Checks time-related fields are filled up properly\r\nconst checkTimeField = (field) => {\r\n  return field > 0 ? true : false;\r\n}\r\n\r\n// Checks ETQ fields are filled up properly\r\nconst checkRewardField = (field) => {\r\n  return field >= 1 ? true : false;\r\n}\r\n\r\n// Convert to lower case letters in a string\r\nconst lowerCase = (item) => {\r\n  for (let i = 0; i<item.length; i++) {\r\n    item[i] = item[i].toLowerCase();\r\n  }\r\n  return item;\r\n}\r\n\r\nconst sortingQuestions = (summary, sortBy) => {\r\n  switch(sortBy) {\r\n    case 0:\r\n      summary.sort(function(a, b) {\r\n        return a[4] - b[4];\r\n      });\r\n      break;\r\n    case 1:\r\n      summary.sort(function(a, b) {\r\n        return b[4] - a[4];\r\n      });\r\n      break;\r\n    case 2:\r\n      summary.sort(function(a, b) {\r\n        return a[10] - b[10];\r\n      });\r\n      break;\r\n    case 3:\r\n      summary.sort(function(a, b) {\r\n        return b[10] - a[10];\r\n      });\r\n      break;\r\n    case 4:\r\n      summary.sort(function(a, b) {\r\n        return a[2] - b[2];\r\n      });\r\n      break;\r\n    case 5:\r\n      summary.sort(function(a, b) {\r\n        return b[2] - a[2];\r\n      });\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return summary;\r\n}\r\n\r\nconst sortingAnswers = (answers, sorted) => {\r\n  if (sorted) {\r\n    answers.sort(function(a, b) {\r\n      return a[4] - b[4];\r\n    });\r\n  } else {\r\n    answers.sort(function(a, b) {\r\n      return b[4] - a[4];\r\n    });\r\n  }\r\n  return answers;\r\n}\r\n\r\nexport { validate, logging, search, checkFieldEmpty, checkTimeField, checkRewardField, lowerCase, sortingQuestions, sortingAnswers };\r\n","// Ensure jsPDF does not import on Server Side\r\nlet jsPDF = null;\r\nif (typeof window !== \"undefined\") {\r\n  import(\"jspdf\").then(module => {\r\n    jsPDF = module.default;\r\n  });\r\n}\r\n\r\nconst exportQuestion = async(summary, answerList) => {\r\n  // Initialise the PDF document to write\r\n  let lMargin=15; //left margin in mm\r\n  let rMargin=15; //right margin in mm\r\n  let pdfInMM=210;  // width of A4 in mm\r\n  let doc = new jsPDF(\"p\",\"mm\",\"a4\");\r\n  let yPos = 55;\r\n  let maxYPos = 280;\r\n\r\n  // Question Information\r\n  let questionTitle = \"Question Title: \" + summary[0];\r\n  let questionDescription = \"Question Description: \" + summary[1];\r\n  let reward = \"Reward: \" + summary[2]*1e-4;\r\n  doc.setFontSize(18)\r\n  doc.text(lMargin, 45, \"Question Information\");\r\n  doc.setLineWidth(0.2)\r\n  doc.line(lMargin, 47, 190, 47)\r\n  let lineHeight = doc.getLineHeight(questionDescription) / doc.internal.scaleFactor\r\n\r\n  // Question Title\r\n  let splittedText = doc.splitTextToSize(questionTitle, (pdfInMM-lMargin-rMargin));\r\n  doc.setFontSize(13)\r\n  doc.text(lMargin, yPos, splittedText);\r\n\r\n  // Question Description\r\n  let lines = splittedText.length\r\n  lineHeight = doc.getLineHeight(splittedText) / doc.internal.scaleFactor\r\n  let blockHeight = lines * lineHeight\r\n  yPos += blockHeight\r\n  splittedText = doc.splitTextToSize(questionDescription, (pdfInMM-lMargin-rMargin));\r\n  doc.text(lMargin, yPos, splittedText);\r\n\r\n  // Question Reward\r\n  lines = splittedText.length\r\n  lineHeight = doc.getLineHeight(splittedText) / doc.internal.scaleFactor\r\n  blockHeight = lines * lineHeight\r\n  yPos += blockHeight\r\n  splittedText = doc.splitTextToSize(reward, (pdfInMM-lMargin-rMargin));\r\n  doc.text(lMargin, yPos, splittedText);\r\n\r\n  // Question's Images\r\n  lines = splittedText.length\r\n  blockHeight = lines * lineHeight\r\n  yPos += lineHeight\r\n  splittedText = doc.splitTextToSize(\"Link(s) of Image(s) Uploaded For Question:\", (pdfInMM-lMargin-rMargin));\r\n  doc.setFontType('bold')\r\n  doc.text(lMargin, yPos, splittedText);\r\n\r\n  if (summary[5].length != 0) {\r\n      summary[5].map((imageHash, index) => {\r\n        let link = \"https://ipfs.io/ipfs/\"+imageHash\r\n        lines = splittedText.length\r\n        blockHeight = lines * lineHeight\r\n        yPos += lineHeight\r\n        lines = doc.splitTextToSize(link, (pdfInMM-lMargin-rMargin));\r\n        doc.setFontSize(13)\r\n        doc.setFontType('normal')\r\n        doc.text(lMargin,yPos,lines);\r\n      })\r\n  }\r\n\r\n  // Answer Header\r\n  lines = splittedText.length\r\n  blockHeight = lines * lineHeight\r\n  yPos += lineHeight * 2\r\n  splittedText = doc.splitTextToSize(\"Answer(s) Provided\", (pdfInMM-lMargin-rMargin));\r\n  doc.setFontSize(18)\r\n  doc.setFontType('normal')\r\n  doc.text(lMargin, yPos, splittedText);\r\n  lines = splittedText.length\r\n  blockHeight = lines * lineHeight\r\n  yPos += lineHeight * 0.3\r\n  doc.setLineWidth(0.2)\r\n  doc.line(lMargin, yPos, 190, yPos)\r\n\r\n  // Answer Body\r\n  if (answerList.length != 0) {\r\n      answerList.map((answer, index) => {\r\n        let answerAddress = answer[2];\r\n        let content = answer[0];\r\n        let numOfApprovals = answer[4];\r\n        let rewarded = answer[1]\r\n        let answerLine = answerAddress + \": \" + content;\r\n        let approvalLine = \"Number of Approvals: \" + numOfApprovals;\r\n        let rewardedLine = \"Rewarded: \" + rewarded;\r\n\r\n        // Answers\r\n        lineHeight = doc.getLineHeight(splittedText) / doc.internal.scaleFactor\r\n        lines = splittedText.length\r\n        blockHeight = lines * lineHeight\r\n        if (yPos > maxYPos) {\r\n          doc.addPage()\r\n          yPos = 40;\r\n        } else {\r\n          yPos += blockHeight\r\n        }\r\n        splittedText = doc.splitTextToSize(answerLine, (pdfInMM-lMargin-rMargin));\r\n        doc.setFontSize(12)\r\n        doc.setFontType('normal')\r\n        doc.text(lMargin, yPos, splittedText);\r\n\r\n        if (answer[8].length != 0) {\r\n          answer[8].map((imageHash, index) => {\r\n            let link = \"https://ipfs.io/ipfs/\"+imageHash\r\n            lineHeight = doc.getLineHeight(splittedText) / doc.internal.scaleFactor\r\n            lines = splittedText.length\r\n            blockHeight = lines * lineHeight\r\n            yPos += lineHeight\r\n            splittedText = doc.splitTextToSize(link, (pdfInMM-lMargin-rMargin));\r\n            doc.text(lMargin,yPos,splittedText);\r\n          })\r\n        }\r\n\r\n        // Number Of Approvals\r\n        lineHeight = doc.getLineHeight(splittedText) / doc.internal.scaleFactor\r\n        lines = splittedText.length\r\n        blockHeight = lines * lineHeight\r\n        if (yPos > maxYPos) {\r\n          doc.addPage()\r\n          yPos = 40;\r\n        } else {\r\n          yPos += blockHeight\r\n        }\r\n        splittedText = doc.splitTextToSize(approvalLine, (pdfInMM-lMargin-rMargin));\r\n        doc.text(lMargin, yPos, splittedText);\r\n\r\n        // Rewarded Or Not\r\n        lineHeight = doc.getLineHeight(splittedText) / doc.internal.scaleFactor\r\n        lines = splittedText.length\r\n        blockHeight = lines * lineHeight\r\n        if (yPos > maxYPos) {\r\n          doc.addPage()\r\n          yPos = 40;\r\n        } else {\r\n          yPos += blockHeight\r\n        }\r\n        splittedText = doc.splitTextToSize(rewardedLine, (pdfInMM-lMargin-rMargin));\r\n        doc.text(lMargin, yPos, splittedText);\r\n\r\n        yPos += lineHeight * 0.3\r\n        doc.setLineWidth(0.1)\r\n        doc.line(lMargin, yPos, 190, yPos)\r\n      })\r\n  }\r\n  let pageCount = doc.internal.getNumberOfPages();\r\n  doc = createFooter(doc, pageCount);\r\n  doc = createHeader(doc, pageCount);\r\n  doc.save(\"EthQuestion_\" + summary[0] + \".pdf\");\r\n}\r\n\r\nconst exportComments = async (comments) => {\r\n  // Initialise the PDF document to write\r\n  let lMargin=15; //left margin in mm\r\n  let rMargin=15; //right margin in mm\r\n  let pdfInMM=210;  // width of A4 in mm\r\n  let doc = new jsPDF(\"p\",\"mm\",\"a4\");\r\n  let yPos = 55;\r\n  let maxYPos = 230;\r\n\r\n  // Comments Header\r\n  doc.setFontSize(18)\r\n  let commentHeader = \"Comment(s) Provided By Users\"\r\n  let splittedText = doc.splitTextToSize(commentHeader, (pdfInMM-lMargin-rMargin));\r\n  doc.text(lMargin, 45, splittedText);\r\n  doc.setLineWidth(0.2)\r\n  doc.line(lMargin, 47, 190, 47)\r\n\r\n  // Comments Body\r\n  if (comments.length != 0) {\r\n      comments.map((comment, index) => {\r\n        let lineHeight = doc.getLineHeight(splittedText) / doc.internal.scaleFactor\r\n        let lines = splittedText.length\r\n        let blockHeight = lines * lineHeight\r\n        if (yPos > maxYPos) {\r\n          doc.addPage()\r\n          yPos = 40;\r\n        } else {\r\n          yPos += blockHeight\r\n        }\r\n        splittedText = doc.splitTextToSize(comment, (pdfInMM-lMargin-rMargin));\r\n        doc.setFontSize(12)\r\n        doc.setFontType('normal')\r\n        doc.text(lMargin, yPos, splittedText);\r\n      })\r\n  }\r\n  let pageCount = doc.internal.getNumberOfPages();\r\n  doc = createFooter(doc, pageCount);\r\n  doc = createHeader(doc, pageCount);\r\n  doc.save(\"EthQuestion_Comments.pdf\");\r\n\r\n}\r\n\r\nconst createHeader = (document, pageCount) => {\r\n  for(let i = 1; i <= pageCount; i++) {\r\n    if (i == 1) {\r\n      document.setPage(i)\r\n      document.setTextColor(0)\r\n      document.setFontSize(24)\r\n      document.text(15, 30, \"Ethereum Question & Answering System\");\r\n      document.setLineWidth(0.5)\r\n      document.line(15, 33, 190, 33)\r\n    } else {\r\n      document.setPage(i)\r\n      document.setTextColor(150)\r\n      document.setFontSize(13)\r\n      document.text(105, 30, \"Ethereum Question & Answering System\");\r\n      document.setLineWidth(0.3)\r\n      document.line(15, 33, 190, 33)\r\n    }\r\n  }\r\n  return document\r\n}\r\n\r\nconst createFooter = (document, pageCount) => {\r\n  for(let i = 1; i <= pageCount; i++) {\r\n    document.setPage(i)\r\n    document.setFontSize(13)\r\n    document.setTextColor(150)\r\n    document.text(170, 285, \"Page \" + document.internal.getCurrentPageInfo().pageNumber + \" of \" + pageCount)\r\n  }\r\n  return document\r\n}\r\n\r\nexport { exportQuestion, exportComments }\r\n","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","module.exports = require(\"fuse.js\");","module.exports = require(\"jspdf\");","module.exports = require(\"mobile-detect\");","module.exports = require(\"next-cookies\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"regenerator-runtime\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"web3\");"],"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CA;AAIA;AACA;AACA;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AACA;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AACA;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AACA;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/BA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpCA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAqHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AALA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AACA;AADA;AAOA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAtHA;AAAA;AAAA;AAAA;AAAA;AAiIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlIA;AAwIA;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;AACA;AACA;AACA;AACA;AACA;AArBA;AAFA;AAyBA;AACA;;;;;;AAKA;;;;;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;AACA;AAAA;AAAA;;;;AAGA;AACA;AAAA;;;;;AACA;AACA;AACA;;AACA;AACA;;AADA;AACA;;AACA;AACA;;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;;AACA;AACA;;AAAA;AACA;AACA;AACA;;AADA;;;;;AACA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AAHA;AACA;;AAJA;;;;;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;;AADA;AACA;AACA;AACA;AACA;;AADA;;;;;AACA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AAHA;AACA;;AAJA;;;;;;AAWA;AACA;;AADA;AACA;AACA;AACA;;AADA;;;;;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AAHA;AACA;;AAJA;;;;;;AAUA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;;;;;;;;;;;;;;;;;AAgaA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AAAA;AAOA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAVA;AAaA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AAAA;AAOA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;;;;;;AA9lBA;;;;;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AA9BA;AACA;AA4nBA;;;;;;;;;;;;;;ACjpBA;AAGA;AACA;AACA;AACA;AAAA;AAaA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AANA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA2BA;AACA;AACA;;;;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAEA;AAFA;AAAA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAXA;AAgBA;AACA;AAvBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAhCA;AACA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC7HA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AApJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACtOA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}