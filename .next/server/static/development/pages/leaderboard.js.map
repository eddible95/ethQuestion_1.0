{"version":3,"file":"static\\development\\pages\\leaderboard.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/AccountIssueModal.js","webpack:///./components/DesktopHeader.js","webpack:///./components/Footer.js","webpack:///./components/Layout.js","webpack:///./components/MobileHeader.js","webpack:///./ethereum/factory.js","webpack:///./ethereum/profile.js","webpack:///./ethereum/web3.js","webpack:///./pages/leaderboard.js","webpack:///./routes.js","webpack:///./utils/device.js","webpack:///external \"lodash\"","webpack:///external \"mobile-detect\"","webpack:///external \"next-cookies\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"web3\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React, { Component } from 'react';\r\nimport { Modal, Header, Button, Loader } from 'semantic-ui-react';\r\nimport {Link, Router} from '../routes';\r\n\r\nclass AccountIssueModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Modal open={this.props.loading} basic size='small'>\r\n          <Header icon='ethereum' content='Loading Resources' />\r\n          <Modal.Content>\r\n            <Loader active inline=\"centered\">\r\n              Fetching Data From Blockchain\r\n            </Loader>\r\n          </Modal.Content>\r\n        </Modal>\r\n        <Modal open={!this.props.login && !this.props.loading} basic size='small'>\r\n          <Header icon='ethereum' content='Account Issue' />\r\n          <Modal.Content>\r\n            <p>\r\n              You are facing one of the following issues:\r\n            </p>\r\n            <p>\r\n              (1) Banned from accessing the platform.\r\n            </p>\r\n            <p>\r\n              (2) Currently not registered to access the platform. Please have your account registered.\r\n            </p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color='green' inverted attached='bottom' onClick={() => {\r\n              Router.pushRoute('/')}\r\n            }>\r\n              Register For Account\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountIssueModal;\r\n","import React, { Component } from 'react';\r\nimport { Menu, Icon, Input, Segment, Sticky, Container, Button, Dropdown, Grid } from 'semantic-ui-react';\r\nimport { Link, Router } from '../routes';\r\n\r\nclass DesktopHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value:''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.keyPress = this.keyPress.bind(this);\r\n   }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value });\r\n   }\r\n\r\n  keyPress(e){\r\n    if(e.keyCode == 13){\r\n     if (this.state.value!='')\r\n         Router.pushRoute(`/${'search/'+encodeURIComponent(this.state.value)}`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Segment inverted style={{marginBottom:'0px', fontSize:'20px', borderRadius:'0px', border:'0px', paddingRight:'5%'}} as='h1' textAlign='center'>\r\n          <Icon name='ethereum' />Block-Chain Based Question Answering System\r\n          <Button compact floated='right' inverted color='orange' onClick={()=>{Router.pushRoute('/')}}><Icon name='user' circular size='small'/>Log Out</Button>\r\n        </Segment>\r\n        <Sticky context={this.props.contextRef}>\r\n            <Menu inverted size='massive' fluid style={{marginTop:'0px', borderRadius:'0px', border:'0px', paddingLeft:'5%', paddingRight:'5%'}}>\r\n              <Link route=\"/home\">\r\n                <Menu.Item\r\n                  name='Home'\r\n                  icon='home'\r\n                  active = {this.props.page === 'Home'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route=\"/about\">\r\n                <Menu.Item\r\n                  name='About'\r\n                  icon='question'\r\n                  active = {this.props.page === 'About'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route='/userProfile'>\r\n                <Menu.Item\r\n                  name='Profile'\r\n                  icon='user'\r\n                  active = {this.props.page === 'Profile'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route=\"/new\">\r\n                <Menu.Item\r\n                  name='Ask Question'\r\n                  icon='pencil alternate'\r\n                  active = {this.props.page === 'New'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route=\"/feedback\">\r\n                <Menu.Item\r\n                  name='Feedback'\r\n                  icon='comment'\r\n                  active = {this.props.page === 'Feedback'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route=\"/leaderboard\">\r\n                <Menu.Item\r\n                  name='Leaderboard'\r\n                  icon='trophy'\r\n                  active = {this.props.page === 'Leaderboard'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              {this.props.accountType == \"Admin\" ? <Link route=\"/admin\">\r\n                                                    <Menu.Item\r\n                                                      name='Admin Options'\r\n                                                      icon='settings'\r\n                                                      active = {this.props.page === 'Admin'}\r\n                                                      color='orange'\r\n                                                      />\r\n                                                   </Link>\r\n                                                 : null }\r\n              <Menu.Menu position=\"right\">\r\n                <Menu.Item>\r\n                  <Input icon={<Icon name=\"search\" link onClick={() => {\r\n                   if (this.state.value!='') {\r\n                     Router.pushRoute(`/${'search/'+encodeURIComponent(this.state.value)}`);\r\n                   }\r\n                  }}/>}\r\n                  placeholder=\"Search...\"\r\n                  onKeyDown={this.keyPress}\r\n                  onChange={this.handleChange}\r\n                   />\r\n                </Menu.Item>\r\n              </Menu.Menu>\r\n            </Menu>\r\n        </Sticky>\r\n        {this.props.children}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DesktopHeader;\r\n","import React, { Component } from 'react';\r\nimport { Container, Segment, Icon, Header } from 'semantic-ui-react';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <Segment inverted vertical >\r\n        <Header as='h4' inverted textAlign='center'>\r\n          <Icon name='ethereum'/>Block-Chain Based Question Answering System\r\n        </Header>\r\n        <p style={{textAlign:\"center\"}}>\r\n          SCSE Final Year Project | Powered By Ethereum | Created Using React JS\r\n        </p>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import Head from 'next/head';\r\nimport React, { Component } from 'react';\r\nimport MobileDetect from 'mobile-detect';\r\nimport { Container, Responsive, Sidebar, Divider } from 'semantic-ui-react';\r\nimport { getWidthFactory } from '../utils/device';\r\nimport DesktopHeader from './DesktopHeader';\r\nimport MobileHeader from \"./MobileHeader\"\r\nimport Footer from './Footer';\r\n\r\nclass DesktopContainer extends Component {\r\n  state = {}\r\n\r\n  render() {\r\n    const { accountType, page, getWidth, contextRef, children } = this.props;\r\n    return(\r\n      <Responsive fireOnMount getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\r\n        <DesktopHeader accountType={accountType} contextRef={contextRef} page={page}>\r\n          <Container style={{minHeight:\"100vh\", width:\"100vw\"}}>\r\n            {children}\r\n          </Container>\r\n        </DesktopHeader>\r\n      </Responsive>\r\n    );\r\n  }\r\n}\r\n\r\nclass MobileContainer extends Component {\r\n  state = { sidebarOpened: false };\r\n\r\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\r\n\r\n  handleToggle = () => this.setState({ sidebarOpened: true })\r\n\r\n  render() {\r\n    const { accountType, getWidth, contextRef, children } = this.props;\r\n\r\n    return(\r\n      <Responsive fireOnMount as={Sidebar.Pushable} getWidth={getWidth} maxWidth={Responsive.onlyMobile.maxWidth}>\r\n          <MobileHeader contextRef={contextRef}\r\n                      accountType={accountType}\r\n                      handleSidebarHide={this.handleSidebarHide}\r\n                      handleToggle={this.handleToggle}\r\n                      sidebarOpened={this.state.sidebarOpened}>\r\n              <Container style={{ paddingTop: \"10em\", minHeight:\"100vh\", width:\"100vw\"}}>\r\n                {children}\r\n              </Container>\r\n          </MobileHeader>\r\n      </Responsive>\r\n    );\r\n  }\r\n}\r\n\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  };\r\n  static async getInitialProps(props) {\r\n    let isMobileFromSSR = false;\r\n    if(props.req){\r\n        const device = props.req.headers[\"user-agent\"];\r\n        const md = new MobileDetect(device);\r\n        isMobileFromSSR = !!md.mobile();\r\n    }\r\n    return { isMobileFromSSR };\r\n  }\r\n  handleContextRef = contextRef => this.setState({ contextRef });\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Head>\r\n          <link\r\n              rel=\"stylesheet\"\r\n              href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\r\n          />\r\n          <link rel=\"shortcut icon\" href=\"/static/ethIcon.ico\" />\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n          <title>Block-Chain Based Question Answering System</title>\r\n        </Head>\r\n        <div ref={this.handleContextRef}>\r\n          <DesktopContainer accountType={this.props.accountType} getWidth={getWidthFactory(this.props.isMobileFromSSR)} page={this.props.page}>\r\n            {this.props.children}\r\n          </DesktopContainer>\r\n\r\n          <MobileContainer accountType={this.props.accountType} getWidth={getWidthFactory(this.props.isMobileFromSSR)}>\r\n            {this.props.children}\r\n          </MobileContainer>\r\n        </div>\r\n        <Divider hidden/>\r\n        <Footer/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\r\nimport { Menu, Segment, Container, Icon, Header, Grid,\r\n   Input, Button, Sticky, Rail, Sidebar } from 'semantic-ui-react';\r\nimport { Link, Router } from '../routes';\r\n\r\nclass HeaderMobile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={value:''}\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.keyPress = this.keyPress.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n      this.setState({ value: e.target.value });\r\n   }\r\n\r\n  keyPress(e){\r\n      if(e.keyCode == 13){\r\n         if (this.state.value!='')\r\n              Router.pushRoute(`/${'search/'+encodeURIComponent(this.state.value)}`);\r\n      }\r\n  }\r\n\r\n  renderSideBar() {\r\n    const {\r\n        handleSidebarHide,\r\n        handleToggle,\r\n        sidebarOpened,\r\n        children\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Sidebar.Pushable>\r\n          <Sidebar\r\n            as={Menu}\r\n            animation='push'\r\n            inverted\r\n            onHide={handleSidebarHide}\r\n            vertical\r\n            visible={sidebarOpened}\r\n            width='thin'\r\n            icon='labeled'>\r\n            <Menu.Item header>\r\n              <h3>Question Answering System</h3>\r\n            </Menu.Item>\r\n\r\n            <Link route=\"/home\">\r\n              <a className = \"item\">\r\n                <Icon name='home'/>\r\n                Home\r\n              </a>\r\n            </Link>\r\n            <Link route=\"/about\">\r\n              <a className = \"item\">\r\n                <Icon name='question'/>\r\n                About\r\n              </a>\r\n            </Link>\r\n            <Link route=\"/userProfile\">\r\n              <a className = \"item\">\r\n                <Icon name='user'/>\r\n                Profile\r\n              </a>\r\n            </Link>\r\n            <Link route=\"/new\">\r\n              <a className = \"item\">\r\n                <Icon name='pencil alternate'/>\r\n                Ask Question\r\n              </a>\r\n            </Link>\r\n            <Link route=\"/feedback\">\r\n              <a className = \"item\">\r\n                <Icon name='comment'/>\r\n                Feedback\r\n              </a>\r\n            </Link>\r\n            <Link route=\"/leaderboard\">\r\n              <a className = \"item\">\r\n                <Icon name='trophy'/>\r\n                Leaderboard\r\n              </a>\r\n            </Link>\r\n            {this.props.accountType == \"Admin\" ? <Link route=\"/admin\">\r\n                                                  <a className = \"item\">\r\n                                                    <Icon name='settings'/>\r\n                                                    Admin Settings\r\n                                                  </a>\r\n                                                 </Link>\r\n                                               : null }\r\n             <Link route=\"/login\">\r\n               <a className = \"item\">\r\n                 <Icon name='power off'/>\r\n                 Log Out\r\n               </a>\r\n             </Link>\r\n          </Sidebar>\r\n\r\n          <Sidebar.Pusher dimmed={sidebarOpened} style={{minHeight: '100vh'}}>\r\n            <Rail\r\n              internal\r\n              position=\"left\"\r\n              attached\r\n              style={{ top: \"auto\", height: \"auto\", width: \"100%\" }}>\r\n              <Sticky context={this.props.contextRef}>\r\n                <Segment inverted vertical style={{ minHeight: 50 , padding: '1em 0em 0em 0em', textAlign: 'flex-end'}}>\r\n                  <Menu inverted fixed='top' size='large' secondary>\r\n                    <Container>\r\n                      <Menu.Item onClick={handleToggle}>\r\n                        <Icon name='sidebar' />\r\n                      </Menu.Item>\r\n                      <Menu.Item header style={{padding: 0}}>\r\n                        <Icon name='ethereum' style={{float: 'left'}}/>\r\n                        Ethereum Question Answering System\r\n                      </Menu.Item>\r\n                    </Container>\r\n                  </Menu>\r\n                  <Container style={{marginTop: '40px'}}>\r\n                    <Grid inverted style={{padding: '0em 0.7em 0em 1.5em'}} verticalAlign='bottom'>\r\n                      <Grid.Row>\r\n                        <Menu secondary inverted fluid>\r\n                          <Menu.Item>\r\n                            <Input icon={<Icon name=\"search\" link onClick={() => {\r\n                             if (this.state.value!='') {\r\n                               Router.pushRoute(`/${'search/'+encodeURIComponent(this.state.value)}`);\r\n                             }\r\n                            }}/>}\r\n                            placeholder=\"Search...\"\r\n                            onKeyDown={this.keyPress}\r\n                            onChange={this.handleChange}\r\n                             />\r\n                          </Menu.Item>\r\n                          <Button compact floated='right' inverted color='orange' onClick={()=>{Router.pushRoute('/new')}}>\r\n                            <Icon name='pencil alternate' circular size='small'/>Ask Question\r\n                          </Button>\r\n                        </Menu>\r\n                      </Grid.Row>\r\n                      </Grid>\r\n                    </Container>\r\n                  </Segment>\r\n                </Sticky>\r\n              </Rail>\r\n              {children}\r\n          </Sidebar.Pusher>\r\n        </Sidebar.Pushable>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <React.Fragment>\r\n      {this.renderSideBar()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderMobile;\r\n","// The idea: If we need to get access to our deployed factory instance from somewhere else in our app,\r\n//     we won't have to go through the entire process of importing web3, and the interface and get the address and etc.\r\n//     Instead, we can import this factory.js file.\r\n\r\n// Import the copy of web3 that we created (The instance that is created there).\r\nimport web3 from './web3';\r\n\r\n// Import the compiled contract that is placed in the build directory.\r\n// Any time that we want to tell web3 about an already deployed contract, we have to give web3 that contract's interface (ABI).\r\n// The ABI is defined inside the PostFactory.JSON file.\r\nimport QuestionFactory from './build/QuestionFactory.json';\r\n\r\n// Create the contract instance that refers to the specific address that we deployed the contract to\r\n// and we we'll export it from this file.\r\n// So, if we need excess to our deployed factory - We can import factory.js.\r\n// arguments: Our contract ABI, The address that we deployed our factory to\r\nlet instance;\r\nif (typeof web3 !== 'undefined') {\r\n  instance = new web3.eth.Contract(\r\n      JSON.parse(QuestionFactory.interface),\r\n      \"0xc82918Bd8970D2774343e239437B2A40E2ffDA23\"\r\n  );\r\n}\r\n\r\nexport default instance;\r\n","import web3 from './web3';\r\nimport Profile from './build/Profile.json';\r\n\r\nexport default (address) => {\r\n  return new web3.eth.Contract(\r\n    // The interface from the build/Profile:\r\n    JSON.parse(Profile.interface), address\r\n  );\r\n} ;\r\n","// Imports Web3 API\r\nimport Web3 from 'web3';\r\n\r\nlet web3;\r\nconst provider = new Web3.providers.HttpProvider('http://192.168.86.248:8543');\r\nweb3 = new Web3(provider);\r\n\r\nexport default web3;\r\n","import React, { Component } from 'react';\r\nimport AccountIssueModal from '../components/AccountIssueModal';\r\nimport _ from 'lodash';\r\nimport { Segment, Container, Divider, Header, Modal,\r\n  Button, Loader, Icon, Table } from 'semantic-ui-react';\r\nimport Layout from '../components/Layout';\r\nimport web3 from '../ethereum/web3';\r\nimport factory from '../ethereum/factory';\r\nimport Profile from '../ethereum/profile';\r\nimport cookies from 'next-cookies';\r\n\r\nclass LeaderboardPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n      loading: true,\r\n      accountType: null,\r\n      column: null,\r\n      direction: null,\r\n      leaderboardData: []\r\n    };\r\n  }\r\n\r\n  static async getInitialProps(props) {\r\n    return { isLogin: cookies(props).login || '' , account: cookies(props).wallet || '' };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (typeof web3 === 'undefined') {\r\n      this.setState({ loading: false })\r\n      return\r\n    }\r\n    let login = false;\r\n    if (this.props.isLogin) {\r\n      login = true;\r\n      // Get Account Type\r\n      let profileAddress = await factory.methods.getProfile(this.props.account).call();\r\n      let profile = Profile(profileAddress);\r\n      let accountType = await profile.methods.getAccountType().call();\r\n      accountType == 0 ? accountType = \"Admin\" : accountType = \"User\"\r\n\r\n      // Retireve an array of addresses of ethWallets registered\r\n      let ethWallet = await factory.methods.getEthWallets().call();\r\n      let accountPointMapping = [];\r\n\r\n      for (let i=0; i<ethWallet.length; i++) {\r\n        profileAddress = await factory.methods.getProfile(ethWallet[i]).call();\r\n        profile = Profile(profileAddress);\r\n        let points = await profile.methods.getPoints().call();\r\n        accountPointMapping.push({\r\n          account: ethWallet[i],\r\n          points: parseInt(points)\r\n        });\r\n      }\r\n      // Set the states required for the Leaderboard and ensure it is descending by default\r\n      this.setState( { leaderboardData: _.sortBy(accountPointMapping, ['points']).reverse() });\r\n      this.setState( { login: login });\r\n      this.setState( { accountType: accountType });\r\n    }\r\n    this.setState( { loading: false });\r\n  }\r\n\r\n  // Function to handle the sorting of leaderboard\r\n  handleSort = (clickedColumn) => () => {\r\n    const { column, leaderboardData, direction } = this.state\r\n    if (column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        leaderboardData: _.sortBy(leaderboardData, [clickedColumn]),\r\n        direction: 'ascending',\r\n      })\r\n      return\r\n    }\r\n    this.setState({\r\n      leaderboardData: leaderboardData.reverse(),\r\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\r\n    })\r\n  }\r\n\r\n  renderLeaderBoard() {\r\n    const { column, data, direction } = this.state\r\n    return (\r\n      <Container>\r\n        <Table basic='very' celled sortable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell textAlign='center'>Account</Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                textAlign='center'\r\n                sorted={column === 'points' ? direction : null}\r\n                onClick={this.handleSort('points')}>\r\n              Point(s)\r\n              </Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {this.renderUserList()}\r\n          </Table.Body>\r\n        </Table>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  renderUserList() {\r\n    return this.state.leaderboardData.map((item, index) => {\r\n      return (\r\n        <Table.Row key={index}>\r\n          <Table.Cell textAlign='center'>\r\n            {item.account}\r\n          </Table.Cell>\r\n          <Table.Cell textAlign='center'>\r\n            {item.points}\r\n          </Table.Cell>\r\n        </Table.Row>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.login) {\r\n      return (\r\n        <Layout accountType={this.state.accountType} page={'Leaderboard'}>\r\n          <Container>\r\n            <Divider hidden/>\r\n            <Segment raised textAlign='left'>\r\n              <Header as='h2' textAlign='center'>\r\n                <Icon name=\"chess king\"/>Current Leaderboard Standings\r\n              </Header>\r\n            </Segment>\r\n            {this.renderLeaderBoard()}\r\n            <Divider />\r\n            <p style={{fontSize:'20px'}}>\r\n              <Icon name=\"question\"/>How are points awarded?\r\n            </p>\r\n            <Divider />\r\n            <p style={{fontSize:'16px'}}><b>When you ask a question:</b> 5 Points</p>\r\n            <p style={{fontSize:'16px'}}><b>When you are rewarded for your answer:</b> 4 Points</p>\r\n            <p style={{fontSize:'16px'}}><b>When you submit an answer:</b> 2 Points</p>\r\n            <p style={{fontSize:'16px'}}><b>When the answer you approved gets awarded:</b> 2 Points</p>\r\n            <p style={{fontSize:'16px'}}><b>When you approve an answer:</b> 1 Point</p>\r\n            <Divider />\r\n            <p style={{fontSize:'20px'}}>\r\n              <Icon name=\"question\"/>What can I do with my points?\r\n            </p>\r\n            <Divider />\r\n            <p style={{fontSize:'16px'}}>Upon reaching <b>100 points</b>, you can exchange for <b>5 EQTs</b></p>\r\n            <Divider />\r\n            <p style={{fontSize:'20px'}}>\r\n              <Icon name=\"question\"/>What is EthQuestionToken (EQT)\r\n            </p>\r\n            <Divider />\r\n            <p style={{fontSize:'16px'}}>\r\n              Cryptocurrency that is used within the Question Answering System and can be exchanged using Ether(s).\r\n              Each user is given <b>10 EQTs</b> upon signing up. User can be rewarded additional EQTs by providing answers with the highest approvals\r\n              for each question.\r\n            </p>\r\n          </Container>\r\n        </Layout>\r\n      )\r\n    } else {\r\n      return (\r\n        <Layout accountType={this.state.accountType}>\r\n          <AccountIssueModal loading={this.state.loading} login={this.state.login} />\r\n        </Layout>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default LeaderboardPage;\r\n","const routes = require('next-routes')();\r\n\r\n// Define a new route mapping\r\n// Arguments: The pattern to look for, which route inside the page directory\r\n// we want to display\r\n\r\nroutes\r\n  .add('/', '/login')\r\n  .add('/home', 'home')\r\n  .add('/about', '/about')\r\n  .add('/userProfile/:value', '/userProfile')\r\n  .add('/feedback', '/feedback')\r\n  .add('/admin', '/admin')\r\n  .add('/new', '/newQuestion')\r\n  .add('/questions/:value', '/showQuestion')\r\n  .add('/search/:value', '/home')\r\n  .add('/leaderboard', '/leaderboard')\r\n  .add('/register', '/register');\r\n\r\nmodule.exports = routes;\r\n","const MobileDetect = require('mobile-detect');\r\nconst { Responsive } = require('semantic-ui-react');\r\n\r\nconst isMobileSSR = (req) => {\r\n    const md = new MobileDetect(req.headers[\"user-agent\"]);\r\n    console.log(md);\r\n    return !!md.mobile();\r\n}\r\n\r\nconst getWidthFactory = (isMobileFromSSR) => () => {\r\n    const isSSR = typeof window === \"undefined\";\r\n    const ssrValue = isMobileFromSSR\r\n      ? Responsive.onlyMobile.maxWidth\r\n      : Responsive.onlyTablet.minWidth;\r\n    return isSSR ? ssrValue : window.innerWidth;\r\n};\r\n\r\n export { isMobileSSR, getWidthFactory };\r\n","module.exports = require(\"lodash\");","module.exports = require(\"mobile-detect\");","module.exports = require(\"next-cookies\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"web3\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AASA;AACA;AAxCA;AACA;AAyCA;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AAPA;AAgBA;AACA;AA1GA;AACA;AA2GA;;;;;;;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AAbA;AACA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAfA;AACA;AAgBA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AAAA;AACA;AAJA;AAKA;AAAA;AALA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAxBA;AACA;AAyBA;AACA;AACA;AACA;AAFA;AAYA;AAAA;AAVA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAIA;AAAA;AAIA;AACA;AAzCA;AACA;AA0CA;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AAPA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AAKA;AACA;AAzJA;AACA;AA0JA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AACA;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAqDA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AAjEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAHA;AAcA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AA7JA;AACA;AA8JA;;;;;;;;;;;AC1KA;AAGA;AACA;AACA;AACA;AAAA;AAaA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AChBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}