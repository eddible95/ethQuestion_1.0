{"version":3,"file":"static/webpack/static\\development\\pages\\showQuestion.js.1fed72bb130ddf754fe8.hot-update.js","sources":["webpack:///./ethereum/web3.js"],"sourcesContent":["// Imports Web3 API\r\nimport Web3 from 'web3';\r\n\r\n// New instance of Web3 with the provider that is automatically provided to us by MetaMask inside the browser.\r\n// This makes the assumption that the user has MetaMask.\r\nlet web3;\r\n\r\n// Modern DApp broswer\r\nif (typeof window !== 'undefined' && window.ethereum) {\r\n  let instance = new Web3(window.ethereum);\r\n  try {\r\n    // Request account access if needed\r\n    window.ethereum.enable();\r\n    // Acccounts now exposed\r\n    web3 = instance;\r\n  } catch (error) {\r\n    // User denied account access\r\n    alert('Please allow access for the app to work');\r\n  }\r\n} else if (typeof window !== 'undefined' && window.web3) {\r\n  //Legacy DApp browser\r\n  web3 = new Web3(web3.currentProvider);\r\n  // Acccounts always exposed\r\n  resolve(web3);\r\n} else {\r\n  // Metamask not available\r\n  const provider = new Web3.providers.HttpProvider('http://192.168.86.248:8543');\r\n  web3 = new Web3(provider);\r\n  console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n}\r\n\r\nexport default web3;\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}