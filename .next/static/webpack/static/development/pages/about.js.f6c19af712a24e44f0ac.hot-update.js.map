{"version":3,"file":"static/webpack/static\\development\\pages\\about.js.f6c19af712a24e44f0ac.hot-update.js","sources":["webpack:///./pages/about.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Segment, Container, Divider, Header, Modal, Button, Loader, Embed, Icon } from 'semantic-ui-react';\r\nimport AccountIssueModal from '../components/AccountIssueModal';\r\nimport Layout from '../components/Layout';\r\nimport web3 from '../ethereum/web3';\r\nimport factory from '../ethereum/factory';\r\nimport Profile from '../ethereum/profile';\r\nimport credentials from '../ethereum/credentials';\r\nimport cookies from 'next-cookies';\r\n\r\nclass AboutPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n      loading: true,\r\n      accountType: null\r\n    };\r\n  }\r\n\r\n  static async getInitialProps(props) {\r\n    return { isLogin: cookies(props).login || '' , account: cookies(props).wallet || '' };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (typeof web3 === 'undefined') {\r\n      this.setState({ loading: false })\r\n      return\r\n    }\r\n    let login = false;\r\n    if (this.props.isLogin) {\r\n      login = true;\r\n      // Get Account Type\r\n      let profileAddress = await factory.methods.getProfile(this.props.account).call();\r\n      let profile = Profile(profileAddress);\r\n      let accountType = await profile.methods.getAccountType().call();\r\n      accountType == 0 ? accountType = \"Admin\" : accountType = \"User\"\r\n      this.setState( { login: login });\r\n      this.setState( { accountType: accountType });\r\n    }\r\n    this.setState( { loading: false });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.login) {\r\n      return (\r\n        <Layout accountType={this.state.accountType} page={'About'}>\r\n          <Container>\r\n            <Divider hidden/>\r\n            <Segment raised>\r\n              <Header as='h2'textAlign='center'>\r\n                What Can I Do Here?\r\n              </Header>\r\n            </Segment>\r\n            <Header as='h3' textAlign='left'>\r\n              <Icon name='pencil alternate'/>Ask New Question\r\n            </Header>\r\n            <Divider />\r\n            <p style={{fontSize:'16px'}}>\r\n              You need to have at least <b> 1 EQT</b> as the reward for the question. If your question has no answers provided within the duration specified,\r\n              the reward will be returned to you. Do note that you cannot ask <b>Assignments </b> or <b>Tutorial Questions</b>.\r\n              Fraudulent accounts will be <b>removed from the system and banned from future use</b>.\r\n            </p>\r\n            <Header as='h3' textAlign='left'>\r\n              <Icon name='add'/>Answer Questions\r\n            </Header>\r\n            <Divider />\r\n            <p style={{fontSize:'16px'}}>\r\n              You can provide answers to questions asked by others on the Home page. Do note that you do not need to use any EQT\r\n              to provide an answer.\r\n            </p>\r\n            <Header as='h3' textAlign='left'>\r\n              <Icon name='thumbs up'/>Approving Answers\r\n            </Header>\r\n            <Divider />\r\n            <p style={{fontSize:'16px'}}>\r\n              You can approve answers provided for each question druing <b>Voting Phase</b> depending on its relevance and usefulness.\r\n              A deposit of <b>1 EQT</b> will be deducted for each answer you approve. The deposit will be returned to you only if\r\n              the answer you approved of is eventually awarded the reward. All forefited deposits will be distributed among other\r\n              users who approved the answer that is awarded.\r\n            </p>\r\n            <Divider hidden/>\r\n            <Segment raised>\r\n              <Header as='h2'textAlign='center'>\r\n                What is EthQuestionToken (EQT)?\r\n              </Header>\r\n            </Segment>\r\n            <p style={{fontSize:'16px'}}>\r\n              Cryptocurrency that is used within the Question Answering System and can be exchanged using Ether(s).\r\n              Each user is given <b>10 EQTs</b> upon signing up. User can be rewarded additional EQTs by providing answers with the highest approvals\r\n              for each question.\r\n            </p>\r\n            <Divider hidden/>\r\n            <Segment raised>\r\n              <Header as='h2' textAlign='center'>\r\n                <Icon name='video'/>Watch For More\r\n              </Header>\r\n            </Segment>\r\n            <Embed\r\n              id='pdRTt2QabOg'\r\n              source='youtube'\r\n            />\r\n          </Container>\r\n        </Layout>\r\n      )\r\n    } else {\r\n      return (\r\n        <Layout accountType={this.state.accountType}>\r\n          <AccountIssueModal loading={this.state.loading} login={this.state.login} />\r\n        </Layout>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default AboutPage;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;;;;;;;;;;AAMA;;;;;AACA;AAAA;AAAA;;;;AAGA;AACA;AAAA;;;;;AACA;AACA;;AACA;AACA;;AADA;AACA;;AACA;AACA;;AADA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AAFA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;;;;;;AA5FA;;;;;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAZA;AACA;AAwGA;;;;A","sourceRoot":""}