{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport React, { Component } from 'react';\nimport MobileDetect from 'mobile-detect';\nimport { Container, Responsive, Sidebar, Divider } from 'semantic-ui-react';\nimport { getWidthFactory } from '../utils/device';\nimport DesktopHeader from './DesktopHeader';\nimport MobileHeader from \"./MobileHeader\";\nimport Footer from './Footer';\n\nclass DesktopContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n  }\n\n  render() {\n    const {\n      accountType,\n      page,\n      getWidth,\n      contextRef,\n      children\n    } = this.props;\n    return __jsx(Responsive, {\n      fireOnMount: true,\n      getWidth: getWidth,\n      minWidth: Responsive.onlyTablet.minWidth\n    }, __jsx(DesktopHeader, {\n      accountType: accountType,\n      contextRef: contextRef,\n      page: page\n    }, __jsx(Container, {\n      style: {\n        minHeight: \"100vh\",\n        width: \"100vw\"\n      }\n    }, children)));\n  }\n\n}\n\nclass MobileContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      sidebarOpened: false\n    });\n\n    _defineProperty(this, \"handleSidebarHide\", () => this.setState({\n      sidebarOpened: false\n    }));\n\n    _defineProperty(this, \"handleToggle\", () => this.setState({\n      sidebarOpened: true\n    }));\n  }\n\n  render() {\n    const {\n      accountType,\n      getWidth,\n      contextRef,\n      children\n    } = this.props;\n    return __jsx(Responsive, {\n      fireOnMount: true,\n      as: Sidebar.Pushable,\n      getWidth: getWidth,\n      maxWidth: Responsive.onlyMobile.maxWidth\n    }, __jsx(MobileHeader, {\n      contextRef: contextRef,\n      accountType: accountType,\n      handleSidebarHide: this.handleSidebarHide,\n      handleToggle: this.handleToggle,\n      sidebarOpened: this.state.sidebarOpened\n    }, __jsx(Container, {\n      style: {\n        paddingTop: \"10em\",\n        minHeight: \"100vh\",\n        width: \"100vw\"\n      }\n    }, children)));\n  }\n\n}\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleContextRef\", contextRef => this.setState({\n      contextRef\n    }));\n  }\n\n  static async getInitialProps(props) {\n    let isMobileFromSSR = false;\n\n    if (props.req) {\n      const device = props.req.headers[\"user-agent\"];\n      const md = new MobileDetect(device);\n      isMobileFromSSR = !!md.mobile();\n    }\n\n    return {\n      isMobileFromSSR\n    };\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n    }), __jsx(\"link\", {\n      rel: \"shortcut icon\",\n      href: \"/static/ethIcon.ico\"\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1\"\n    }), __jsx(\"title\", null, \"Block-Chain Based Question Answering System\")), __jsx(\"div\", {\n      ref: this.handleContextRef\n    }, __jsx(DesktopContainer, {\n      accountType: this.props.accountType,\n      getWidth: getWidthFactory(this.props.isMobileFromSSR),\n      page: this.props.page\n    }, this.props.children), __jsx(MobileContainer, {\n      accountType: this.props.accountType,\n      getWidth: getWidthFactory(this.props.isMobileFromSSR)\n    }, this.props.children)), __jsx(Divider, {\n      hidden: true\n    }), __jsx(Footer, null));\n  }\n\n}\n\nexport default Layout;","map":{"version":3,"sources":["C:/Users/edd1e/Desktop/ethQuestion_1.0/components/Layout.js"],"names":["Head","React","Component","MobileDetect","Container","Responsive","Sidebar","Divider","getWidthFactory","DesktopHeader","MobileHeader","Footer","DesktopContainer","render","accountType","page","getWidth","contextRef","children","props","onlyTablet","minWidth","minHeight","width","MobileContainer","sidebarOpened","setState","Pushable","onlyMobile","maxWidth","handleSidebarHide","handleToggle","state","paddingTop","Layout","constructor","getInitialProps","isMobileFromSSR","req","device","headers","md","mobile","handleContextRef"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport React, { Component } from 'react';\r\nimport MobileDetect from 'mobile-detect';\r\nimport { Container, Responsive, Sidebar, Divider } from 'semantic-ui-react';\r\nimport { getWidthFactory } from '../utils/device';\r\nimport DesktopHeader from './DesktopHeader';\r\nimport MobileHeader from \"./MobileHeader\"\r\nimport Footer from './Footer';\r\n\r\nclass DesktopContainer extends Component {\r\n  state = {}\r\n\r\n  render() {\r\n    const { accountType, page, getWidth, contextRef, children } = this.props;\r\n    return(\r\n      <Responsive fireOnMount getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\r\n        <DesktopHeader accountType={accountType} contextRef={contextRef} page={page}>\r\n          <Container style={{minHeight:\"100vh\", width:\"100vw\"}}>\r\n            {children}\r\n          </Container>\r\n        </DesktopHeader>\r\n      </Responsive>\r\n    );\r\n  }\r\n}\r\n\r\nclass MobileContainer extends Component {\r\n  state = { sidebarOpened: false };\r\n\r\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\r\n\r\n  handleToggle = () => this.setState({ sidebarOpened: true })\r\n\r\n  render() {\r\n    const { accountType, getWidth, contextRef, children } = this.props;\r\n\r\n    return(\r\n      <Responsive fireOnMount as={Sidebar.Pushable} getWidth={getWidth} maxWidth={Responsive.onlyMobile.maxWidth}>\r\n          <MobileHeader contextRef={contextRef}\r\n                      accountType={accountType}\r\n                      handleSidebarHide={this.handleSidebarHide}\r\n                      handleToggle={this.handleToggle}\r\n                      sidebarOpened={this.state.sidebarOpened}>\r\n              <Container style={{ paddingTop: \"10em\", minHeight:\"100vh\", width:\"100vw\"}}>\r\n                {children}\r\n              </Container>\r\n          </MobileHeader>\r\n      </Responsive>\r\n    );\r\n  }\r\n}\r\n\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  };\r\n  static async getInitialProps(props) {\r\n    let isMobileFromSSR = false;\r\n    if(props.req){\r\n        const device = props.req.headers[\"user-agent\"];\r\n        const md = new MobileDetect(device);\r\n        isMobileFromSSR = !!md.mobile();\r\n    }\r\n    return { isMobileFromSSR };\r\n  }\r\n  handleContextRef = contextRef => this.setState({ contextRef });\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Head>\r\n          <link\r\n              rel=\"stylesheet\"\r\n              href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\r\n          />\r\n          <link rel=\"shortcut icon\" href=\"/static/ethIcon.ico\" />\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n          <title>Block-Chain Based Question Answering System</title>\r\n        </Head>\r\n        <div ref={this.handleContextRef}>\r\n          <DesktopContainer accountType={this.props.accountType} getWidth={getWidthFactory(this.props.isMobileFromSSR)} page={this.props.page}>\r\n            {this.props.children}\r\n          </DesktopContainer>\r\n\r\n          <MobileContainer accountType={this.props.accountType} getWidth={getWidthFactory(this.props.isMobileFromSSR)}>\r\n            {this.props.children}\r\n          </MobileContainer>\r\n        </div>\r\n        <Divider hidden/>\r\n        <Footer/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}