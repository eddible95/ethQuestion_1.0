{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Menu, Segment, Container, Icon, Header, Grid, Input, Button, Sticky, Rail, Sidebar } from 'semantic-ui-react';\nimport { Link, Router } from '../routes';\n\nclass HeaderMobile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.keyPress = this.keyPress.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  keyPress(e) {\n    if (e.keyCode == 13) {\n      if (this.state.value != '') Router.pushRoute(`/${'search/' + encodeURIComponent(this.state.value)}`);\n    }\n  }\n\n  renderSideBar() {\n    const {\n      handleSidebarHide,\n      handleToggle,\n      sidebarOpened,\n      children\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Sidebar.Pushable, null, __jsx(Sidebar, {\n      as: Menu,\n      animation: \"push\",\n      inverted: true,\n      onHide: handleSidebarHide,\n      vertical: true,\n      visible: sidebarOpened,\n      width: \"thin\",\n      icon: \"labeled\"\n    }, __jsx(Menu.Item, {\n      header: true\n    }, __jsx(\"h3\", null, \"Question Answering System\")), __jsx(Link, {\n      route: \"/home\"\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, __jsx(Icon, {\n      name: \"home\"\n    }), \"Home\")), __jsx(Link, {\n      route: \"/about\"\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, __jsx(Icon, {\n      name: \"question\"\n    }), \"About\")), __jsx(Link, {\n      route: \"/userProfile\"\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, __jsx(Icon, {\n      name: \"user\"\n    }), \"Profile\")), __jsx(Link, {\n      route: \"/new\"\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, __jsx(Icon, {\n      name: \"pencil alternate\"\n    }), \"Ask Question\")), __jsx(Link, {\n      route: \"/feedback\"\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, __jsx(Icon, {\n      name: \"comment\"\n    }), \"Feedback\")), __jsx(Link, {\n      route: \"/leaderboard\"\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, __jsx(Icon, {\n      name: \"trophy\"\n    }), \"Leaderboard\")), this.props.accountType == \"Admin\" ? __jsx(Link, {\n      route: \"/admin\"\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, __jsx(Icon, {\n      name: \"settings\"\n    }), \"Admin Settings\")) : null, __jsx(Link, {\n      route: \"/login\"\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, __jsx(Icon, {\n      name: \"power off\"\n    }), \"Log Out\"))), __jsx(Sidebar.Pusher, {\n      dimmed: sidebarOpened,\n      style: {\n        minHeight: '100vh'\n      }\n    }, __jsx(Rail, {\n      internal: true,\n      position: \"left\",\n      attached: true,\n      style: {\n        top: \"auto\",\n        height: \"auto\",\n        width: \"100%\"\n      }\n    }, __jsx(Sticky, {\n      context: this.props.contextRef\n    }, __jsx(Segment, {\n      inverted: true,\n      vertical: true,\n      style: {\n        minHeight: 50,\n        padding: '1em 0em 0em 0em',\n        textAlign: 'flex-end'\n      }\n    }, __jsx(Menu, {\n      inverted: true,\n      fixed: \"top\",\n      size: \"large\",\n      secondary: true\n    }, __jsx(Container, null, __jsx(Menu.Item, {\n      onClick: handleToggle\n    }, __jsx(Icon, {\n      name: \"sidebar\"\n    })), __jsx(Menu.Item, {\n      header: true,\n      style: {\n        padding: 0\n      }\n    }, __jsx(Icon, {\n      name: \"ethereum\",\n      style: {\n        float: 'left'\n      }\n    }), \"Ethereum Question Answering System\"))), __jsx(Container, {\n      style: {\n        marginTop: '40px'\n      }\n    }, __jsx(Grid, {\n      inverted: true,\n      style: {\n        padding: '0em 0.7em 0em 1.5em'\n      },\n      verticalAlign: \"bottom\"\n    }, __jsx(Grid.Row, null, __jsx(Menu, {\n      secondary: true,\n      inverted: true,\n      fluid: true\n    }, __jsx(Menu.Item, null, __jsx(Input, {\n      icon: __jsx(Icon, {\n        name: \"search\",\n        link: true,\n        onClick: () => {\n          if (this.state.value != '') {\n            Router.pushRoute(`/${'search/' + encodeURIComponent(this.state.value)}`);\n          }\n        }\n      }),\n      placeholder: \"Search...\",\n      onKeyDown: this.keyPress,\n      onChange: this.handleChange\n    })), __jsx(Button, {\n      compact: true,\n      floated: \"right\",\n      inverted: true,\n      color: \"orange\",\n      onClick: () => {\n        Router.pushRoute('/new');\n      }\n    }, __jsx(Icon, {\n      name: \"pencil alternate\",\n      circular: true,\n      size: \"small\"\n    }), \"Ask Question\")))))))), children)));\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, this.renderSideBar());\n  }\n\n}\n\nexport default HeaderMobile;","map":null,"metadata":{},"sourceType":"module"}