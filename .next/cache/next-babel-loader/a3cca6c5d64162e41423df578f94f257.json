{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Button, Form, Container, Divider, Input, Embed, Segment, Message, Icon, Modal, Header, Loader, Grid } from 'semantic-ui-react';\nimport LoginLayout from '../components/LoginLayout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport credentials from '../ethereum/credentials';\nimport { Router } from '../routes';\nimport { validate } from '../utils/functions';\nimport cookies from 'next-cookies';\n\nvar passwordHash = require('password-hash');\n\nvar LoginPage = /*#__PURE__*/function (_Component) {\n  _inherits(LoginPage, _Component);\n\n  var _super = _createSuper(LoginPage);\n\n  function LoginPage() {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      emailAddress: '',\n      password: '',\n      loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee() {\n      var _passwordHash, _walletAddress, account;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              }); // Check for valid NTU Student Email Address\n\n\n              if (!validate(_this.state.emailAddress)) {\n                _context.next = 35;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(credentials.methods.getPasswordHash(_this.state.emailAddress).call());\n\n            case 5:\n              _passwordHash = _context.sent;\n              _context.t0 = passwordHash.verify(_this.state.password, _passwordHash);\n\n              if (!_context.t0) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(credentials.methods.emailNotBlackList(_this.state.emailAddress).call());\n\n            case 10:\n              _context.t0 = !_context.sent;\n\n            case 11:\n              if (!_context.t0) {\n                _context.next = 25;\n                break;\n              }\n\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(credentials.methods.getBinding);\n\n            case 14:\n              _walletAddress = _context.sent;\n              _context.next = 17;\n              return _regeneratorRuntime.awrap(credentials.methods.getEthWallet(_this.state.emailAddress).call());\n\n            case 17:\n              account = _context.sent;\n              _context.next = 20;\n              return _regeneratorRuntime.awrap(web3.eth.personal.unlockAccount(account, _this.state.password, 3600));\n\n            case 20:\n              document.cookie = \"login=\".concat(true, \"; path=/\");\n              document.cookie = \"wallet=\".concat(account, \"; path=/\");\n              Router.pushRoute(\"/home\"); // Automatic redirect the user.\n\n              _context.next = 27;\n              break;\n\n            case 25:\n              _this.setState({\n                errorMessage: \"Wrong Email Address or Email Address Blacklisted\"\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 27:\n              _context.next = 33;\n              break;\n\n            case 29:\n              _context.prev = 29;\n              _context.t1 = _context[\"catch\"](2);\n\n              _this.setState({\n                errorMessage: _context.t1.message\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 33:\n              _context.next = 37;\n              break;\n\n            case 35:\n              _this.setState({\n                errorMessage: \"Invalid Email Address\"\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 37:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 29]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // Delete any existing Cookies\n              document.cookie = \"login=\".concat(false, \"; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT\");\n              document.cookie = \"wallet=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT\";\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"renderForm\",\n    value: function renderForm() {\n      var _this2 = this;\n\n      return __jsx(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '40%'\n        },\n        verticalAlign: \"middle\"\n      }, __jsx(Grid.Column, {\n        style: {\n          maxWidth: 450\n        }\n      }, __jsx(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, __jsx(Icon, {\n        name: \"ethereum\"\n      }), \" Login to your account\"), __jsx(Form, {\n        size: \"large\",\n        error: !!this.state.errorMessage\n      }, __jsx(Segment, {\n        stacked: true\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"NTU Student Email Address\"), __jsx(Input, {\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"example@e.ntu.edu.sg\",\n        value: this.state.emailAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            emailAddress: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(Input, {\n        icon: \"key\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            password: event.target.value\n          });\n        }\n      })), __jsx(Modal, {\n        open: this.state.loading,\n        trigger: __jsx(Button, {\n          color: \"blue\",\n          fluid: true,\n          size: \"large\",\n          onClick: this.onSubmit\n        }, \"Login\"),\n        basic: true,\n        size: \"small\"\n      }, __jsx(Header, {\n        icon: \"ethereum\",\n        content: \"Verifying Your Email Address\"\n      }), __jsx(Modal.Content, null, __jsx(Loader, {\n        active: true,\n        inline: \"centered\"\n      }, \"Authenticating Credentials\"))), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }))), __jsx(Message, null, \"Hi there, first time here? Click here to\", __jsx(Modal, {\n        trigger: __jsx(\"a\", {\n          href: \"/register\"\n        }, \" register\"),\n        basic: true,\n        size: \"small\"\n      }, __jsx(Header, {\n        icon: \"ethereum\",\n        content: \"Please Hang On While We Redirect You\"\n      }), __jsx(Modal.Content, null, __jsx(Loader, {\n        active: true,\n        inline: \"centered\"\n      }, \"Redirecting to Registration\"))))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(LoginLayout, null, __jsx(React.Fragment, null, this.renderForm(), __jsx(Divider, {\n        hidden: true\n      }), __jsx(Container, null, __jsx(Header, {\n        as: \"h2\",\n        textAlign: \"center\"\n      }, __jsx(Icon, {\n        name: \"video\"\n      }), \" Watch Video Guide\"), __jsx(Embed, {\n        id: \"jImWp6P62FQ\",\n        source: \"youtube\",\n        aspectRatio: \"16:9\"\n      }))));\n    }\n  }]);\n\n  return LoginPage;\n}(Component);\n\nexport default LoginPage;","map":null,"metadata":{},"sourceType":"module"}