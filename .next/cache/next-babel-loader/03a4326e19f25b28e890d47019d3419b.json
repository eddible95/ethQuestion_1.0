{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button, Form, Container, Divider, Input, Embed, Segment, Message, Icon, Modal, Header, Loader, Grid } from 'semantic-ui-react';\nimport LoginLayout from '../components/LoginLayout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport credentials from '../ethereum/credentials';\nimport { Router } from '../routes';\nimport { validate } from '../utils/functions';\nimport cookies from 'next-cookies';\n\nvar passwordHash = require('password-hash');\n\nclass LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      emailAddress: '',\n      password: '',\n      loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", async () => {\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      }); // Check for valid NTU Student Email Address\n\n      if (validate(this.state.emailAddress)) {\n        try {\n          const _passwordHash = await credentials.methods.getPasswordHash(this.state.emailAddress).call();\n\n          console.log(_passwordHash); // Authenticate the Email Address and ensure Email Address is not blacklisted\n\n          if (passwordHash.verify(this.state.password, _passwordHash) && !(await credentials.methods.emailNotBlackList(this.state.emailAddress).call())) {\n            const _walletAddress = await credentials.methods.getBinding;\n\n            const account = await credentials.methods.getEthWallet(this.state.emailAddress).call();\n            await web3.eth.personal.unlockAccount(account, this.state.password, 3600);\n            document.cookie = `login=${true}; path=/`;\n            document.cookie = `wallet=${account}; path=/`;\n            Router.pushRoute(`/home`); // Automatic redirect the user.\n          } else {\n            this.setState({\n              errorMessage: \"Wrong Email Address or Email Address Blacklisted\"\n            });\n            this.setState({\n              loading: false\n            });\n          }\n        } catch (err) {\n          this.setState({\n            errorMessage: err.message\n          });\n          this.setState({\n            loading: false\n          });\n        }\n      } else {\n        this.setState({\n          errorMessage: \"Invalid Email Address\"\n        });\n        this.setState({\n          loading: false\n        });\n      }\n    });\n  }\n\n  async componentDidMount() {\n    // Delete any existing Cookies\n    document.cookie = `login=${false}; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT`;\n    document.cookie = `wallet=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT`;\n  }\n\n  renderForm() {\n    return __jsx(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '40%'\n      },\n      verticalAlign: \"middle\"\n    }, __jsx(Grid.Column, {\n      style: {\n        maxWidth: 450\n      }\n    }, __jsx(Header, {\n      as: \"h2\",\n      textAlign: \"center\"\n    }, __jsx(Icon, {\n      name: \"ethereum\"\n    }), \" Login to your account\"), __jsx(Form, {\n      size: \"large\",\n      error: !!this.state.errorMessage\n    }, __jsx(Segment, {\n      stacked: true\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"NTU Student Email Address\"), __jsx(Input, {\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"example@e.ntu.edu.sg\",\n      value: this.state.emailAddress,\n      onChange: event => this.setState({\n        emailAddress: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(Input, {\n      icon: \"key\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: event => this.setState({\n        password: event.target.value\n      })\n    })), __jsx(Modal, {\n      open: this.state.loading,\n      trigger: __jsx(Button, {\n        color: \"blue\",\n        fluid: true,\n        size: \"large\",\n        onClick: this.onSubmit\n      }, \"Login\"),\n      basic: true,\n      size: \"small\"\n    }, __jsx(Header, {\n      icon: \"ethereum\",\n      content: \"Verifying Your Email Address\"\n    }), __jsx(Modal.Content, null, __jsx(Loader, {\n      active: true,\n      inline: \"centered\"\n    }, \"Authenticating Credentials\"))), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }))), __jsx(Message, null, \"Hi there, first time here? Click here to\", __jsx(Modal, {\n      trigger: __jsx(\"a\", {\n        href: \"/register\"\n      }, \" register\"),\n      basic: true,\n      size: \"small\"\n    }, __jsx(Header, {\n      icon: \"ethereum\",\n      content: \"Please Hang On While We Redirect You\"\n    }), __jsx(Modal.Content, null, __jsx(Loader, {\n      active: true,\n      inline: \"centered\"\n    }, \"Redirecting to Registration\"))))));\n  }\n\n  render() {\n    return __jsx(LoginLayout, null, __jsx(React.Fragment, null, this.renderForm(), __jsx(Divider, {\n      hidden: true\n    }), __jsx(Container, null, __jsx(Header, {\n      as: \"h2\",\n      textAlign: \"center\"\n    }, __jsx(Icon, {\n      name: \"video\"\n    }), \" Watch Video Guide\"), __jsx(Embed, {\n      id: \"jImWp6P62FQ\",\n      source: \"youtube\",\n      aspectRatio: \"16:9\"\n    }))));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Users/edd1e/Desktop/ethQuestion_1.0/pages/login.js"],"names":["React","Component","Button","Form","Container","Divider","Input","Embed","Segment","Message","Icon","Modal","Header","Loader","Grid","LoginLayout","web3","factory","credentials","Router","validate","cookies","passwordHash","require","LoginPage","emailAddress","password","loading","errorMessage","setState","state","_passwordHash","methods","getPasswordHash","call","console","log","verify","emailNotBlackList","_walletAddress","getBinding","account","getEthWallet","eth","personal","unlockAccount","document","cookie","pushRoute","err","message","componentDidMount","renderForm","height","maxWidth","event","target","value","onSubmit","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form, Container, Divider, Input, Embed,\r\n   Segment, Message, Icon, Modal, Header, Loader, Grid } from 'semantic-ui-react'\r\nimport LoginLayout from '../components/LoginLayout';\r\nimport web3 from '../ethereum/web3';\r\nimport factory from '../ethereum/factory';\r\nimport credentials from '../ethereum/credentials';\r\nimport { Router } from '../routes';\r\nimport { validate } from '../utils/functions';\r\nimport cookies from 'next-cookies';\r\nvar passwordHash = require('password-hash');\r\n\r\nclass LoginPage extends Component {\r\n\r\n  state = {\r\n    emailAddress:'',\r\n    password:'',\r\n    loading: false,\r\n    errorMessage:''\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // Delete any existing Cookies\r\n    document.cookie = `login=${false}; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT`;\r\n    document.cookie = `wallet=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT`;\r\n  };\r\n\r\n  onSubmit = async () => {\r\n    this.setState({ loading: true, errorMessage: '' });\r\n    // Check for valid NTU Student Email Address\r\n    if (validate(this.state.emailAddress)){\r\n      try {\r\n        const _passwordHash = await credentials.methods.getPasswordHash(this.state.emailAddress).call();\r\n        console.log(_passwordHash);\r\n        // Authenticate the Email Address and ensure Email Address is not blacklisted\r\n        if (passwordHash.verify(this.state.password, _passwordHash) && !await credentials.methods.emailNotBlackList(this.state.emailAddress).call()){\r\n          const _walletAddress = await credentials.methods.getBinding\r\n          const account = await credentials.methods.getEthWallet(this.state.emailAddress).call();\r\n          await web3.eth.personal.unlockAccount(account, this.state.password, 3600);\r\n          document.cookie = `login=${true}; path=/`;\r\n          document.cookie = `wallet=${account}; path=/`;\r\n          Router.pushRoute(`/home`); // Automatic redirect the user.\r\n        }\r\n        else {\r\n          this.setState({ errorMessage: \"Wrong Email Address or Email Address Blacklisted\" });\r\n          this.setState({ loading: false });\r\n        }\r\n      } catch (err) {\r\n        this.setState({ errorMessage: err.message });\r\n        this.setState({ loading: false });\r\n      }\r\n    } else {\r\n      this.setState({ errorMessage: \"Invalid Email Address\" });\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  renderForm() {\r\n    return(\r\n      <Grid textAlign='center' style={{ height: '40%' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as='h2' textAlign='center'>\r\n            <Icon name='ethereum' /> Login to your account\r\n          </Header>\r\n          <Form size='large' error={!!this.state.errorMessage}>\r\n            <Segment stacked>\r\n              <Form.Field>\r\n                <label>NTU Student Email Address</label>\r\n                <Input\r\n                    icon='user'\r\n                    iconPosition='left'\r\n                    placeholder='example@e.ntu.edu.sg'\r\n                    value={this.state.emailAddress}\r\n                    onChange={event => this.setState({ emailAddress: event.target.value})}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Input\r\n                    icon='key'\r\n                    iconPosition='left'\r\n                    placeholder='Password'\r\n                    type='password'\r\n                    value={this.state.password}\r\n                    onChange={event => this.setState({ password: event.target.value})}\r\n                />\r\n              </Form.Field>\r\n              <Modal open={this.state.loading} trigger={<Button color='blue' fluid size='large' onClick={this.onSubmit}>Login</Button>} basic size='small'>\r\n                <Header icon='ethereum' content='Verifying Your Email Address' />\r\n                <Modal.Content>\r\n                  <Loader active inline=\"centered\">\r\n                    Authenticating Credentials\r\n                  </Loader>\r\n                </Modal.Content>\r\n              </Modal>\r\n              <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            Hi there, first time here? Click here to\r\n            <Modal trigger={<a href=\"/register\"> register</a>} basic size='small'>\r\n              <Header icon='ethereum' content='Please Hang On While We Redirect You' />\r\n              <Modal.Content>\r\n                <Loader active inline=\"centered\">\r\n                  Redirecting to Registration\r\n                </Loader>\r\n              </Modal.Content>\r\n            </Modal>\r\n          </Message>\r\n        </Grid.Column>\r\n    </Grid>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <LoginLayout>\r\n          <React.Fragment>\r\n            {this.renderForm()}\r\n            <Divider hidden/>\r\n            <Container>\r\n              <Header as='h2' textAlign='center'>\r\n                <Icon name='video' /> Watch Video Guide\r\n              </Header>\r\n              <Embed\r\n                id='jImWp6P62FQ'\r\n                source='youtube'\r\n                aspectRatio='16:9'\r\n              />\r\n            </Container>\r\n          </React.Fragment>\r\n      </LoginLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}