{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Menu, Icon, Input, Segment, Sticky, Container, Button, Dropdown, Grid } from 'semantic-ui-react';\nimport { Link, Router } from '../routes';\n\nclass DesktopHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.keyPress = this.keyPress.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  keyPress(e) {\n    if (e.keyCode == 13) {\n      if (this.state.value != '') Router.pushRoute(`/${'search/' + encodeURIComponent(this.state.value)}`);\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Segment, {\n      inverted: true,\n      style: {\n        marginBottom: '0px',\n        fontSize: '20px',\n        borderRadius: '0px',\n        border: '0px',\n        paddingRight: '5%'\n      },\n      as: \"h1\",\n      textAlign: \"center\"\n    }, __jsx(Icon, {\n      name: \"ethereum\"\n    }), \"Block-Chain Based Question Answering System\", __jsx(Button, {\n      compact: true,\n      floated: \"right\",\n      inverted: true,\n      color: \"orange\",\n      onClick: () => {\n        Router.pushRoute('/');\n      }\n    }, __jsx(Icon, {\n      name: \"user\",\n      circular: true,\n      size: \"small\"\n    }), \"Log Out\")), __jsx(Sticky, {\n      context: this.props.contextRef\n    }, __jsx(Menu, {\n      inverted: true,\n      size: \"massive\",\n      fluid: true,\n      style: {\n        marginTop: '0px',\n        borderRadius: '0px',\n        border: '0px',\n        paddingLeft: '5%',\n        paddingRight: '5%'\n      }\n    }, __jsx(Link, {\n      route: \"/home\"\n    }, __jsx(Menu.Item, {\n      name: \"Home\",\n      icon: \"home\",\n      active: this.props.page === 'Home',\n      color: \"orange\"\n    })), __jsx(Link, {\n      route: \"/about\"\n    }, __jsx(Menu.Item, {\n      name: \"About\",\n      icon: \"question\",\n      active: this.props.page === 'About',\n      color: \"orange\"\n    })), __jsx(Link, {\n      route: \"/userProfile\"\n    }, __jsx(Menu.Item, {\n      name: \"Profile\",\n      icon: \"user\",\n      active: this.props.page === 'Profile',\n      color: \"orange\"\n    })), __jsx(Link, {\n      route: \"/new\"\n    }, __jsx(Menu.Item, {\n      name: \"Ask Question\",\n      icon: \"pencil alternate\",\n      active: this.props.page === 'New',\n      color: \"orange\"\n    })), __jsx(Link, {\n      route: \"/feedback\"\n    }, __jsx(Menu.Item, {\n      name: \"Feedback\",\n      icon: \"comment\",\n      active: this.props.page === 'Feedback',\n      color: \"orange\"\n    })), __jsx(Link, {\n      route: \"/leaderboard\"\n    }, __jsx(Menu.Item, {\n      name: \"Leaderboard\",\n      icon: \"trophy\",\n      active: this.props.page === 'Leaderboard',\n      color: \"orange\"\n    })), this.props.accountType == \"Admin\" ? __jsx(Link, {\n      route: \"/admin\"\n    }, __jsx(Menu.Item, {\n      name: \"Admin Options\",\n      icon: \"settings\",\n      active: this.props.page === 'Admin',\n      color: \"orange\"\n    })) : null, __jsx(Menu.Menu, {\n      position: \"right\"\n    }, __jsx(Menu.Item, null, __jsx(Input, {\n      icon: __jsx(Icon, {\n        name: \"search\",\n        link: true,\n        onClick: () => {\n          if (this.state.value != '') {\n            Router.pushRoute(`/${'search/' + encodeURIComponent(this.state.value)}`);\n          }\n        }\n      }),\n      placeholder: \"Search...\",\n      onKeyDown: this.keyPress,\n      onChange: this.handleChange\n    }))))), this.props.children);\n  }\n\n}\n\nexport default DesktopHeader;","map":null,"metadata":{},"sourceType":"module"}