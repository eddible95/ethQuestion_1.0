{"ast":null,"code":"// Using the ipfs.infura.io node\nconst IPFS = require('ipfs-http-client');\n\nconst ipfs = new IPFS({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n}); // Save document to IPFS and returns its hash value to be stored on the blockchain\n\nconst getIpfsHash = data => {\n  return new Promise((resolve, reject) => {\n    ipfs.add(data, (error, result) => {\n      if (error) {\n        return reject(error);\n      }\n\n      resolve(result[0].hash);\n    });\n  });\n}; // Retrieve an image from the hash value\n\n\nconst convertToImage = hash => {\n  return new Promise((resolve, reject) => {\n    ipfs.cat(hash, (error, result) => {\n      if (error) {\n        return reject(error);\n      }\n\n      resolve(\"data:image/jpeg;base64,\" + Buffer(result).toString('base64'));\n    });\n  });\n}; // Retrieve the document from its hash value\n\n\nconst getString = hash => {\n  return new Promise((resolve, reject) => {\n    ipfs.cat(hash, (error, result) => {\n      if (error) {\n        return reject(error);\n      }\n\n      resolve(result.toString());\n    });\n  });\n};\n\nexport { ipfs, getIpfsHash, convertToImage, getString };","map":null,"metadata":{},"sourceType":"module"}