{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Menu, Icon, Input, Segment, Sticky, Container, Button, Dropdown, Grid } from 'semantic-ui-react';\nimport { Link, Router } from '../routes';\n\nclass DesktopHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.keyPress = this.keyPress.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  keyPress(e) {\n    if (e.keyCode == 13) {\n      if (this.state.value != '') Router.pushRoute(`/${'search/' + encodeURIComponent(this.state.value)}`);\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Segment, {\n      inverted: true,\n      style: {\n        marginBottom: '0px',\n        fontSize: '20px',\n        borderRadius: '0px',\n        border: '0px',\n        paddingRight: '5%'\n      },\n      as: \"h1\",\n      textAlign: \"center\"\n    }, __jsx(Icon, {\n      name: \"ethereum\"\n    }), \"Block-Chain Based Question Answering System\", __jsx(Button, {\n      compact: true,\n      floated: \"right\",\n      inverted: true,\n      color: \"orange\",\n      onClick: () => {\n        Router.pushRoute('/');\n      }\n    }, __jsx(Icon, {\n      name: \"user\",\n      circular: true,\n      size: \"small\"\n    }), \"Log Out\")), __jsx(Sticky, {\n      context: this.props.contextRef\n    }, __jsx(Menu, {\n      inverted: true,\n      size: \"massive\",\n      fluid: true,\n      style: {\n        marginTop: '0px',\n        borderRadius: '0px',\n        border: '0px',\n        paddingLeft: '5%',\n        paddingRight: '5%'\n      }\n    }, __jsx(Link, {\n      route: \"/home\"\n    }, __jsx(Menu.Item, {\n      name: \"Home\",\n      icon: \"home\",\n      active: this.props.page === 'Home',\n      color: \"orange\"\n    })), __jsx(Link, {\n      route: \"/about\"\n    }, __jsx(Menu.Item, {\n      name: \"About\",\n      icon: \"question\",\n      active: this.props.page === 'About',\n      color: \"orange\"\n    })), __jsx(Link, {\n      route: \"/userProfile\"\n    }, __jsx(Menu.Item, {\n      name: \"Profile\",\n      icon: \"user\",\n      active: this.props.page === 'Profile',\n      color: \"orange\"\n    })), __jsx(Link, {\n      route: \"/new\"\n    }, __jsx(Menu.Item, {\n      name: \"Ask Question\",\n      icon: \"pencil alternate\",\n      active: this.props.page === 'New',\n      color: \"orange\"\n    })), __jsx(Link, {\n      route: \"/feedback\"\n    }, __jsx(Menu.Item, {\n      name: \"Feedback\",\n      icon: \"comment\",\n      active: this.props.page === 'Feedback',\n      color: \"orange\"\n    })), __jsx(Link, {\n      route: \"/leaderboard\"\n    }, __jsx(Menu.Item, {\n      name: \"Leaderboard\",\n      icon: \"trophy\",\n      active: this.props.page === 'Leaderboard',\n      color: \"orange\"\n    })), this.props.accountType == \"Admin\" ? __jsx(Link, {\n      route: \"/admin\"\n    }, __jsx(Menu.Item, {\n      name: \"Admin Options\",\n      icon: \"settings\",\n      active: this.props.page === 'Admin',\n      color: \"orange\"\n    })) : null, __jsx(Menu.Menu, {\n      position: \"right\"\n    }, __jsx(Menu.Item, null, __jsx(Input, {\n      icon: __jsx(Icon, {\n        name: \"search\",\n        link: true,\n        onClick: () => {\n          if (this.state.value != '') {\n            Router.pushRoute(`/${'search/' + encodeURIComponent(this.state.value)}`);\n          }\n        }\n      }),\n      placeholder: \"Search...\",\n      onKeyDown: this.keyPress,\n      onChange: this.handleChange\n    }))))), this.props.children);\n  }\n\n}\n\nexport default DesktopHeader;","map":{"version":3,"sources":["C:/Users/edd1e/Desktop/ethQuestion_1.0/components/DesktopHeader.js"],"names":["React","Component","Menu","Icon","Input","Segment","Sticky","Container","Button","Dropdown","Grid","Link","Router","DesktopHeader","constructor","props","state","value","handleChange","bind","keyPress","e","setState","target","keyCode","pushRoute","encodeURIComponent","render","marginBottom","fontSize","borderRadius","border","paddingRight","contextRef","marginTop","paddingLeft","page","accountType","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Menu, Icon, Input, Segment, Sticky, Container, Button, Dropdown, Grid } from 'semantic-ui-react';\r\nimport { Link, Router } from '../routes';\r\n\r\nclass DesktopHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value:''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.keyPress = this.keyPress.bind(this);\r\n   }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value });\r\n   }\r\n\r\n  keyPress(e){\r\n    if(e.keyCode == 13){\r\n     if (this.state.value!='')\r\n         Router.pushRoute(`/${'search/'+encodeURIComponent(this.state.value)}`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Segment inverted style={{marginBottom:'0px', fontSize:'20px', borderRadius:'0px', border:'0px', paddingRight:'5%'}} as='h1' textAlign='center'>\r\n          <Icon name='ethereum' />Block-Chain Based Question Answering System\r\n          <Button compact floated='right' inverted color='orange' onClick={()=>{Router.pushRoute('/')}}><Icon name='user' circular size='small'/>Log Out</Button>\r\n        </Segment>\r\n        <Sticky context={this.props.contextRef}>\r\n            <Menu inverted size='massive' fluid style={{marginTop:'0px', borderRadius:'0px', border:'0px', paddingLeft:'5%', paddingRight:'5%'}}>\r\n              <Link route=\"/home\">\r\n                <Menu.Item\r\n                  name='Home'\r\n                  icon='home'\r\n                  active = {this.props.page === 'Home'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route=\"/about\">\r\n                <Menu.Item\r\n                  name='About'\r\n                  icon='question'\r\n                  active = {this.props.page === 'About'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route='/userProfile'>\r\n                <Menu.Item\r\n                  name='Profile'\r\n                  icon='user'\r\n                  active = {this.props.page === 'Profile'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route=\"/new\">\r\n                <Menu.Item\r\n                  name='Ask Question'\r\n                  icon='pencil alternate'\r\n                  active = {this.props.page === 'New'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route=\"/feedback\">\r\n                <Menu.Item\r\n                  name='Feedback'\r\n                  icon='comment'\r\n                  active = {this.props.page === 'Feedback'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              <Link route=\"/leaderboard\">\r\n                <Menu.Item\r\n                  name='Leaderboard'\r\n                  icon='trophy'\r\n                  active = {this.props.page === 'Leaderboard'}\r\n                  color='orange'\r\n                />\r\n              </Link>\r\n              {this.props.accountType == \"Admin\" ? <Link route=\"/admin\">\r\n                                                    <Menu.Item\r\n                                                      name='Admin Options'\r\n                                                      icon='settings'\r\n                                                      active = {this.props.page === 'Admin'}\r\n                                                      color='orange'\r\n                                                      />\r\n                                                   </Link>\r\n                                                 : null }\r\n              <Menu.Menu position=\"right\">\r\n                <Menu.Item>\r\n                  <Input icon={<Icon name=\"search\" link onClick={() => {\r\n                   if (this.state.value!='') {\r\n                     Router.pushRoute(`/${'search/'+encodeURIComponent(this.state.value)}`);\r\n                   }\r\n                  }}/>}\r\n                  placeholder=\"Search...\"\r\n                  onKeyDown={this.keyPress}\r\n                  onChange={this.handleChange}\r\n                   />\r\n                </Menu.Item>\r\n              </Menu.Menu>\r\n            </Menu>\r\n        </Sticky>\r\n        {this.props.children}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DesktopHeader;\r\n"]},"metadata":{},"sourceType":"module"}